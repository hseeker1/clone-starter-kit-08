{"version":3,"sources":["../node_modules/caver-js/packages sync /^/.*/src/index/.js$","routes/About.js","components/Movie.js","routes/Home.js","routes/dev_test.js","components/Navigation.js","components/Likedislike.js","components/Review.js","components/WriteReview.js","routes/Detail.js","routes/Login.js","App.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","About","className","Movie","content_id","title","year","summary","poster","genres","to","pathname","state","src","alt","genre","index","key","slice","Home","isLoading","movies","getMovies","axios","get","data","setState","this","console","log","movie","toString","medium_cover_image","React","Component","dev_test","href","target","rel","Navigation","walletdb","uname","accnt","mywallet","myaccnt","mybalklay","mybalPCT","mynetwork","Likedislike","review_id","login_id","owner_id","useState","likecnt","setlikecnt","Dislikecnt","setDislikecnt","ownerchk","setownerchk","likedisable","setLikeDisable","Dislikedisable","setDislikeDisable","useEffect","post","then","response","res","JSON","parse","body","statusCode","length","nn","yn_like","CNT","filter","catch","error","fetchData","disabled","onClick","alert","reviewer_accnt","find","user","sessionStorage","getItem","Review","review_title","yn_reply","modified_day","review_body","yn_visible","DataTransaction","from","amount","contractAddress","gas","txHash","receipt","decimal","WriteReview","reply_id","numRows","wtitle","setInputValue","wbody","setInputValue2","submitReview","window","undefined","klaytn","caver","Caver","klay","abi","encodeFunctionCall","name","type","inputs","utils","toBN","mul","Number","sendTransaction","on","transactionHash","location","reload","placeholder","onChange","event","value","Detail","reviews","getReviews","mycontent_id","props","match","params","url_content_id","myurl","history","push","url_content_title","review","logindb","password","errors","Login","errorMessages","setErrorMessages","isSubmiited","setIsSubmitted","setAccnt","bal","setBal","pct","setPct","loadAccountInfo","enable","setAccountInfo","selectedAddress","setItem","getBalance","fromPeb","kip7","kct","balanceOf","testTrans","setkaikas","setNetworkInfo","networkVersion","handlekaikas","getpct","renderErrorMessage","name2","message","renderForm","onSubmit","preventDefault","document","forms","upass","userData","required","readOnly","loggedrenderform","App","path","exact","component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.7396a78d.chunk.js","sourcesContent":["var map = {\n\t\"./caver-abi/src/index.js\": 108,\n\t\"./caver-account/src/index.js\": 63,\n\t\"./caver-contract/src/index.js\": 74,\n\t\"./caver-core-helpers/src/index.js\": 30,\n\t\"./caver-core-method/src/index.js\": 54,\n\t\"./caver-core-requestmanager/caver-providers-http/src/index.js\": 298,\n\t\"./caver-core-requestmanager/caver-providers-ipc/src/index.js\": 302,\n\t\"./caver-core-requestmanager/caver-providers-ws/src/index.js\": 297,\n\t\"./caver-core-requestmanager/src/index.js\": 295,\n\t\"./caver-core-subscriptions/src/index.js\": 99,\n\t\"./caver-core/src/index.js\": 43,\n\t\"./caver-ipfs/src/index.js\": 306,\n\t\"./caver-kct/src/index.js\": 370,\n\t\"./caver-klay/caver-klay-accounts/src/index.js\": 373,\n\t\"./caver-klay/caver-klay-personal/src/index.js\": 376,\n\t\"./caver-klay/src/index.js\": 377,\n\t\"./caver-middleware/src/index.js\": 175,\n\t\"./caver-net/src/index.js\": 217,\n\t\"./caver-rpc/src/index.js\": 378,\n\t\"./caver-rtm/src/index.js\": 105,\n\t\"./caver-transaction/src/index.js\": 379,\n\t\"./caver-utils/iban/src/index.js\": 291,\n\t\"./caver-utils/promievent/src/index.js\": 290,\n\t\"./caver-utils/src/index.js\": 7,\n\t\"./caver-validator/src/index.js\": 380,\n\t\"./caver-wallet/src/index.js\": 197\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 421;","import React from 'react';\nimport './About.css';\n\nfunction About() {\n  return (\n    <div className=\"about__container\">\n      <span>\n        “Freedom is the freedom to say that two plus two make four. If that is granted, all else\n        follows.”\n      </span>\n      <span>- George Orwell, 1984</span>\n    </div>\n  );\n}\n\nexport default About;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Movie.css';\nimport { Link } from 'react-router-dom';\n\nfunction Movie({ content_id, title, year, summary, poster, genres }) {\n  return (\n    <div className=\"movie\">\n      <Link to={{ pathname: '/movie-detail/'+content_id+'/'+title, state: { content_id, title} }}> \n        <img src={poster} alt={title} title={title} />\n        <div className=\"movie__data\">\n          <h3 className=\"movie__title\" content_id = {content_id}>{title}</h3>\n          <h5 className=\"movie__year\">{year}</h5>\n          <ul className=\"movie__genres\">\n            {genres.map((genre, index) => {\n              return (\n                <li key={index} className=\"movie__genre\">\n                  {genre}\n                </li>\n              );\n            })}\n          </ul>\n          <p className=\"movie__summary\">{summary.slice(0, 360)}...</p>\n        </div>\n      </Link>\n    </div>\n  );\n}\n\nMovie.propTypes = {\n  content_id: PropTypes.string.isRequired,\n  year: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  summary: PropTypes.string.isRequired,\n  poster: PropTypes.string.isRequired,\n  genres: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default Movie;\n","import React from 'react';\nimport axios from 'axios';\nimport Movie from '../components/Movie';\nimport './Home.css';\n\nclass Home extends React.Component {\n  state = {\n    isLoading: true,\n    movies: [],\n  };\n  getMovies = async () => {\n    const {\n      data: {\n        data: { movies },\n      },\n    } =  await axios.get('https://pfvj29yvkb.execute-api.ap-northeast-2.amazonaws.com/Production');\n    // 람다로 만든 API URL : 웹브라우저에서는 작동하는데 소스에 넣으면 시간이 오래 걸리고 있음 - 구조 재확인 필요 : AWS API Gateway의 CORS 설정 변경 4XX 등\n    // https://pfvj29yvkb.execute-api.ap-northeast-2.amazonaws.com/Production \n    // await axios.get('https://yts-proxy.now.sh/list_movies.json?sort_by=rating');\n    this.setState({ movies, isLoading: false });\n  };\n  componentDidMount() {\n    this.getMovies();\n  }\n  render() {\n    console.log(this.state);\n    const { isLoading, movies } = this.state;\n    return (\n      <section className=\"container\">\n        {isLoading ? (\n          <div className=\"loader\">\n            <span className=\"loader__text\">Loading...</span>\n          </div>\n        ) : (\n          <div className=\"movies\">\n            {movies.map((movie) => {\n              return (\n                <Movie\n                  key={movie.id}\n                  content_id={movie.id.toString()}\n                  year={movie.year}\n                  title={movie.title}\n                  summary={movie.summary}\n                  poster={movie.medium_cover_image}\n                  genres={movie.genres}\n                />\n              );\n            })}\n          </div>\n        )}\n      </section>\n    );\n  }\n}\n\nexport default Home;\n","import React from 'react';\nimport './dev_test.css';\n\nfunction dev_test() {\n  return (\n    <div className=\"dev_test_Link__container\">\n      <span>\n        <p>“dev_test Link.” </p>\n        <p><a href=\"http://www.naver.com\" target=\"_blank\" rel=\"noopener\"  >네이버</a></p>\n      </span>\n      <span>- George Orwell, 1984</span>\n    </div>\n  );\n}\n\nexport default dev_test;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Navigation.css';\n\nfunction Navigation() {\n  return (\n    <div className=\"nav\">\n      <Link to=\"/\">Home</Link>\n      <Link to=\"/about\">About</Link>\n      <Link to=\"/dev_test\">dev_test</Link>\n      <Link to =\"/login\">login</Link>\n    </div>\n  );\n}\n\nexport default Navigation;\n","import React, { useState, useEffect } from 'react';\r\nimport './Review.css';\r\nimport axios from 'axios';\r\nimport PropTypes from 'prop-types';\r\nimport Caver from 'caver-js';\r\n\r\nconst walletdb = [\r\n    {\r\n      uname : \"sohan1\",\r\n      accnt : \"0x5BDCdEfed912981Db7f5c6f7b67717b8144Fd69f\" // my_personal_wallet\r\n    },\r\n    {\r\n      uname : \"sohan2\",\r\n      accnt : \"0xd1deA81Dc7C8168C1677a584281fd0725904CCa4\" // my_test_wallet\r\n    },\r\n    {\r\n      uname : \"sohan3\",\r\n      accnt : \"0x8d07FE42EEdC976B46375b641EE1cE9Be75c6186\" // kas_wallet_id\r\n    },\r\n    {\r\n      uname : \"sohan4\",\r\n      accnt : \"0x5c26c53f1358b16d5551438f7d33d8fafad03b05\" // svc_wallet_id\r\n    },\r\n    {\r\n      uname : \"new1\",\r\n      accnt : \"0x145415e851F4d80C7213481746E04F77219b33C6\" // newcome & 리뷰작성\r\n    },\r\n    {\r\n      uname : \"review1\",\r\n      accnt : \"0x0795f4690A3aacF5B08202D2ED7118266338e26B\" //  시연NFT리뷰 기작성자\r\n    },\r\n    {\r\n        uname : \"like1\",\r\n        accnt : \"0x145415e851F4d80C7213481746E04F77219b33C6\" //  좋아요 \r\n      },\r\n  ];\r\n\r\nconst mywallet = {\r\n    myaccnt: \"\",\r\n    mybalklay: 0.0,\r\n    mybalPCT: 0.0,\r\n    mynetwork: \"\"\r\n  };\r\n  \r\n\r\nfunction Likedislike({content_id, review_id, login_id, owner_id}) {\r\n    \r\n\r\n    const [likecnt, setlikecnt] = useState(0);\r\n    const [Dislikecnt, setDislikecnt] = useState(0);\r\n    const [ownerchk, setownerchk] = useState(1);\r\n    const [likedisable, setLikeDisable] = useState(false);\r\n    const [Dislikedisable, setDislikeDisable] = useState(false);\r\n\r\n\r\n    //const loginID = owner_id;\r\n   //  const loginID = \"testid\";\r\n\r\n   \r\n\r\n     useEffect(() => {\r\n         async function fetchData () {\r\n\r\n             console.log('content_id : ' + content_id + '  review_id :' + review_id + '  login_id :' + login_id);\r\n\r\n            axios.post('https://vrkj60roca.execute-api.ap-northeast-2.amazonaws.com/Production',\r\n                 {\r\n                     \"target\": \"getlike\",\r\n                     \"content_id\": content_id,\r\n                     \"review_id\": review_id\r\n                 })\r\n                 .then((response) => {\r\n\r\n                     const res = JSON.parse(response.data.body);\r\n\r\n                     if (response.data.statusCode === 200 && res.length > 0) {\r\n                         setlikecnt(likecnt => 0);\r\n                         setDislikecnt(Dislikecnt => 0);\r\n                       \r\n                         for (let nn in res) {\r\n                             if (res[nn].yn_like === 1) {\r\n                                 console.log(\"like : \" + res[nn].CNT);\r\n                                 setlikecnt(likecnt => res[nn].CNT);\r\n                             }\r\n                             else {\r\n                                 console.log(\"dislike : \" + res[nn].CNT);\r\n                                 setDislikecnt(Dislikecnt => res[nn].CNT);\r\n                             }\r\n\r\n                         }\r\n                     }\r\n\r\n                    axios.post('https://vrkj60roca.execute-api.ap-northeast-2.amazonaws.com/Production',\r\n                         {\r\n                             \"target\": \"ownerlist\",\r\n                             \"content_id\": content_id,\r\n                             \"review_id\": review_id\r\n                         }) \r\n                    .then((response)=> {\r\n                        \r\n                        if(  JSON.parse(response.data.body).filter(function (e) { return e.owner_id === login_id }).length > 0 ) {\r\n                            setownerchk(1) ;\r\n                            setLikeDisable(true);\r\n                            setDislikeDisable(true);\r\n                        }\r\n                        else {\r\n                            setownerchk(0) ;\r\n                        }\r\n                      console.log(\"review_id like owner chk no. : \" + ownerchk);\r\n                        \r\n                    })\r\n                    .catch((error) => {console.log(error);})                    \r\n                 })\r\n                 .catch((error) => {\r\n                     console.log(error.response);\r\n                     setlikecnt(likecnt => 0);\r\n                     setDislikecnt(Dislikecnt => 0);\r\n                 });\r\n         }\r\n\r\n         fetchData();\r\n         // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[]);\r\n\r\n    const likeadd =  () => {\r\n        console.log('like add loginID:' + login_id + \" owner_id: \" + owner_id + \" ownerchk: \" + ownerchk );\r\n        if (login_id === owner_id ) {\r\n            alert('내 리뷰에 내가 좋아요는 못합니다.!')\r\n        } \r\n        else if (ownerchk > 0) {\r\n            alert('좋아요 혹은 싫어요를 이미 선택했습니다.')\r\n        }\r\n        else {\r\n            \r\n            const reviewer_accnt = walletdb.find((user) => user.uname === owner_id );\r\n            mywallet.myaccnt = sessionStorage.getItem(\"accnt\");\r\n            \r\n            // let reviewer_accnt = '0x5BDCdEfed912981Db7f5c6f7b67717b8144Fd69f';\r\n            \r\n            console.log(\"call like accnt:\" + mywallet.myaccnt );\r\n            console.log(\"reviewer id : \" + owner_id + \" accnt:\" + reviewer_accnt.accnt )\r\n\r\n            \r\n            setlikecnt(likecnt => likecnt + 1);\r\n\r\n            axios.post('https://b4dvqo4yol.execute-api.ap-northeast-2.amazonaws.com/prod/',\r\n            {\r\n                \"act\" : \"likeReward\",  \r\n                \"like_push_wallet\": mywallet.myaccnt,\r\n                \"reviewer_wallet\" : reviewer_accnt.accnt,\r\n                \"like_count\" : \"5\"\r\n            }).then(\r\n                () => { \r\n                    axios.post('https://vrkj60roca.execute-api.ap-northeast-2.amazonaws.com/Production',\r\n                    {\r\n                        \"target\": \"putlike\",\r\n                        \"content_id\": content_id,\r\n                        \"review_id\": review_id,\r\n                        \"owner_id\": login_id,\r\n                        \"yn_like\" : true\r\n                    })\r\n                .then((response) => { console.log(response); })\r\n                .catch((error) => { console.log(error); })\r\n                alert('팝콘을 받았습니다'); \r\n                }\r\n            )\r\n  \r\n          \r\n                \r\n        }\r\n        setLikeDisable(true);\r\n        setDislikeDisable(true);\r\n    }\r\n\r\n    const Dislikeadd = () => {\r\n        console.log('Dislike add loginID:' + login_id + \" owner_id: \" + owner_id + \" ownerchk: \" + ownerchk);\r\n        if (login_id === owner_id) {\r\n            alert('내 리뷰에 내가 싫어요는 못합니다.!')\r\n        }\r\n        else if (ownerchk > 0) {\r\n            alert('좋아요 혹은 싫어요를 이미 선택했습니다.')\r\n        }\r\n        else {\r\n            setDislikecnt(Dislikecnt => Dislikecnt + 1);\r\n            axios.post('https://vrkj60roca.execute-api.ap-northeast-2.amazonaws.com/Production',\r\n                {\r\n                    \"target\": \"putlike\",\r\n                    \"content_id\": content_id,\r\n                    \"review_id\": review_id,\r\n                    \"owner_id\": login_id,\r\n                    \"yn_like\": false\r\n                })\r\n                .then((response) => {\r\n\r\n                    console.log(response);\r\n\r\n                })\r\n                .catch((error) => { console.log(error); })  \r\n        }\r\n        setLikeDisable(true);\r\n        setDislikeDisable(true);\r\n       \r\n    }\r\n\r\n\r\n    return (\r\n        <div className = \"likedislike\" > {review_id} / {login_id} / {ownerchk}\r\n            <img src=\"./assets/iconmonstr-thumb-14.svg\" alt=\"like\" /><button disabled={likedisable} onClick={likeadd}>{likecnt}</button>  \r\n            <img src=\"./assets/iconmonstr-thumb-20.svg\" alt=\"dislkie\" /><button disabled={Dislikedisable} onClick={Dislikeadd}>{Dislikecnt}</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nLikedislike.propTypes = {\r\n    content_id: PropTypes.string.isRequired,\r\n    review_id: PropTypes.string.isRequired,\r\n    owner_id: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Likedislike; ","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Review.css';\r\nimport { Link } from 'react-router-dom';\r\nimport Likedislike from './Likedislike';\r\n\r\n\r\nfunction Review({ review_id, content_id, title, owner_id, yn_reply, review_title, modified_day, review_body, yn_visible }) {\r\n  return (\r\n    <div className=\"review\">\r\n          <div className=\"review__data\" alt={review_id}> \r\n          <h3 className=\"content__title\">{title}</h3>\r\n          <h3 className=\"review__title\">{review_title}</h3>\r\n          <ul className=\"review__owner__id\">{owner_id}</ul>\r\n          <ul className=\"content__id\">{content_id}</ul>\r\n          <p className=\"review__body\">{review_body.slice(0, 2000)}...</p>\r\n          <h5 className=\"modified_day\">{modified_day}</h5>\r\n        </div>\r\n        <Likedislike\r\n          content_id = {content_id.toString()}\r\n          review_id= {review_id.toString()}\r\n        login_id={sessionStorage.getItem(\"uname\")}\r\n         owner_id = {owner_id}\r\n        />\r\n    </div>\r\n  );\r\n}\r\n\r\nReview.propTypes = {\r\n  content_id: PropTypes.string.isRequired,\r\n  review_id: PropTypes.string.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  owner_id: PropTypes.string.isRequired,\r\n  review_title: PropTypes.string.isRequired,\r\n  review_body: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Review;","import React, {useState} from 'react';\r\nimport axios from 'axios';\r\nimport PropTypes from 'prop-types';\r\nimport './Review.css';\r\nimport Caver from 'caver-js';\r\n\r\nconst DataTransaction = {   //팝콘 전송 데이터 코딩 - not deligate \r\n  from: \"\",\r\n  to: \"0x8d07FE42EEdC976B46375b641EE1cE9Be75c6186\",  //kas_wallet_id\r\n  amount: 0, // 시나리오에 정의한 팝콘 소모량 * 글쓰기 시 1팝콘 소모\r\n  contractAddress: \"0x59810df6700aa304a8890bf57841637ba36b529f\", //팝콘 스마트콘트랙 어드레스\r\n  gas: 3000000,\r\n  txHash: null,\r\n  receipt: null,\r\n  error: null,\r\n  decimal: 18 \r\n};\r\n\r\nconst mywallet = {\r\n  myaccnt: \"\",\r\n  mybalklay: 0.0,\r\n  mybalPCT: 0.0,\r\n  mynetwork: \"\"\r\n};\r\n\r\n\r\n\r\nfunction WriteReview({ content_id, login_id, reply_id, numRows }) {\r\n  \r\n    let [wtitle, setInputValue] = useState(\"\");\r\n    let [wbody, setInputValue2] = useState(\"\");\r\n\r\n\r\n    const submitReview = async (e) => {\r\n\r\n      ////////////////////////////////////////////////\r\n\r\n      const { klaytn } = window;\r\n      if (klaytn === undefined)  return\r\n      const caver = new Caver(klaytn);\r\n      mywallet.myaccnt = sessionStorage.getItem(\"accnt\");\r\n      console.log(\"call testTrnas myaccnt:\" + mywallet.myaccnt );\r\n \r\n        // 필요한 어드레스 등의 셋팅\r\n      DataTransaction.from = mywallet.myaccnt;\r\n      DataTransaction.amount = 10.0 ; // 시나리오에 정의한 팝콘 소모량 * 글쓰기 시 10팝콘 소모\r\n \r\n      const data = caver.klay.abi.encodeFunctionCall(\r\n      {\r\n        name: 'transfer',\r\n        type: 'function',\r\n        inputs: [\r\n          {\r\n            type: 'address',\r\n            name: 'recipient'\r\n          },\r\n          {\r\n            type: 'uint256',\r\n            name: 'amount'\r\n          }\r\n        ]\r\n      },\r\n      [\r\n        DataTransaction.to,\r\n        caver.utils\r\n          .toBN(DataTransaction.amount)\r\n          .mul(caver.utils.toBN(Number(`1e${DataTransaction.decimal}`)))\r\n          .toString()\r\n      ]\r\n    )\r\n    console.log(DataTransaction);\r\n  await  caver.klay.sendTransaction({\r\n        type: 'SMART_CONTRACT_EXECUTION',\r\n        from : DataTransaction.from,\r\n        to: DataTransaction.contractAddress,\r\n        data, //encodeFunctionCall results\r\n        gas: DataTransaction.gas\r\n      })\r\n      .on('transactionHash', transactionHash => {\r\n        console.log('txHash', transactionHash)\r\n      // 화면 표시 등이 있다면 처리하기 --> 함수 안이라 setState 대신 useState 로 정의한 set함수를 정의해 사용해야 함\r\n       // this.setState({ txHash: transactionHash }) \r\n       // loadAccountInfo(); // 센드 완료 후 콜백 내에서 불러서 값을 업데이트 함\r\n       axios.post('https://vrkj60roca.execute-api.ap-northeast-2.amazonaws.com/Production',\r\n       {\r\n           \"target\": \"review\",\r\n           \"content_id\": content_id,\r\n           \"reply_id\": \"0\",\r\n           \"owner_id\": login_id,\r\n           \"review_title\": wtitle,\r\n           \"review_body\": wbody\r\n       }).then(\r\n         () => { alert('등록완료'); }\r\n       )\r\n      })\r\n      .on('receipt', receipt => {\r\n        console.log('receipt', receipt)\r\n      //  this.setState({ receipt: JSON.stringify(receipt) })\r\n      })\r\n      .on('error', error => {\r\n        console.log('error', error)\r\n      //  this.setState({ error: error.message })\r\n      })\r\n    \r\n      //////////////////////////////////////////////////////////////////////////////////////////////\r\n      /*\r\n      await  axios.post('https://vrkj60roca.execute-api.ap-northeast-2.amazonaws.com/Production',\r\n              {\r\n                  \"target\": \"review\",\r\n                  \"content_id\": content_id,\r\n                  \"reply_id\": \"0\",\r\n                  \"owner_id\": login_id,\r\n                  \"review_title\": wtitle,\r\n                  \"review_body\": wbody\r\n              }).then(\r\n                () => { alert('등록완료'); }\r\n              )\r\n      */\r\n      setInputValue(\"\");\r\n      setInputValue2(\"\");\r\n      window.location.reload(); \r\n    };\r\n\r\n    console.log(\"content_id :\" + content_id + \", login_id :\" + login_id);\r\n  \r\n    return (\r\n        <div className=\"form_review_write\">\r\n          <h5 className=\"content_title\" >리뷰작성:{content_id}</h5>\r\n          <h5 className=\"content_title\" >{login_id}</h5>\r\n          <input className = \"title_input\" type=\"text\" placeholder=\"제목\" name = \"wtitle\" onChange={(event) => setInputValue(event.target.value)} ></input>\r\n            <input className=\"body_input\" type=\"text\" placeholder=\"내용\" name=\"wbody\" onChange={(event) => setInputValue2(event.target.value)}></input>\r\n          <p></p>\r\n          <button className=\"submit_button\" value=\"글쓰기\" onClick={(event) => { submitReview();} }>글쓰기</button>\r\n        </div>\r\n    );\r\n}\r\n\r\n/*  <button className=\"submit_button\" value=\"글쓰기\" onClick={(event) => { WriteSendPCT(); submitReview();} }>글쓰기</button>\r\n \r\n\r\n  <div className=\"reviews\" >\r\n           <table className=\"form_review_write\">\r\n             <tr>\r\n               <th className=\"content_title\" >\r\n                 리뷰작성\r\n               </th>\r\n             </tr>\r\n             <tr>\r\n               <td className=\"review_title\">\r\n                 <input type=\"text\" placeholder=\"제목\" maxlength=\"50\" style=\"width:100%\"></input>\r\n               </td>\r\n             </tr>\r\n             <tr>\r\n               <td className=\"review_body\">\r\n                 <textarea placeholder=\"내용\" style=\"width: 100%; height: 100%\"></textarea>\r\n               </td>\r\n             </tr>\r\n             <tr>\r\n               <td colspan=\"2\" align=\"right\">\r\n                 <input type=\"button\" value=\"글쓰기\"></input>\r\n                 <input type=\"button\" value=\"목록으로\"></input>\r\n                </td>\r\n              </tr>\r\n             </table>\r\n          </div>\r\n          \r\n\r\nfunction WriteReview({ content_id, owner_id, reply_id }) {\r\n  return (\r\n       <div className=\"form_review_write\">\r\n      <Link to={{ pathname: '/review', state: { content_id, owner_id, reply_id, review_title, review_body } }}>\r\n      <div className=\"review__data\">\r\n        <h3 className=\"content__title\">{title}</h3>\r\n        <h3 className=\"review__title\"><span>리뷰제목</span><input name='review_title' ></input></h3>\r\n        <ul className=\"review__owner__id\">{owner_id}</ul>\r\n        <p className=\"review__body\"><span>내용</span><textarea name='review_body'></textarea></p>\r\n      </div>\r\n      </Link>\r\n    </div>\r\n  );\r\n} */\r\n\r\nWriteReview.propTypes = {\r\n    content_id: PropTypes.string.isRequired,\r\n    login_id: PropTypes.string.isRequired,\r\n    reply_id: PropTypes.string.isRequired\r\n};\r\n\r\nexport default WriteReview;","import React from 'react';\nimport axios from 'axios';\nimport Review from '../components/Review';\nimport WriteReview from '../components/WriteReview';\nimport './Detail.css';\n\nclass Detail extends React.Component {\n   state = {\n    isLoading: true,\n    reviews: [],\n    content_id : 0, \n    numRows: 0\n  }; \n\n  getReviews = async () => {\n    const mycontent_id = this.props.match.params.url_content_id;\n    var myurl;\n    if (mycontent_id){\n      myurl = 'https://8snn27pzii.execute-api.ap-northeast-2.amazonaws.com/web3studydbconn?content_id=' + mycontent_id;\n    }\n    else{\n      myurl = 'https://8snn27pzii.execute-api.ap-northeast-2.amazonaws.com/web3studydbconn?content_id=ALL';\n    }\n    const { data:reviews } = await axios.get(myurl); \n    console.log('myurl : ' + myurl);\n    // 람다로 만든 API URL : 리뷰 리스트 업, content_id 에 해당하는 영화 아이디를 넣음\n    var numRows = reviews.length ;\n    this.setState({ reviews, isLoading: false, mycontent_id, numRows });\n  };\n  \n  componentDidMount() {\n   // const { location, history } = this.props;\n    const { history } = this.props;\n    if (this.props.match.params.url_content_id === undefined) { //location.state === undefined ||\n      history.push('/');\n    } \n    this.getReviews();\n  }\n\n  render() {\n    // const { location } = this.props;\n    \n    const { isLoading, reviews, numRows } = this.state;\n    const url_content_id = this.props.match.params.url_content_id;\n    const url_content_title = this.props.match.params.url_content_title ;\n    console.log(\"login_id render:\" + sessionStorage.getItem(\"uname\"));\n    \n     if (isLoading) {\n      return (\n        <section className=\"reviewcontainer\">\n        <div className=\"loader\">\n          <span className=\"loader__text\">Loading...</span>\n        </div>\n        </section>\n      );\n    }\n\n    if (!this.state) {\n      return null; // defense code have not mean.\n    }\n\n    if (!numRows) {\n      return (\n      <section className=\"reviewcontainer\">\n         <div className=\"reviews\">\n            <span>{url_content_title}에 대해 첫리뷰를 작성해주세요</span>\n         <WriteReview\n            content_id={url_content_id.toString()}\n            login_id={sessionStorage.getItem(\"uname\")}\n            reply_id= \"0\"\n            numRows = {0}\n          />\n        </div>  \n      </section>\n      );\n    }\n\n    return (\n      <section className=\"reviewcontainer\">\n          <div className=\"reviews\">\n          <WriteReview\n            content_id={url_content_id.toString()}\n            login_id ={sessionStorage.getItem(\"uname\")}\n            reply_id= \"0\"\n            numRows = {numRows}\n          />\n            {\n              reviews.map((review) => {\n               return (\n                <Review\n                   key={review.id.toString()}\n                  review_id = {review.id.toString()}\n                  content_id={review.content_id.toString()}\n                  title= {url_content_title}\n                  owner_id={review.owner_id}\n                  yn_reply={review.yn_reply}\n                  review_title={review.review_title}\n                  review_body={review.review_body}\n                  modified_day={review.modified_day}\n                  yn_visible={review.yn_visible}\n                />\n              );\n            })}\n          </div>\n      </section> );\n  }\n}\n\nexport default Detail;","import React, {useState} from 'react';\r\nimport axios from 'axios';\r\nimport ReactDOM from 'react-dom';\r\nimport './Login.css';\r\n// import caver, { KIP7 } from 'caver-js'\r\nimport Caver from 'caver-js';\r\n\r\n\r\n\r\nconst logindb = [\r\n  {\r\n    uname : \"sohan1\",\r\n    password : \"pass1\"\r\n  },\r\n  {\r\n    uname : \"sohan2\",\r\n    password : \"pass2\"\r\n  },\r\n  {\r\n    uname : \"sohan3\",\r\n    password : \"pass3\"\r\n  },\r\n  {\r\n    uname : \"sohan4\",\r\n    password : \"pass4\"\r\n  },\r\n  {\r\n    uname : \"new1\",\r\n    password : \"pass1\"\r\n  },\r\n  {\r\n    uname : \"review1\",\r\n    password : \"pass1\"\r\n  },\r\n  {\r\n    uname : \"like1\",\r\n    password : \"pass1\" //  좋아요 \r\n  },\r\n  {\r\n    uname : \"test1\",\r\n    password : \"pass1\" \r\n  },\r\n  {\r\n    uname : \"test2\",\r\n    password : \"pass2\"  \r\n  },\r\n  {\r\n    uname : \"test3\",\r\n    password : \"pass3\" \r\n  },\r\n  {\r\n    uname : \"test4\",\r\n    password : \"pass4\" \r\n  }\r\n];\r\n\r\nconst errors = {\r\n  uname: \"invalide username\",\r\n  upass: \"invalid password\"\r\n};\r\n\r\nconst mywallet = {\r\n  myaccnt: \"\",\r\n  mybalklay: 0.0,\r\n  mybalPCT: 0.0,\r\n  mynetwork: \"\"\r\n};\r\n\r\nconst DataTransaction = {   //팝콘 전송 데이터 코딩 - not deligate \r\n  from: \"\",\r\n  to: \"0x8d07FE42EEdC976B46375b641EE1cE9Be75c6186\",  //kas_wallet_id\r\n  amount: 0, // 시나리오에 정의한 팝콘 소모량 * 글쓰기 시 1팝콘 소모\r\n  contractAddress: \"0x59810df6700aa304a8890bf57841637ba36b529f\", //팝콘 스마트콘트랙 어드레스\r\n  gas: 3000000,\r\n  txHash: null,\r\n  receipt: null,\r\n  error: null,\r\n  decimal: 18 \r\n};\r\n\r\n\r\nfunction Login(){\r\n /* \r\nstate = {\r\n  errorMessagees: '',\r\n  isSubmitted:false,\r\n  account:'',\r\n  balance : 0,\r\n  network :''\r\n} */\r\n  \r\nconst [errorMessages, setErrorMessages] = useState({});\r\nconst [isSubmiited, setIsSubmitted] = useState(false);\r\nconst [accnt, setAccnt] = useState(\"\");\r\nconst [bal, setBal] = useState(0.0);\r\nconst [pct, setPct] = useState(0.0);\r\n\r\nconst loadAccountInfo = async () => {\r\n  const { klaytn } = window\r\n\r\n  if (klaytn) {\r\n    try {\r\n      await klaytn.enable()\r\n      setAccountInfo(klaytn)\r\n      klaytn.on('accountsChanged', () => setAccountInfo(klaytn))\r\n    } catch (err) {\r\n     // console.log('User denied account access : '+error) \r\n     console.log(err) \r\n    }\r\n  } else {\r\n    console.log('Non-Kaikas browser detected. You should consider trying Kaikas!')\r\n  }\r\n}\r\n\r\nconst setAccountInfo = async () => {\r\n  const { klaytn } = window\r\n  if (klaytn === undefined) return\r\n  const caver = new Caver(klaytn);\r\n  mywallet.myaccnt = klaytn.selectedAddress ;\r\n  sessionStorage.setItem(\"accnt\", mywallet.myaccnt);\r\n  const bal = await caver.klay.getBalance(mywallet.myaccnt);\r\n  mywallet.mybalklay = caver.utils.fromPeb(bal,'KLAY');\r\n   setAccnt(mywallet.myaccnt); // 어드레스 표시 업데이트\r\n   setBal(mywallet.mybalklay); //클레이 잔액 표시 업데이트\r\n   \r\n   // 팝콘 잔액 표시를 위한 부분\r\n\r\n   const kip7 = new caver.kct.kip7(DataTransaction.contractAddress);\r\n   console.log(kip7);\r\n\r\n   mywallet.mybalPCT = await kip7.balanceOf(mywallet.myaccnt);\r\n   setPct(caver.utils.fromPeb(mywallet.mybalPCT, 'KLAY')); \r\n   console.log('PCT:' + mywallet.mybalPCT); \r\n\r\n  //  console.log('accnt:' + sessionStorage.getItem(\"accnt\"));\r\n  console.log('accnt:' + mywallet.myaccnt);  \r\n  console.log('balance:' + mywallet.mybalklay);\r\n\r\n}\r\n\r\nconst setNetworkInfo = () => {\r\n  const { klaytn } = window\r\n  if (klaytn === undefined) return\r\n  if (klaytn.networkVersion != '1001') {\r\n    alert('테스트넷이 아닙니다.');\r\n    return;\r\n  }\r\n  mywallet.mynetwork = klaytn.networkVersion ;\r\n  sessionStorage.setItem(\"knetwork\", mywallet.mynetwork);\r\n  console.log(\"network:\" + mywallet.mynetwork);\r\n  klaytn.on('networkChanged', () => setNetworkInfo(klaytn.networkVersion));\r\n \r\n}\r\n\r\nconst testTrans = async () => {\r\n  const { klaytn } = window\r\n  if (klaytn === undefined) return\r\n  const caver = new Caver(klaytn);\r\n  \r\n  console.log(\"call testTrnas myaccnt:\" + mywallet.myaccnt );\r\n \r\n  // 필요한 어드레스 등의 셋팅\r\n  DataTransaction.from = mywallet.myaccnt;\r\n  DataTransaction.amount = 10.0 ; // 시나리오에 정의한 팝콘 소모량 * 글쓰기 시 10팝콘 소모\r\n \r\n  const data = caver.klay.abi.encodeFunctionCall(\r\n      {\r\n        name: 'transfer',\r\n        type: 'function',\r\n        inputs: [\r\n          {\r\n            type: 'address',\r\n            name: 'recipient'\r\n          },\r\n          {\r\n            type: 'uint256',\r\n            name: 'amount'\r\n          }\r\n        ]\r\n      },\r\n      [\r\n        DataTransaction.to,\r\n        caver.utils\r\n          .toBN(DataTransaction.amount)\r\n          .mul(caver.utils.toBN(Number(`1e${DataTransaction.decimal}`)))\r\n          .toString()\r\n      ]\r\n    )\r\n    console.log(DataTransaction);\r\n    caver.klay\r\n      .sendTransaction({\r\n        type: 'SMART_CONTRACT_EXECUTION',\r\n        from : DataTransaction.from,\r\n        to: DataTransaction.contractAddress,\r\n        data, //encodeFunctionCall results\r\n        gas: DataTransaction.gas\r\n      })\r\n      .on('transactionHash', transactionHash => {\r\n        console.log('txHash', transactionHash)\r\n      // 화면 표시 등이 있다면 처리하기 --> 함수 안이라 setState 대신 useState 로 정의한 set함수를 정의해 사용해야 함\r\n       // this.setState({ txHash: transactionHash }) \r\n       loadAccountInfo(); // 센드 완료 후 콜백 내에서 불러서 값을 업데이트 함\r\n      })\r\n      .on('receipt', receipt => {\r\n        console.log('receipt', receipt)\r\n      //  this.setState({ receipt: JSON.stringify(receipt) })\r\n      })\r\n      .on('error', error => {\r\n        console.log('error', error)\r\n      //  this.setState({ error: error.message })\r\n      })\r\n    \r\n     \r\n}\r\n\r\nconst setkaikas = (event) => {\r\n // event.preventDefault();\r\n  \r\n  const { klaytn } = window;\r\n\r\n  loadAccountInfo();\r\n  setNetworkInfo();  \r\n};\r\n\r\nconst handlekaikas = (event) => {\r\n // event.preventDefault();\r\n  \r\n  const { klaytn } = window;\r\n\r\n  testTrans();\r\n \r\n};\r\n\r\nconst getpct = async (event) => {\r\n  // event.preventDefault();\r\n\r\n  await axios.post('https://b4dvqo4yol.execute-api.ap-northeast-2.amazonaws.com/prod/',\r\n  {\r\n    \"act\" : \"send_Pct\",  \r\n    \"to_wallet\": mywallet.myaccnt,\r\n    \"subtype\" : \"newcomer\"\r\n  }).then(\r\n    () => { alert('팝콘을 받았습니다'); }\r\n  )\r\n  loadAccountInfo();\r\n};\r\n\r\n\r\nconst handleSubmit = (event) => {\r\n  event.preventDefault();\r\n\r\n  var {uname, upass} = document.forms[0];\r\n\r\n  const userData = logindb.find((user) => user.uname === uname.value );\r\n\r\n  if ( userData) {\r\n    if(userData.password !== upass.value ) {\r\n     setErrorMessages({name : \"upass\", message: errors.upass});\r\n     \r\n    } else {\r\n      setIsSubmitted(true);\r\n      sessionStorage.setItem(\"uname\", userData.uname);\r\n    }\r\n  } else {\r\n    setErrorMessages({name : \"uname\", message: errors.uname });\r\n  }\r\n};\r\n\r\nconst renderErrorMessage = (name2) => name2 === errorMessages.name && (\r\n  <div className=\"error\">{errorMessages.message}</div>\r\n);\r\n\r\nconst renderForm = (\r\n    <div className=\"form\">\r\n    <form onSubmit = {handleSubmit}>\r\n     <div className=\"input-container\">\r\n      <label>Nickname</label>\r\n      <input type = \"myid\" id=\"uname\" name=\"uname\" required />\r\n      {renderErrorMessage(\"uname\")}\r\n     </div>\r\n     <div className=\"input-container\">\r\n      <label>Password</label>\r\n      <input type = \"password\" id = \"upass\" name=\"upass\" required />\r\n      {renderErrorMessage(\"upass\")}\r\n     </div>\r\n     <div className=\"button-container\">\r\n      <input type = \"submit\" value=\"로그인\"/>\r\n     </div>\r\n      <div className=\"button-container\">\r\n          <input type=\"checkklaytn\" value=\"kaikas\" onClick={setkaikas} readOnly />\r\n       </div>\r\n       <label>Wallet address : {accnt} </label>\r\n       <div className=\"button-container\">\r\n          <input type=\"checkklaytn\" value=\"transaction\" onClick={handlekaikas} readOnly/>\r\n       </div>\r\n       <label>Klay : {bal} PCT: {pct} </label>\r\n    </form>\r\n    </div>\r\n  );\r\n\r\n  \r\n  const loggedrenderform = (\r\n    <div className=\"form\">\r\n      <div> : {sessionStorage.getItem(\"uname\")} is successfullly logged in</div>\r\n      <div className=\"button-container\">\r\n          <input type=\"checkklaytn\" value=\"kaikas\" onClick={setkaikas} readOnly />\r\n      </div>\r\n      <label>Wallet address : {accnt} </label>\r\n      <div className=\"button-container\">\r\n         <input type=\"checkklaytn\" value=\"getpct\" onClick={getpct} readOnly/>\r\n      </div>\r\n      <div className=\"button-container\">\r\n         <input type=\"checkklaytn\" value=\"transaction\" onClick={handlekaikas} readOnly/>\r\n      </div>\r\n      <label>Klay : {bal} PCT: {pct} </label>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n      <div className=\"login__container\">\r\n        <div className=\"mytitle\">Log In</div>\r\n       {isSubmiited ? loggedrenderform : renderForm}\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react';\nimport './App.css';\nimport { HashRouter, Route } from 'react-router-dom';\nimport About from './routes/About';\nimport Home from './routes/Home';\nimport dev_test from './routes/dev_test';\nimport Navigation from './components/Navigation';\nimport Detail from './routes/Detail';\nimport Login from './routes/Login' ;\n\nfunction App() {\n  return (\n    <HashRouter>\n      <Navigation />\n      <Route path=\"/\" exact={true} component={Home} />\n      <Route path=\"/about\" component={About} />\n      <Route path=\"/dev_test\" component={dev_test} />\n      <Route path=\"/movie-detail/:url_content_id/:url_content_title\" component={Detail} />\n      <Route path=\"/login\" component={Login} />\n      <Route path=\"/img/*\" />\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}