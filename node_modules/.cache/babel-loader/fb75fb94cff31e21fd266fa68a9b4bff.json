{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\clone-starter-kit-08\\\\src\\\\routes\\\\Login.js\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport ReactDOM from 'react-dom';\nimport './Login.css'; // import caver, { KIP7 } from 'caver-js'\n\nimport Caver from 'caver-js';\nconst logindb = [{\n  uname: \"sohan1\",\n  password: \"pass1\"\n}, {\n  uname: \"sohan2\",\n  password: \"pass2\"\n}, {\n  uname: \"sohan3\",\n  password: \"pass3\"\n}, {\n  uname: \"sohan4\",\n  password: \"pass4\"\n}, {\n  uname: \"new1\",\n  password: \"pass1\"\n}];\nconst errors = {\n  uname: \"invalide username\",\n  upass: \"invalid password\"\n};\nconst mywallet = {\n  myaccnt: \"\",\n  mybalklay: 0.0,\n  mybalPCT: 0.0,\n  mynetwork: \"\"\n};\nconst DataTransaction = {\n  //팝콘 전송 데이터 코딩 - not deligate \n  from: \"\",\n  to: \"0x8d07FE42EEdC976B46375b641EE1cE9Be75c6186\",\n  //kas_wallet_id\n  amount: 0,\n  // 시나리오에 정의한 팝콘 소모량 * 글쓰기 시 1팝콘 소모\n  contractAddress: \"0x59810df6700aa304a8890bf57841637ba36b529f\",\n  //팝콘 스마트콘트랙 어드레스\n  gas: 3000000,\n  txHash: null,\n  receipt: null,\n  error: null,\n  decimal: 18\n};\n\nfunction Login() {\n  /* \r\n  state = {\r\n   errorMessagees: '',\r\n   isSubmitted:false,\r\n   account:'',\r\n   balance : 0,\r\n   network :''\r\n  } */\n  const [errorMessages, setErrorMessages] = useState({});\n  const [isSubmiited, setIsSubmitted] = useState(false);\n  const [accnt, setAccnt] = useState(\"\");\n  const [bal, setBal] = useState(0.0);\n  const [pct, setPct] = useState(0.0);\n\n  const loadAccountInfo = async () => {\n    const {\n      klaytn\n    } = window;\n\n    if (klaytn) {\n      try {\n        await klaytn.enable();\n        setAccountInfo(klaytn);\n        klaytn.on('accountsChanged', () => setAccountInfo(klaytn));\n      } catch (err) {\n        // console.log('User denied account access : '+error) \n        console.log(err);\n      }\n    } else {\n      console.log('Non-Kaikas browser detected. You should consider trying Kaikas!');\n    }\n  };\n\n  const setAccountInfo = async () => {\n    const {\n      klaytn\n    } = window;\n    if (klaytn === undefined) return;\n    const caver = new Caver(klaytn);\n    mywallet.myaccnt = klaytn.selectedAddress;\n    sessionStorage.setItem(\"accnt\", mywallet.myaccnt);\n    const bal = await caver.klay.getBalance(mywallet.myaccnt);\n    mywallet.mybalklay = caver.utils.fromPeb(bal, 'KLAY');\n    setAccnt(mywallet.myaccnt); // 어드레스 표시 업데이트\n\n    setBal(mywallet.mybalklay); //클레이 잔액 표시 업데이트\n    // 팝콘 잔액 표시를 위한 부분\n\n    const kip7 = new caver.kct.kip7(DataTransaction.contractAddress);\n    console.log(kip7);\n    mywallet.mybalPCT = await kip7.balanceOf(mywallet.myaccnt);\n    setPct(caver.utils.fromPeb(mywallet.mybalPCT, 'KLAY'));\n    console.log('PCT:' + mywallet.mybalPCT); //  console.log('accnt:' + sessionStorage.getItem(\"accnt\"));\n\n    console.log('accnt:' + mywallet.myaccnt);\n    console.log('balance:' + mywallet.mybalklay);\n  };\n\n  const setNetworkInfo = () => {\n    const {\n      klaytn\n    } = window;\n    if (klaytn === undefined) return;\n\n    if (klaytn.networkVersion != '1001') {\n      alert('테스트넷이 아닙니다.');\n      return;\n    }\n\n    mywallet.mynetwork = klaytn.networkVersion;\n    sessionStorage.setItem(\"knetwork\", mywallet.mynetwork);\n    console.log(\"network:\" + mywallet.mynetwork);\n    klaytn.on('networkChanged', () => setNetworkInfo(klaytn.networkVersion));\n  };\n\n  const testTrans = async () => {\n    const {\n      klaytn\n    } = window;\n    if (klaytn === undefined) return;\n    const caver = new Caver(klaytn);\n    console.log(\"call testTrnas myaccnt:\" + mywallet.myaccnt); // 필요한 어드레스 등의 셋팅\n\n    DataTransaction.from = mywallet.myaccnt;\n    DataTransaction.amount = 10.0; // 시나리오에 정의한 팝콘 소모량 * 글쓰기 시 10팝콘 소모\n\n    const data = caver.klay.abi.encodeFunctionCall({\n      name: 'transfer',\n      type: 'function',\n      inputs: [{\n        type: 'address',\n        name: 'recipient'\n      }, {\n        type: 'uint256',\n        name: 'amount'\n      }]\n    }, [DataTransaction.to, caver.utils.toBN(DataTransaction.amount).mul(caver.utils.toBN(Number(`1e${DataTransaction.decimal}`))).toString()]);\n    console.log(DataTransaction);\n    caver.klay.sendTransaction({\n      type: 'SMART_CONTRACT_EXECUTION',\n      from: DataTransaction.from,\n      to: DataTransaction.contractAddress,\n      data,\n      //encodeFunctionCall results\n      gas: DataTransaction.gas\n    }).on('transactionHash', transactionHash => {\n      console.log('txHash', transactionHash); // 화면 표시 등이 있다면 처리하기 --> 함수 안이라 setState 대신 useState 로 정의한 set함수를 정의해 사용해야 함\n      // this.setState({ txHash: transactionHash }) \n\n      loadAccountInfo(); // 센드 완료 후 콜백 내에서 불러서 값을 업데이트 함\n    }).on('receipt', receipt => {\n      console.log('receipt', receipt); //  this.setState({ receipt: JSON.stringify(receipt) })\n    }).on('error', error => {\n      console.log('error', error); //  this.setState({ error: error.message })\n    });\n  };\n\n  const setkaikas = event => {\n    event.preventDefault();\n    const {\n      klaytn\n    } = window;\n    loadAccountInfo();\n    setNetworkInfo();\n  };\n\n  const handlekaikas = event => {\n    event.preventDefault();\n    const {\n      klaytn\n    } = window;\n    testTrans();\n  };\n\n  const getpct = async event => {\n    event.preventDefault();\n    await axios.post('https://b4dvqo4yol.execute-api.ap-northeast-2.amazonaws.com/prod/', {\n      \"act\": \"send_Pct\",\n      \"to_wallet\": mywallet.myaccnt,\n      \"subtype\": \"newcomer\"\n    }).then(() => {\n      alert('팝콘을 받았습니다');\n    });\n    const {\n      klaytn\n    } = window;\n    setAccountInfo(klaytn);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    var {\n      uname,\n      upass\n    } = document.forms[0];\n    const userData = logindb.find(user => user.uname === uname.value);\n\n    if (userData) {\n      if (userData.password !== upass.value) {\n        setErrorMessages({\n          name: \"upass\",\n          message: errors.upass\n        });\n      } else {\n        setIsSubmitted(true);\n        sessionStorage.setItem(\"uname\", userData.uname);\n      }\n    } else {\n      setErrorMessages({\n        name: \"uname\",\n        message: errors.uname\n      });\n    }\n  };\n\n  const renderErrorMessage = name2 => name2 === errorMessages.name && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 3\n    }\n  }, errorMessages.message);\n\n  const renderForm = /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }\n  }, \"Nickname\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"myid\",\n    id: \"uname\",\n    name: \"uname\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }\n  }), renderErrorMessage(\"uname\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    id: \"upass\",\n    name: \"upass\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }\n  }), renderErrorMessage(\"upass\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"\\uB85C\\uADF8\\uC778\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkklaytn\",\n    value: \"kaikas\",\n    onClick: setkaikas,\n    readOnly: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 8\n    }\n  }, \"Wallet address : \", accnt, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkklaytn\",\n    value: \"transaction\",\n    onClick: handlekaikas,\n    readOnly: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 8\n    }\n  }, \"Klay : \", bal, \" PCT: \", pct, \" \")));\n  const loggedrenderform = /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }\n  }, \" : \", sessionStorage.getItem(\"uname\"), \" is successfullly logged in\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkklaytn\",\n    value: \"kaikas\",\n    onClick: setkaikas,\n    readOnly: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 7\n    }\n  }, \"Wallet address : \", accnt, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkklaytn\",\n    value: \"getpct\",\n    onClick: getpct,\n    readOnly: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 10\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkklaytn\",\n    value: \"transaction\",\n    onClick: handlekaikas,\n    readOnly: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 10\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 7\n    }\n  }, \"Klay : \", bal, \" PCT: \", pct, \" \"));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login__container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mytitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 9\n    }\n  }, \"Log In\"), isSubmiited ? loggedrenderform : renderForm);\n}\n\nexport default Login;","map":{"version":3,"names":["React","useState","axios","ReactDOM","Caver","logindb","uname","password","errors","upass","mywallet","myaccnt","mybalklay","mybalPCT","mynetwork","DataTransaction","from","to","amount","contractAddress","gas","txHash","receipt","error","decimal","Login","errorMessages","setErrorMessages","isSubmiited","setIsSubmitted","accnt","setAccnt","bal","setBal","pct","setPct","loadAccountInfo","klaytn","window","enable","setAccountInfo","on","err","console","log","undefined","caver","selectedAddress","sessionStorage","setItem","klay","getBalance","utils","fromPeb","kip7","kct","balanceOf","setNetworkInfo","networkVersion","alert","testTrans","data","abi","encodeFunctionCall","name","type","inputs","toBN","mul","Number","toString","sendTransaction","transactionHash","setkaikas","event","preventDefault","handlekaikas","getpct","post","then","handleSubmit","document","forms","userData","find","user","value","message","renderErrorMessage","name2","renderForm","loggedrenderform","getItem"],"sources":["C:/Users/User/Documents/clone-starter-kit-08/src/routes/Login.js"],"sourcesContent":["import React, {useState} from 'react';\r\nimport axios from 'axios';\r\nimport ReactDOM from 'react-dom';\r\nimport './Login.css';\r\n// import caver, { KIP7 } from 'caver-js'\r\nimport Caver from 'caver-js';\r\n\r\n\r\n\r\nconst logindb = [\r\n  {\r\n    uname : \"sohan1\",\r\n    password : \"pass1\"\r\n  },\r\n  {\r\n    uname : \"sohan2\",\r\n    password : \"pass2\"\r\n  },\r\n  {\r\n    uname : \"sohan3\",\r\n    password : \"pass3\"\r\n  },\r\n  {\r\n    uname : \"sohan4\",\r\n    password : \"pass4\"\r\n  },\r\n  {\r\n    uname : \"new1\",\r\n    password : \"pass1\"\r\n  }\r\n];\r\n\r\nconst errors = {\r\n  uname: \"invalide username\",\r\n  upass: \"invalid password\"\r\n};\r\n\r\nconst mywallet = {\r\n  myaccnt: \"\",\r\n  mybalklay: 0.0,\r\n  mybalPCT: 0.0,\r\n  mynetwork: \"\"\r\n};\r\n\r\nconst DataTransaction = {   //팝콘 전송 데이터 코딩 - not deligate \r\n  from: \"\",\r\n  to: \"0x8d07FE42EEdC976B46375b641EE1cE9Be75c6186\",  //kas_wallet_id\r\n  amount: 0, // 시나리오에 정의한 팝콘 소모량 * 글쓰기 시 1팝콘 소모\r\n  contractAddress: \"0x59810df6700aa304a8890bf57841637ba36b529f\", //팝콘 스마트콘트랙 어드레스\r\n  gas: 3000000,\r\n  txHash: null,\r\n  receipt: null,\r\n  error: null,\r\n  decimal: 18 \r\n};\r\n\r\n\r\nfunction Login(){\r\n /* \r\nstate = {\r\n  errorMessagees: '',\r\n  isSubmitted:false,\r\n  account:'',\r\n  balance : 0,\r\n  network :''\r\n} */\r\n  \r\nconst [errorMessages, setErrorMessages] = useState({});\r\nconst [isSubmiited, setIsSubmitted] = useState(false);\r\nconst [accnt, setAccnt] = useState(\"\");\r\nconst [bal, setBal] = useState(0.0);\r\nconst [pct, setPct] = useState(0.0);\r\n\r\nconst loadAccountInfo = async () => {\r\n  const { klaytn } = window\r\n\r\n  if (klaytn) {\r\n    try {\r\n      await klaytn.enable()\r\n      setAccountInfo(klaytn)\r\n      klaytn.on('accountsChanged', () => setAccountInfo(klaytn))\r\n    } catch (err) {\r\n     // console.log('User denied account access : '+error) \r\n     console.log(err) \r\n    }\r\n  } else {\r\n    console.log('Non-Kaikas browser detected. You should consider trying Kaikas!')\r\n  }\r\n}\r\n\r\nconst setAccountInfo = async () => {\r\n  const { klaytn } = window\r\n  if (klaytn === undefined) return\r\n  const caver = new Caver(klaytn);\r\n  mywallet.myaccnt = klaytn.selectedAddress ;\r\n  sessionStorage.setItem(\"accnt\", mywallet.myaccnt);\r\n  const bal = await caver.klay.getBalance(mywallet.myaccnt);\r\n  mywallet.mybalklay = caver.utils.fromPeb(bal,'KLAY');\r\n   setAccnt(mywallet.myaccnt); // 어드레스 표시 업데이트\r\n   setBal(mywallet.mybalklay); //클레이 잔액 표시 업데이트\r\n   \r\n   // 팝콘 잔액 표시를 위한 부분\r\n\r\n   const kip7 = new caver.kct.kip7(DataTransaction.contractAddress);\r\n   console.log(kip7);\r\n\r\n   mywallet.mybalPCT = await kip7.balanceOf(mywallet.myaccnt);\r\n   setPct(caver.utils.fromPeb(mywallet.mybalPCT, 'KLAY')); \r\n   console.log('PCT:' + mywallet.mybalPCT); \r\n\r\n  //  console.log('accnt:' + sessionStorage.getItem(\"accnt\"));\r\n  console.log('accnt:' + mywallet.myaccnt);  \r\n  console.log('balance:' + mywallet.mybalklay);\r\n\r\n}\r\n\r\nconst setNetworkInfo = () => {\r\n  const { klaytn } = window\r\n  if (klaytn === undefined) return\r\n  if (klaytn.networkVersion != '1001') {\r\n    alert('테스트넷이 아닙니다.');\r\n    return;\r\n  }\r\n  mywallet.mynetwork = klaytn.networkVersion ;\r\n  sessionStorage.setItem(\"knetwork\", mywallet.mynetwork);\r\n  console.log(\"network:\" + mywallet.mynetwork);\r\n  klaytn.on('networkChanged', () => setNetworkInfo(klaytn.networkVersion));\r\n \r\n}\r\n\r\nconst testTrans = async () => {\r\n  const { klaytn } = window\r\n  if (klaytn === undefined) return\r\n  const caver = new Caver(klaytn);\r\n  \r\n  console.log(\"call testTrnas myaccnt:\" + mywallet.myaccnt );\r\n \r\n  // 필요한 어드레스 등의 셋팅\r\n  DataTransaction.from = mywallet.myaccnt;\r\n  DataTransaction.amount = 10.0 ; // 시나리오에 정의한 팝콘 소모량 * 글쓰기 시 10팝콘 소모\r\n \r\n  const data = caver.klay.abi.encodeFunctionCall(\r\n      {\r\n        name: 'transfer',\r\n        type: 'function',\r\n        inputs: [\r\n          {\r\n            type: 'address',\r\n            name: 'recipient'\r\n          },\r\n          {\r\n            type: 'uint256',\r\n            name: 'amount'\r\n          }\r\n        ]\r\n      },\r\n      [\r\n        DataTransaction.to,\r\n        caver.utils\r\n          .toBN(DataTransaction.amount)\r\n          .mul(caver.utils.toBN(Number(`1e${DataTransaction.decimal}`)))\r\n          .toString()\r\n      ]\r\n    )\r\n    console.log(DataTransaction);\r\n    caver.klay\r\n      .sendTransaction({\r\n        type: 'SMART_CONTRACT_EXECUTION',\r\n        from : DataTransaction.from,\r\n        to: DataTransaction.contractAddress,\r\n        data, //encodeFunctionCall results\r\n        gas: DataTransaction.gas\r\n      })\r\n      .on('transactionHash', transactionHash => {\r\n        console.log('txHash', transactionHash)\r\n      // 화면 표시 등이 있다면 처리하기 --> 함수 안이라 setState 대신 useState 로 정의한 set함수를 정의해 사용해야 함\r\n       // this.setState({ txHash: transactionHash }) \r\n       loadAccountInfo(); // 센드 완료 후 콜백 내에서 불러서 값을 업데이트 함\r\n      })\r\n      .on('receipt', receipt => {\r\n        console.log('receipt', receipt)\r\n      //  this.setState({ receipt: JSON.stringify(receipt) })\r\n      })\r\n      .on('error', error => {\r\n        console.log('error', error)\r\n      //  this.setState({ error: error.message })\r\n      })\r\n    \r\n     \r\n}\r\n\r\nconst setkaikas = (event) => {\r\n  event.preventDefault();\r\n  \r\n  const { klaytn } = window;\r\n\r\n  loadAccountInfo();\r\n  setNetworkInfo();  \r\n};\r\n\r\nconst handlekaikas = (event) => {\r\n  event.preventDefault();\r\n  \r\n  const { klaytn } = window;\r\n\r\n  testTrans();\r\n \r\n};\r\n\r\nconst getpct = async (event) => {\r\n  event.preventDefault();\r\n\r\n  await axios.post('https://b4dvqo4yol.execute-api.ap-northeast-2.amazonaws.com/prod/',\r\n  {\r\n    \"act\" : \"send_Pct\",  \r\n    \"to_wallet\": mywallet.myaccnt,\r\n    \"subtype\" : \"newcomer\"\r\n  }).then(\r\n    () => { alert('팝콘을 받았습니다'); }\r\n  )\r\n const { klaytn } = window;\r\n setAccountInfo(klaytn);\r\n \r\n};\r\n\r\n\r\nconst handleSubmit = (event) => {\r\n  event.preventDefault();\r\n\r\n  var {uname, upass} = document.forms[0];\r\n\r\n  const userData = logindb.find((user) => user.uname === uname.value );\r\n\r\n  if ( userData) {\r\n    if(userData.password !== upass.value ) {\r\n     setErrorMessages({name : \"upass\", message: errors.upass});\r\n     \r\n    } else {\r\n      setIsSubmitted(true);\r\n      sessionStorage.setItem(\"uname\", userData.uname);\r\n    }\r\n  } else {\r\n    setErrorMessages({name : \"uname\", message: errors.uname });\r\n  }\r\n};\r\n\r\nconst renderErrorMessage = (name2) => name2 === errorMessages.name && (\r\n  <div className=\"error\">{errorMessages.message}</div>\r\n);\r\n\r\nconst renderForm = (\r\n    <div className=\"form\">\r\n    <form onSubmit = {handleSubmit}>\r\n     <div className=\"input-container\">\r\n      <label>Nickname</label>\r\n      <input type = \"myid\" id=\"uname\" name=\"uname\" required />\r\n      {renderErrorMessage(\"uname\")}\r\n     </div>\r\n     <div className=\"input-container\">\r\n      <label>Password</label>\r\n      <input type = \"password\" id = \"upass\" name=\"upass\" required />\r\n      {renderErrorMessage(\"upass\")}\r\n     </div>\r\n     <div className=\"button-container\">\r\n      <input type = \"submit\" value=\"로그인\"/>\r\n     </div>\r\n      <div className=\"button-container\">\r\n          <input type=\"checkklaytn\" value=\"kaikas\" onClick={setkaikas} readOnly />\r\n       </div>\r\n       <label>Wallet address : {accnt} </label>\r\n       <div className=\"button-container\">\r\n          <input type=\"checkklaytn\" value=\"transaction\" onClick={handlekaikas} readOnly/>\r\n       </div>\r\n       <label>Klay : {bal} PCT: {pct} </label>\r\n    </form>\r\n    </div>\r\n  );\r\n\r\n  \r\n  const loggedrenderform = (\r\n    <div className=\"form\">\r\n      <div> : {sessionStorage.getItem(\"uname\")} is successfullly logged in</div>\r\n      <div className=\"button-container\">\r\n          <input type=\"checkklaytn\" value=\"kaikas\" onClick={setkaikas} readOnly />\r\n      </div>\r\n      <label>Wallet address : {accnt} </label>\r\n      <div className=\"button-container\">\r\n         <input type=\"checkklaytn\" value=\"getpct\" onClick={getpct} readOnly/>\r\n      </div>\r\n      <div className=\"button-container\">\r\n         <input type=\"checkklaytn\" value=\"transaction\" onClick={handlekaikas} readOnly/>\r\n      </div>\r\n      <label>Klay : {bal} PCT: {pct} </label>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n      <div className=\"login__container\">\r\n        <div className=\"mytitle\">Log In</div>\r\n       {isSubmiited ? loggedrenderform : renderForm}\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}