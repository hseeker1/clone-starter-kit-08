{"ast":null,"code":"'use strict';\n\nvar isIp = require('is-ip');\n\nvar uint8ArrayToString = require('uint8arrays/to-string');\n\nvar isIP = isIp;\nvar isV4 = isIp.v4;\nvar isV6 = isIp.v6; // Copied from https://github.com/indutny/node-ip/blob/master/lib/ip.js#L7\n\nvar toBytes = function toBytes(ip, buff, offset) {\n  offset = ~~offset;\n  var result;\n\n  if (isV4(ip)) {\n    result = buff || new Uint8Array(offset + 4);\n    ip.split(/\\./g).map(function (byte) {\n      result[offset++] = parseInt(byte, 10) & 0xff;\n    });\n  } else if (isV6(ip)) {\n    var sections = ip.split(':', 8);\n    var i;\n\n    for (i = 0; i < sections.length; i++) {\n      var isv4 = isV4(sections[i]);\n      var v4Buffer;\n\n      if (isv4) {\n        v4Buffer = toBytes(sections[i]);\n        sections[i] = uint8ArrayToString(v4Buffer.slice(0, 2), 'base16');\n      }\n\n      if (v4Buffer && ++i < 8) {\n        sections.splice(i, 0, uint8ArrayToString(v4Buffer.slice(2, 4), 'base16'));\n      }\n    }\n\n    if (sections[0] === '') {\n      while (sections.length < 8) {\n        sections.unshift('0');\n      }\n    } else if (sections[sections.length - 1] === '') {\n      while (sections.length < 8) {\n        sections.push('0');\n      }\n    } else if (sections.length < 8) {\n      for (i = 0; i < sections.length && sections[i] !== ''; i++) {\n        ;\n      }\n\n      var argv = [i, '1'];\n\n      for (i = 9 - sections.length; i > 0; i--) {\n        argv.push('0');\n      }\n\n      sections.splice.apply(sections, argv);\n    }\n\n    result = buff || new Uint8Array(offset + 16);\n\n    for (i = 0; i < sections.length; i++) {\n      var word = parseInt(sections[i], 16);\n      result[offset++] = word >> 8 & 0xff;\n      result[offset++] = word & 0xff;\n    }\n  }\n\n  if (!result) {\n    throw Error('Invalid ip address: ' + ip);\n  }\n\n  return result;\n}; // Copied from https://github.com/indutny/node-ip/blob/master/lib/ip.js#L63\n\n\nvar toString = function toString(buff, offset, length) {\n  offset = ~~offset;\n  length = length || buff.length - offset;\n  var result = [];\n  var string;\n  var view = new DataView(buff.buffer);\n\n  if (length === 4) {\n    // IPv4\n    for (var i = 0; i < length; i++) {\n      result.push(buff[offset + i]);\n    }\n\n    string = result.join('.');\n  } else if (length === 16) {\n    // IPv6\n    for (var _i = 0; _i < length; _i += 2) {\n      result.push(view.getUint16(offset + _i).toString(16));\n    }\n\n    string = result.join(':');\n    string = string.replace(/(^|:)0(:0)*:0(:|$)/, '$1::$3');\n    string = string.replace(/:{3,4}/, '::');\n  }\n\n  return string;\n};\n\nmodule.exports = {\n  isIP: isIP,\n  isV4: isV4,\n  isV6: isV6,\n  toBytes: toBytes,\n  toString: toString\n};","map":{"version":3,"names":["isIp","require","uint8ArrayToString","isIP","isV4","v4","isV6","v6","toBytes","ip","buff","offset","result","Uint8Array","split","map","byte","parseInt","sections","i","length","isv4","v4Buffer","slice","splice","unshift","push","argv","apply","word","Error","toString","string","view","DataView","buffer","join","getUint16","replace","module","exports"],"sources":["C:/Users/User/Documents/clone-starter-kit-08/node_modules/multiaddr/src/ip.js"],"sourcesContent":["'use strict'\r\n\r\nconst isIp = require('is-ip')\r\nconst uint8ArrayToString = require('uint8arrays/to-string')\r\n\r\nconst isIP = isIp\r\nconst isV4 = isIp.v4\r\nconst isV6 = isIp.v6\r\n\r\n// Copied from https://github.com/indutny/node-ip/blob/master/lib/ip.js#L7\r\nconst toBytes = function (ip, buff, offset) {\r\n  offset = ~~offset\r\n\r\n  var result\r\n\r\n  if (isV4(ip)) {\r\n    result = buff || new Uint8Array(offset + 4)\r\n    ip.split(/\\./g).map(function (byte) {\r\n      result[offset++] = parseInt(byte, 10) & 0xff\r\n    })\r\n  } else if (isV6(ip)) {\r\n    var sections = ip.split(':', 8)\r\n\r\n    var i\r\n    for (i = 0; i < sections.length; i++) {\r\n      var isv4 = isV4(sections[i])\r\n      var v4Buffer\r\n\r\n      if (isv4) {\r\n        v4Buffer = toBytes(sections[i])\r\n        sections[i] = uint8ArrayToString(v4Buffer.slice(0, 2), 'base16')\r\n      }\r\n\r\n      if (v4Buffer && ++i < 8) {\r\n        sections.splice(i, 0, uint8ArrayToString(v4Buffer.slice(2, 4), 'base16'))\r\n      }\r\n    }\r\n\r\n    if (sections[0] === '') {\r\n      while (sections.length < 8) sections.unshift('0')\r\n    } else if (sections[sections.length - 1] === '') {\r\n      while (sections.length < 8) sections.push('0')\r\n    } else if (sections.length < 8) {\r\n      for (i = 0; i < sections.length && sections[i] !== ''; i++);\r\n      var argv = [i, '1']\r\n      for (i = 9 - sections.length; i > 0; i--) {\r\n        argv.push('0')\r\n      }\r\n      sections.splice.apply(sections, argv)\r\n    }\r\n\r\n    result = buff || new Uint8Array(offset + 16)\r\n    for (i = 0; i < sections.length; i++) {\r\n      var word = parseInt(sections[i], 16)\r\n      result[offset++] = (word >> 8) & 0xff\r\n      result[offset++] = word & 0xff\r\n    }\r\n  }\r\n\r\n  if (!result) {\r\n    throw Error('Invalid ip address: ' + ip)\r\n  }\r\n\r\n  return result\r\n}\r\n\r\n// Copied from https://github.com/indutny/node-ip/blob/master/lib/ip.js#L63\r\nconst toString = function (buff, offset, length) {\r\n  offset = ~~offset\r\n  length = length || (buff.length - offset)\r\n\r\n  var result = []\r\n  var string\r\n  const view = new DataView(buff.buffer)\r\n  if (length === 4) {\r\n    // IPv4\r\n    for (let i = 0; i < length; i++) {\r\n      result.push(buff[offset + i])\r\n    }\r\n    string = result.join('.')\r\n  } else if (length === 16) {\r\n    // IPv6\r\n    for (let i = 0; i < length; i += 2) {\r\n      result.push(view.getUint16(offset + i).toString(16))\r\n    }\r\n    string = result.join(':')\r\n    string = string.replace(/(^|:)0(:0)*:0(:|$)/, '$1::$3')\r\n    string = string.replace(/:{3,4}/, '::')\r\n  }\r\n\r\n  return string\r\n}\r\n\r\nmodule.exports = {\r\n  isIP,\r\n  isV4,\r\n  isV6,\r\n  toBytes,\r\n  toString\r\n}\r\n"],"mappings":"AAAA;;AAEA,IAAMA,IAAI,GAAGC,OAAO,CAAC,OAAD,CAApB;;AACA,IAAMC,kBAAkB,GAAGD,OAAO,CAAC,uBAAD,CAAlC;;AAEA,IAAME,IAAI,GAAGH,IAAb;AACA,IAAMI,IAAI,GAAGJ,IAAI,CAACK,EAAlB;AACA,IAAMC,IAAI,GAAGN,IAAI,CAACO,EAAlB,C,CAEA;;AACA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAUC,EAAV,EAAcC,IAAd,EAAoBC,MAApB,EAA4B;EAC1CA,MAAM,GAAG,CAAC,CAACA,MAAX;EAEA,IAAIC,MAAJ;;EAEA,IAAIR,IAAI,CAACK,EAAD,CAAR,EAAc;IACZG,MAAM,GAAGF,IAAI,IAAI,IAAIG,UAAJ,CAAeF,MAAM,GAAG,CAAxB,CAAjB;IACAF,EAAE,CAACK,KAAH,CAAS,KAAT,EAAgBC,GAAhB,CAAoB,UAAUC,IAAV,EAAgB;MAClCJ,MAAM,CAACD,MAAM,EAAP,CAAN,GAAmBM,QAAQ,CAACD,IAAD,EAAO,EAAP,CAAR,GAAqB,IAAxC;IACD,CAFD;EAGD,CALD,MAKO,IAAIV,IAAI,CAACG,EAAD,CAAR,EAAc;IACnB,IAAIS,QAAQ,GAAGT,EAAE,CAACK,KAAH,CAAS,GAAT,EAAc,CAAd,CAAf;IAEA,IAAIK,CAAJ;;IACA,KAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGD,QAAQ,CAACE,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;MACpC,IAAIE,IAAI,GAAGjB,IAAI,CAACc,QAAQ,CAACC,CAAD,CAAT,CAAf;MACA,IAAIG,QAAJ;;MAEA,IAAID,IAAJ,EAAU;QACRC,QAAQ,GAAGd,OAAO,CAACU,QAAQ,CAACC,CAAD,CAAT,CAAlB;QACAD,QAAQ,CAACC,CAAD,CAAR,GAAcjB,kBAAkB,CAACoB,QAAQ,CAACC,KAAT,CAAe,CAAf,EAAkB,CAAlB,CAAD,EAAuB,QAAvB,CAAhC;MACD;;MAED,IAAID,QAAQ,IAAI,EAAEH,CAAF,GAAM,CAAtB,EAAyB;QACvBD,QAAQ,CAACM,MAAT,CAAgBL,CAAhB,EAAmB,CAAnB,EAAsBjB,kBAAkB,CAACoB,QAAQ,CAACC,KAAT,CAAe,CAAf,EAAkB,CAAlB,CAAD,EAAuB,QAAvB,CAAxC;MACD;IACF;;IAED,IAAIL,QAAQ,CAAC,CAAD,CAAR,KAAgB,EAApB,EAAwB;MACtB,OAAOA,QAAQ,CAACE,MAAT,GAAkB,CAAzB;QAA4BF,QAAQ,CAACO,OAAT,CAAiB,GAAjB;MAA5B;IACD,CAFD,MAEO,IAAIP,QAAQ,CAACA,QAAQ,CAACE,MAAT,GAAkB,CAAnB,CAAR,KAAkC,EAAtC,EAA0C;MAC/C,OAAOF,QAAQ,CAACE,MAAT,GAAkB,CAAzB;QAA4BF,QAAQ,CAACQ,IAAT,CAAc,GAAd;MAA5B;IACD,CAFM,MAEA,IAAIR,QAAQ,CAACE,MAAT,GAAkB,CAAtB,EAAyB;MAC9B,KAAKD,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGD,QAAQ,CAACE,MAAb,IAAuBF,QAAQ,CAACC,CAAD,CAAR,KAAgB,EAAnD,EAAuDA,CAAC,EAAxD;QAA2D;MAA3D;;MACA,IAAIQ,IAAI,GAAG,CAACR,CAAD,EAAI,GAAJ,CAAX;;MACA,KAAKA,CAAC,GAAG,IAAID,QAAQ,CAACE,MAAtB,EAA8BD,CAAC,GAAG,CAAlC,EAAqCA,CAAC,EAAtC,EAA0C;QACxCQ,IAAI,CAACD,IAAL,CAAU,GAAV;MACD;;MACDR,QAAQ,CAACM,MAAT,CAAgBI,KAAhB,CAAsBV,QAAtB,EAAgCS,IAAhC;IACD;;IAEDf,MAAM,GAAGF,IAAI,IAAI,IAAIG,UAAJ,CAAeF,MAAM,GAAG,EAAxB,CAAjB;;IACA,KAAKQ,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGD,QAAQ,CAACE,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;MACpC,IAAIU,IAAI,GAAGZ,QAAQ,CAACC,QAAQ,CAACC,CAAD,CAAT,EAAc,EAAd,CAAnB;MACAP,MAAM,CAACD,MAAM,EAAP,CAAN,GAAoBkB,IAAI,IAAI,CAAT,GAAc,IAAjC;MACAjB,MAAM,CAACD,MAAM,EAAP,CAAN,GAAmBkB,IAAI,GAAG,IAA1B;IACD;EACF;;EAED,IAAI,CAACjB,MAAL,EAAa;IACX,MAAMkB,KAAK,CAAC,yBAAyBrB,EAA1B,CAAX;EACD;;EAED,OAAOG,MAAP;AACD,CAtDD,C,CAwDA;;;AACA,IAAMmB,QAAQ,GAAG,SAAXA,QAAW,CAAUrB,IAAV,EAAgBC,MAAhB,EAAwBS,MAAxB,EAAgC;EAC/CT,MAAM,GAAG,CAAC,CAACA,MAAX;EACAS,MAAM,GAAGA,MAAM,IAAKV,IAAI,CAACU,MAAL,GAAcT,MAAlC;EAEA,IAAIC,MAAM,GAAG,EAAb;EACA,IAAIoB,MAAJ;EACA,IAAMC,IAAI,GAAG,IAAIC,QAAJ,CAAaxB,IAAI,CAACyB,MAAlB,CAAb;;EACA,IAAIf,MAAM,KAAK,CAAf,EAAkB;IAChB;IACA,KAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,MAApB,EAA4BD,CAAC,EAA7B,EAAiC;MAC/BP,MAAM,CAACc,IAAP,CAAYhB,IAAI,CAACC,MAAM,GAAGQ,CAAV,CAAhB;IACD;;IACDa,MAAM,GAAGpB,MAAM,CAACwB,IAAP,CAAY,GAAZ,CAAT;EACD,CAND,MAMO,IAAIhB,MAAM,KAAK,EAAf,EAAmB;IACxB;IACA,KAAK,IAAID,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAGC,MAApB,EAA4BD,EAAC,IAAI,CAAjC,EAAoC;MAClCP,MAAM,CAACc,IAAP,CAAYO,IAAI,CAACI,SAAL,CAAe1B,MAAM,GAAGQ,EAAxB,EAA2BY,QAA3B,CAAoC,EAApC,CAAZ;IACD;;IACDC,MAAM,GAAGpB,MAAM,CAACwB,IAAP,CAAY,GAAZ,CAAT;IACAJ,MAAM,GAAGA,MAAM,CAACM,OAAP,CAAe,oBAAf,EAAqC,QAArC,CAAT;IACAN,MAAM,GAAGA,MAAM,CAACM,OAAP,CAAe,QAAf,EAAyB,IAAzB,CAAT;EACD;;EAED,OAAON,MAAP;AACD,CAxBD;;AA0BAO,MAAM,CAACC,OAAP,GAAiB;EACfrC,IAAI,EAAJA,IADe;EAEfC,IAAI,EAAJA,IAFe;EAGfE,IAAI,EAAJA,IAHe;EAIfE,OAAO,EAAPA,OAJe;EAKfuB,QAAQ,EAARA;AALe,CAAjB"},"metadata":{},"sourceType":"script"}