{"ast":null,"code":"'use strict';\n\nconst {\n  anySignal\n} = require('any-signal');\n/**\r\n * @typedef {AbortSignal | undefined} MaybeSignal\r\n *\r\n * @param  {MaybeSignal[]} signals\r\n * @returns {AbortSignal[]}\r\n */\n\n\nfunction filter(signals) {\n  // @ts-ignore\n  return signals.filter(Boolean);\n}\n/**\r\n * @param  {...AbortSignal|undefined} signals\r\n */\n\n\nmodule.exports = function () {\n  for (var _len = arguments.length, signals = new Array(_len), _key = 0; _key < _len; _key++) {\n    signals[_key] = arguments[_key];\n  }\n\n  return anySignal(filter(signals));\n};","map":{"version":3,"names":["anySignal","require","filter","signals","Boolean","module","exports"],"sources":["C:/Users/User/Documents/clone-starter-kit-08/node_modules/ipfs-http-client/src/lib/abort-signal.js"],"sourcesContent":["'use strict'\r\n\r\nconst { anySignal } = require('any-signal')\r\n\r\n/**\r\n * @typedef {AbortSignal | undefined} MaybeSignal\r\n *\r\n * @param  {MaybeSignal[]} signals\r\n * @returns {AbortSignal[]}\r\n */\r\nfunction filter (signals) {\r\n  // @ts-ignore\r\n  return signals.filter(Boolean)\r\n}\r\n\r\n/**\r\n * @param  {...AbortSignal|undefined} signals\r\n */\r\nmodule.exports = (...signals) => {\r\n  return anySignal(filter(signals))\r\n}\r\n"],"mappings":"AAAA;;AAEA,MAAM;EAAEA;AAAF,IAAgBC,OAAO,CAAC,YAAD,CAA7B;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,MAAT,CAAiBC,OAAjB,EAA0B;EACxB;EACA,OAAOA,OAAO,CAACD,MAAR,CAAeE,OAAf,CAAP;AACD;AAED;AACA;AACA;;;AACAC,MAAM,CAACC,OAAP,GAAiB,YAAgB;EAAA,kCAAZH,OAAY;IAAZA,OAAY;EAAA;;EAC/B,OAAOH,SAAS,CAACE,MAAM,CAACC,OAAD,CAAP,CAAhB;AACD,CAFD"},"metadata":{},"sourceType":"script"}