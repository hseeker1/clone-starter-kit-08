{"ast":null,"code":"'use strict';\n\nvar _createForOfIteratorHelper = require(\"C:\\\\Users\\\\User\\\\Documents\\\\clone-starter-kit-08\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createForOfIteratorHelper\");\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\User\\\\Documents\\\\clone-starter-kit-08\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\User\\\\Documents\\\\clone-starter-kit-08\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar _require = require('./util'),\n    encodeText = _require.encodeText;\n/** @typedef {import('./types').CodecFactory} CodecFactory */\n\n/** @typedef {import(\"./types\").BaseName} BaseName */\n\n/** @typedef {import(\"./types\").BaseCode} BaseCode */\n\n/**\r\n * Class to encode/decode in the supported Bases\r\n *\r\n */\n\n\nvar Base = /*#__PURE__*/function () {\n  /**\r\n   * @param {BaseName} name\r\n   * @param {BaseCode} code\r\n   * @param {CodecFactory} factory\r\n   * @param {string} alphabet\r\n   */\n  function Base(name, code, factory, alphabet) {\n    _classCallCheck(this, Base);\n\n    this.name = name;\n    this.code = code;\n    this.codeBuf = encodeText(this.code);\n    this.alphabet = alphabet;\n    this.codec = factory(alphabet);\n  }\n  /**\r\n   * @param {Uint8Array} buf\r\n   * @returns {string}\r\n   */\n\n\n  _createClass(Base, [{\n    key: \"encode\",\n    value: function encode(buf) {\n      return this.codec.encode(buf);\n    }\n    /**\r\n     * @param {string} string\r\n     * @returns {Uint8Array}\r\n     */\n\n  }, {\n    key: \"decode\",\n    value: function decode(string) {\n      var _iterator = _createForOfIteratorHelper(string),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var char = _step.value;\n\n          if (this.alphabet && this.alphabet.indexOf(char) < 0) {\n            throw new Error(\"invalid character '\".concat(char, \"' in '\").concat(string, \"'\"));\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      return this.codec.decode(string);\n    }\n  }]);\n\n  return Base;\n}();\n\nmodule.exports = Base;","map":{"version":3,"names":["require","encodeText","Base","name","code","factory","alphabet","codeBuf","codec","buf","encode","string","char","indexOf","Error","decode","module","exports"],"sources":["C:/Users/User/Documents/clone-starter-kit-08/node_modules/multibase/src/base.js"],"sourcesContent":["'use strict'\r\n\r\nconst { encodeText } = require('./util')\r\n\r\n/** @typedef {import('./types').CodecFactory} CodecFactory */\r\n/** @typedef {import(\"./types\").BaseName} BaseName */\r\n/** @typedef {import(\"./types\").BaseCode} BaseCode */\r\n\r\n/**\r\n * Class to encode/decode in the supported Bases\r\n *\r\n */\r\nclass Base {\r\n  /**\r\n   * @param {BaseName} name\r\n   * @param {BaseCode} code\r\n   * @param {CodecFactory} factory\r\n   * @param {string} alphabet\r\n   */\r\n  constructor (name, code, factory, alphabet) {\r\n    this.name = name\r\n    this.code = code\r\n    this.codeBuf = encodeText(this.code)\r\n    this.alphabet = alphabet\r\n    this.codec = factory(alphabet)\r\n  }\r\n\r\n  /**\r\n   * @param {Uint8Array} buf\r\n   * @returns {string}\r\n   */\r\n  encode (buf) {\r\n    return this.codec.encode(buf)\r\n  }\r\n\r\n  /**\r\n   * @param {string} string\r\n   * @returns {Uint8Array}\r\n   */\r\n  decode (string) {\r\n    for (const char of string) {\r\n      if (this.alphabet && this.alphabet.indexOf(char) < 0) {\r\n        throw new Error(`invalid character '${char}' in '${string}'`)\r\n      }\r\n    }\r\n    return this.codec.decode(string)\r\n  }\r\n}\r\n\r\nmodule.exports = Base\r\n"],"mappings":"AAAA;;;;;;;;AAEA,eAAuBA,OAAO,CAAC,QAAD,CAA9B;AAAA,IAAQC,UAAR,YAAQA,UAAR;AAEA;;AACA;;AACA;;AAEA;AACA;AACA;AACA;;;IACMC,I;EACJ;AACF;AACA;AACA;AACA;AACA;EACE,cAAaC,IAAb,EAAmBC,IAAnB,EAAyBC,OAAzB,EAAkCC,QAAlC,EAA4C;IAAA;;IAC1C,KAAKH,IAAL,GAAYA,IAAZ;IACA,KAAKC,IAAL,GAAYA,IAAZ;IACA,KAAKG,OAAL,GAAeN,UAAU,CAAC,KAAKG,IAAN,CAAzB;IACA,KAAKE,QAAL,GAAgBA,QAAhB;IACA,KAAKE,KAAL,GAAaH,OAAO,CAACC,QAAD,CAApB;EACD;EAED;AACF;AACA;AACA;;;;;WACE,gBAAQG,GAAR,EAAa;MACX,OAAO,KAAKD,KAAL,CAAWE,MAAX,CAAkBD,GAAlB,CAAP;IACD;IAED;AACF;AACA;AACA;;;;WACE,gBAAQE,MAAR,EAAgB;MAAA,2CACKA,MADL;MAAA;;MAAA;QACd,oDAA2B;UAAA,IAAhBC,IAAgB;;UACzB,IAAI,KAAKN,QAAL,IAAiB,KAAKA,QAAL,CAAcO,OAAd,CAAsBD,IAAtB,IAA8B,CAAnD,EAAsD;YACpD,MAAM,IAAIE,KAAJ,8BAAgCF,IAAhC,mBAA6CD,MAA7C,OAAN;UACD;QACF;MALa;QAAA;MAAA;QAAA;MAAA;;MAMd,OAAO,KAAKH,KAAL,CAAWO,MAAX,CAAkBJ,MAAlB,CAAP;IACD;;;;;;AAGHK,MAAM,CAACC,OAAP,GAAiBf,IAAjB"},"metadata":{},"sourceType":"script"}