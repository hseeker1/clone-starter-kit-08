{"ast":null,"code":"/*\r\n    Modifications copyright 2018 The caver-js Authors\r\n    This file is part of web3.js.\r\n\r\n    web3.js is free software: you can redistribute it and/or modify\r\n    it under the terms of the GNU Lesser General Public License as published by\r\n    the Free Software Foundation, either version 3 of the License, or\r\n    (at your option) any later version.\r\n\r\n    web3.js is distributed in the hope that it will be useful,\r\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n    GNU Lesser General Public License for more details.\r\n\r\n    You should have received a copy of the GNU Lesser General Public License\r\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n    This file is derived from web3.js/packages/web3-providers-http/src/index.js (2019/06/12).\r\n    Modified and improved for the caver-js development.\r\n*/\n\n/** @file httpprovider.js\r\n * @authors:\r\n *   Marek Kotewicz <marek@parity.io>\r\n *   Marian Oancea\r\n *   Fabian Vogelsteller <fabian@ethereum.org>\r\n *   AyanamiTech <ayanami0330@protonmail.com>\r\n * @date 2015\r\n */\nconst http = require('http');\n\nconst https = require('https'); // Apply missing polyfill for IE\n\n\nrequire('cross-fetch/polyfill');\n\nrequire('es6-promise').polyfill();\n\nrequire('abortcontroller-polyfill/dist/polyfill-patch-fetch');\n\nconst errors = require('../../../caver-core-helpers').errors;\n/**\r\n * HttpProvider should be used to send rpc calls over http\r\n */\n\n/**\r\n * @param       {string} host\r\n * @param       {object} options\r\n * @constructor\r\n */\n\n\nconst HttpProvider = function HttpProvider(host, options) {\n  options = options || {};\n  this.host = host || 'http://localhost:8545';\n  this.withCredentials = options.withCredentials;\n  this.timeout = options.timeout || 0;\n  this.headers = options.headers;\n  this.agent = options.agent;\n  this.connected = false; // keepAlive is true unless explicitly set to false\n\n  const keepAlive = options.keepAlive !== false;\n  this.host = host || 'http://localhost:8545';\n\n  if (!this.agent) {\n    if (this.host.substring(0, 5) === 'https') {\n      this.httpsAgent = new https.Agent({\n        keepAlive\n      });\n    } else {\n      this.httpAgent = new http.Agent({\n        keepAlive\n      });\n    }\n  }\n};\n/**\r\n * Should be used to make async request\r\n *\r\n * @method send\r\n * @param {Object} payload\r\n * @param {Function} callback triggered on end with (err, result)\r\n */\n\n\nHttpProvider.prototype.send = function (payload, callback) {\n  const options = {\n    method: 'POST',\n    body: JSON.stringify(payload)\n  };\n  const headers = {};\n  let controller;\n\n  if (typeof AbortController !== 'undefined') {\n    controller = new AbortController(); // eslint-disable-next-line no-undef\n  } else if (typeof window !== 'undefined' && typeof window.AbortController !== 'undefined') {\n    // Some chrome version doesn't recognize new AbortController(); so we are using it from window instead\n    // https://stackoverflow.com/questions/55718778/why-abortcontroller-is-not-defined\n    // eslint-disable-next-line no-undef\n    controller = new window.AbortController();\n  }\n\n  if (typeof controller !== 'undefined') {\n    options.signal = controller.signal;\n  } // the current runtime is node\n\n\n  if (typeof XMLHttpRequest === 'undefined') {\n    // https://github.com/node-fetch/node-fetch#custom-agent\n    const agents = {\n      httpsAgent: this.httpsAgent,\n      httpAgent: this.httpAgent\n    };\n\n    if (this.agent) {\n      agents.httpsAgent = this.agent.https;\n      agents.httpAgent = this.agent.http;\n    }\n\n    if (this.host.substring(0, 5) === 'https') {\n      options.agent = agents.httpsAgent;\n    } else {\n      options.agent = agents.httpAgent;\n    }\n  }\n\n  if (this.headers) {\n    this.headers.forEach(function (header) {\n      headers[header.name] = header.value;\n    });\n  } // Default headers\n\n\n  if (!headers['Content-Type']) {\n    headers['Content-Type'] = 'application/json';\n  } // As the Fetch API supports the credentials as following options 'include', 'omit', 'same-origin'\n  // https://developer.mozilla.org/en-US/docs/Web/API/fetch#credentials\n  // To avoid breaking change in 1.x we override this value based on boolean option.\n\n\n  if (this.withCredentials) {\n    options.credentials = 'include';\n  } else {\n    options.credentials = 'omit';\n  }\n\n  options.headers = headers;\n\n  if (this.timeout > 0 && typeof controller !== 'undefined') {\n    this.timeoutId = setTimeout(function () {\n      controller.abort();\n    }, this.timeout);\n  }\n\n  const success = function (response) {\n    if (this.timeoutId !== undefined) {\n      clearTimeout(this.timeoutId);\n    } // Response is a stream data so should be awaited for json response\n\n\n    response.json().then(function (data) {\n      callback(null, data);\n    }).catch(function () {\n      callback(errors.InvalidResponse(response));\n    });\n  };\n\n  const failed = function (error) {\n    if (this.timeoutId !== undefined) {\n      clearTimeout(this.timeoutId);\n    }\n\n    if (error.name === 'AbortError') {\n      callback(errors.ConnectionTimeout(this.timeout));\n    }\n\n    callback(errors.InvalidConnection(this.host));\n  }; // Disable eslint warning since fetch API is available through polyfill\n  // https://github.com/lquixada/cross-fetch#install\n  // eslint-disable-next-line no-undef\n\n\n  fetch(this.host, options).then(success.bind(this)).catch(failed.bind(this));\n};\n\nHttpProvider.prototype.disconnect = function () {// NO OP\n};\n\nHttpProvider.prototype.supportsSubscriptions = function () {\n  return false;\n};\n\nmodule.exports = HttpProvider;","map":{"version":3,"names":["http","require","https","polyfill","errors","HttpProvider","host","options","withCredentials","timeout","headers","agent","connected","keepAlive","substring","httpsAgent","Agent","httpAgent","prototype","send","payload","callback","method","body","JSON","stringify","controller","AbortController","window","signal","XMLHttpRequest","agents","forEach","header","name","value","credentials","timeoutId","setTimeout","abort","success","response","undefined","clearTimeout","json","then","data","catch","InvalidResponse","failed","error","ConnectionTimeout","InvalidConnection","fetch","bind","disconnect","supportsSubscriptions","module","exports"],"sources":["C:/Users/User/Documents/clone-starter-kit-08/node_modules/caver-js/packages/caver-core-requestmanager/caver-providers-http/src/index.js"],"sourcesContent":["/*\r\n    Modifications copyright 2018 The caver-js Authors\r\n    This file is part of web3.js.\r\n\r\n    web3.js is free software: you can redistribute it and/or modify\r\n    it under the terms of the GNU Lesser General Public License as published by\r\n    the Free Software Foundation, either version 3 of the License, or\r\n    (at your option) any later version.\r\n\r\n    web3.js is distributed in the hope that it will be useful,\r\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n    GNU Lesser General Public License for more details.\r\n\r\n    You should have received a copy of the GNU Lesser General Public License\r\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n    This file is derived from web3.js/packages/web3-providers-http/src/index.js (2019/06/12).\r\n    Modified and improved for the caver-js development.\r\n*/\r\n/** @file httpprovider.js\r\n * @authors:\r\n *   Marek Kotewicz <marek@parity.io>\r\n *   Marian Oancea\r\n *   Fabian Vogelsteller <fabian@ethereum.org>\r\n *   AyanamiTech <ayanami0330@protonmail.com>\r\n * @date 2015\r\n */\r\n\r\nconst http = require('http')\r\nconst https = require('https')\r\n\r\n// Apply missing polyfill for IE\r\nrequire('cross-fetch/polyfill')\r\nrequire('es6-promise').polyfill()\r\nrequire('abortcontroller-polyfill/dist/polyfill-patch-fetch')\r\n\r\nconst errors = require('../../../caver-core-helpers').errors\r\n\r\n/**\r\n * HttpProvider should be used to send rpc calls over http\r\n */\r\n/**\r\n * @param       {string} host\r\n * @param       {object} options\r\n * @constructor\r\n */\r\nconst HttpProvider = function HttpProvider(host, options) {\r\n    options = options || {}\r\n    this.host = host || 'http://localhost:8545'\r\n\r\n    this.withCredentials = options.withCredentials\r\n    this.timeout = options.timeout || 0\r\n    this.headers = options.headers\r\n    this.agent = options.agent\r\n    this.connected = false\r\n\r\n    // keepAlive is true unless explicitly set to false\r\n    const keepAlive = options.keepAlive !== false\r\n    this.host = host || 'http://localhost:8545'\r\n    if (!this.agent) {\r\n        if (this.host.substring(0, 5) === 'https') {\r\n            this.httpsAgent = new https.Agent({ keepAlive })\r\n        } else {\r\n            this.httpAgent = new http.Agent({ keepAlive })\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Should be used to make async request\r\n *\r\n * @method send\r\n * @param {Object} payload\r\n * @param {Function} callback triggered on end with (err, result)\r\n */\r\nHttpProvider.prototype.send = function(payload, callback) {\r\n    const options = {\r\n        method: 'POST',\r\n        body: JSON.stringify(payload),\r\n    }\r\n    const headers = {}\r\n    let controller\r\n\r\n    if (typeof AbortController !== 'undefined') {\r\n        controller = new AbortController()\r\n        // eslint-disable-next-line no-undef\r\n    } else if (typeof window !== 'undefined' && typeof window.AbortController !== 'undefined') {\r\n        // Some chrome version doesn't recognize new AbortController(); so we are using it from window instead\r\n        // https://stackoverflow.com/questions/55718778/why-abortcontroller-is-not-defined\r\n        // eslint-disable-next-line no-undef\r\n        controller = new window.AbortController()\r\n    }\r\n\r\n    if (typeof controller !== 'undefined') {\r\n        options.signal = controller.signal\r\n    }\r\n\r\n    // the current runtime is node\r\n    if (typeof XMLHttpRequest === 'undefined') {\r\n        // https://github.com/node-fetch/node-fetch#custom-agent\r\n        const agents = { httpsAgent: this.httpsAgent, httpAgent: this.httpAgent }\r\n\r\n        if (this.agent) {\r\n            agents.httpsAgent = this.agent.https\r\n            agents.httpAgent = this.agent.http\r\n        }\r\n\r\n        if (this.host.substring(0, 5) === 'https') {\r\n            options.agent = agents.httpsAgent\r\n        } else {\r\n            options.agent = agents.httpAgent\r\n        }\r\n    }\r\n\r\n    if (this.headers) {\r\n        this.headers.forEach(function(header) {\r\n            headers[header.name] = header.value\r\n        })\r\n    }\r\n\r\n    // Default headers\r\n    if (!headers['Content-Type']) {\r\n        headers['Content-Type'] = 'application/json'\r\n    }\r\n\r\n    // As the Fetch API supports the credentials as following options 'include', 'omit', 'same-origin'\r\n    // https://developer.mozilla.org/en-US/docs/Web/API/fetch#credentials\r\n    // To avoid breaking change in 1.x we override this value based on boolean option.\r\n    if (this.withCredentials) {\r\n        options.credentials = 'include'\r\n    } else {\r\n        options.credentials = 'omit'\r\n    }\r\n\r\n    options.headers = headers\r\n\r\n    if (this.timeout > 0 && typeof controller !== 'undefined') {\r\n        this.timeoutId = setTimeout(function() {\r\n            controller.abort()\r\n        }, this.timeout)\r\n    }\r\n\r\n    const success = function(response) {\r\n        if (this.timeoutId !== undefined) {\r\n            clearTimeout(this.timeoutId)\r\n        }\r\n\r\n        // Response is a stream data so should be awaited for json response\r\n        response\r\n            .json()\r\n            .then(function(data) {\r\n                callback(null, data)\r\n            })\r\n            .catch(function() {\r\n                callback(errors.InvalidResponse(response))\r\n            })\r\n    }\r\n\r\n    const failed = function(error) {\r\n        if (this.timeoutId !== undefined) {\r\n            clearTimeout(this.timeoutId)\r\n        }\r\n\r\n        if (error.name === 'AbortError') {\r\n            callback(errors.ConnectionTimeout(this.timeout))\r\n        }\r\n\r\n        callback(errors.InvalidConnection(this.host))\r\n    }\r\n\r\n    // Disable eslint warning since fetch API is available through polyfill\r\n    // https://github.com/lquixada/cross-fetch#install\r\n    // eslint-disable-next-line no-undef\r\n    fetch(this.host, options)\r\n        .then(success.bind(this))\r\n        .catch(failed.bind(this))\r\n}\r\n\r\nHttpProvider.prototype.disconnect = function() {\r\n    // NO OP\r\n}\r\n\r\nHttpProvider.prototype.supportsSubscriptions = function() {\r\n    return false\r\n}\r\n\r\nmodule.exports = HttpProvider\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}