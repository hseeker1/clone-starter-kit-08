{"ast":null,"code":"/*\r\n    Modifications copyright 2018 The caver-js Authors\r\n    This file is part of web3.js.\r\n\r\n    web3.js is free software: you can redistribute it and/or modify\r\n    it under the terms of the GNU Lesser General Public License as published by\r\n    the Free Software Foundation, either version 3 of the License, or\r\n    (at your option) any later version.\r\n\r\n    web3.js is distributed in the hope that it will be useful,\r\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n    GNU Lesser General Public License for more details.\r\n\r\n    You should have received a copy of the GNU Lesser General Public License\r\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n    This file is derived from web3.js/packages/web3-eth/src/getNetworkType.js (2019/06/12).\r\n    Modified and improved for the caver-js development.\r\n*/\n\n/**\r\n * @file getNetworkType.js\r\n * @author Fabian Vogelsteller <fabian@ethereum.org>\r\n * @date 2017\r\n */\nvar _ = require('lodash');\n\nvar getNetworkType = function getNetworkType(callback) {\n  var _this = this;\n\n  var id;\n  return this.net.getId().then(function (givenId) {\n    id = givenId;\n    return _this.getBlock(0);\n  }).then(function (genesis) {\n    var returnValue = 'private';\n\n    if (genesis.hash === '0xe33ff05ceec2581ca9496f38a2bf9baad5d4eed629e896ccb33d1dc991bc4b4a' && id === 1001) {\n      returnValue = 'baobab';\n    }\n\n    if (genesis.hash === '0xc72e5293c3c3ba38ed8ae910f780e4caaa9fb95e79784f7ab74c3c262ea7137e' && id === 8217) {\n      returnValue = 'cypress';\n    }\n\n    if (_.isFunction(callback)) {\n      callback(null, returnValue);\n    }\n\n    return returnValue;\n  }).catch(function (err) {\n    if (_.isFunction(callback)) {\n      callback(err);\n    } else {\n      throw err;\n    }\n  });\n};\n\nmodule.exports = getNetworkType;","map":{"version":3,"names":["_","require","getNetworkType","callback","_this","id","net","getId","then","givenId","getBlock","genesis","returnValue","hash","isFunction","catch","err","module","exports"],"sources":["C:/Users/User/Documents/clone-starter-kit-08/node_modules/caver-js/packages/caver-klay/src/getNetworkType.js"],"sourcesContent":["/*\r\n    Modifications copyright 2018 The caver-js Authors\r\n    This file is part of web3.js.\r\n\r\n    web3.js is free software: you can redistribute it and/or modify\r\n    it under the terms of the GNU Lesser General Public License as published by\r\n    the Free Software Foundation, either version 3 of the License, or\r\n    (at your option) any later version.\r\n\r\n    web3.js is distributed in the hope that it will be useful,\r\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n    GNU Lesser General Public License for more details.\r\n\r\n    You should have received a copy of the GNU Lesser General Public License\r\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n    This file is derived from web3.js/packages/web3-eth/src/getNetworkType.js (2019/06/12).\r\n    Modified and improved for the caver-js development.\r\n*/\r\n/**\r\n * @file getNetworkType.js\r\n * @author Fabian Vogelsteller <fabian@ethereum.org>\r\n * @date 2017\r\n */\r\n\r\nconst _ = require('lodash')\r\n\r\nconst getNetworkType = function(callback) {\r\n    const _this = this\r\n    let id\r\n\r\n    return this.net\r\n        .getId()\r\n        .then(function(givenId) {\r\n            id = givenId\r\n\r\n            return _this.getBlock(0)\r\n        })\r\n        .then(function(genesis) {\r\n            let returnValue = 'private'\r\n\r\n            if (genesis.hash === '0xe33ff05ceec2581ca9496f38a2bf9baad5d4eed629e896ccb33d1dc991bc4b4a' && id === 1001) {\r\n                returnValue = 'baobab'\r\n            }\r\n            if (genesis.hash === '0xc72e5293c3c3ba38ed8ae910f780e4caaa9fb95e79784f7ab74c3c262ea7137e' && id === 8217) {\r\n                returnValue = 'cypress'\r\n            }\r\n\r\n            if (_.isFunction(callback)) {\r\n                callback(null, returnValue)\r\n            }\r\n            return returnValue\r\n        })\r\n        .catch(function(err) {\r\n            if (_.isFunction(callback)) {\r\n                callback(err)\r\n            } else {\r\n                throw err\r\n            }\r\n        })\r\n}\r\n\r\nmodule.exports = getNetworkType\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AAEA,IAAMA,CAAC,GAAGC,OAAO,CAAC,QAAD,CAAjB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAASC,QAAT,EAAmB;EACtC,IAAMC,KAAK,GAAG,IAAd;;EACA,IAAIC,EAAJ;EAEA,OAAO,KAAKC,GAAL,CACFC,KADE,GAEFC,IAFE,CAEG,UAASC,OAAT,EAAkB;IACpBJ,EAAE,GAAGI,OAAL;IAEA,OAAOL,KAAK,CAACM,QAAN,CAAe,CAAf,CAAP;EACH,CANE,EAOFF,IAPE,CAOG,UAASG,OAAT,EAAkB;IACpB,IAAIC,WAAW,GAAG,SAAlB;;IAEA,IAAID,OAAO,CAACE,IAAR,KAAiB,oEAAjB,IAAyFR,EAAE,KAAK,IAApG,EAA0G;MACtGO,WAAW,GAAG,QAAd;IACH;;IACD,IAAID,OAAO,CAACE,IAAR,KAAiB,oEAAjB,IAAyFR,EAAE,KAAK,IAApG,EAA0G;MACtGO,WAAW,GAAG,SAAd;IACH;;IAED,IAAIZ,CAAC,CAACc,UAAF,CAAaX,QAAb,CAAJ,EAA4B;MACxBA,QAAQ,CAAC,IAAD,EAAOS,WAAP,CAAR;IACH;;IACD,OAAOA,WAAP;EACH,CArBE,EAsBFG,KAtBE,CAsBI,UAASC,GAAT,EAAc;IACjB,IAAIhB,CAAC,CAACc,UAAF,CAAaX,QAAb,CAAJ,EAA4B;MACxBA,QAAQ,CAACa,GAAD,CAAR;IACH,CAFD,MAEO;MACH,MAAMA,GAAN;IACH;EACJ,CA5BE,CAAP;AA6BH,CAjCD;;AAmCAC,MAAM,CAACC,OAAP,GAAiBhB,cAAjB"},"metadata":{},"sourceType":"script"}