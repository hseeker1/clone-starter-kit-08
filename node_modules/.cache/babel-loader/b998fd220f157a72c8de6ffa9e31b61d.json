{"ast":null,"code":"var _slicedToArray = require(\"C:\\\\Users\\\\User\\\\Documents\\\\clone-starter-kit-08\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/slicedToArray\");\n\n/*\r\n    Copyright 2018 The caver-js Authors\r\n    This file is part of the caver-js library.\r\n\r\n    The caver-js library is free software: you can redistribute it and/or modify\r\n    it under the terms of the GNU Lesser General Public License as published by\r\n    the Free Software Foundation, either version 3 of the License, or\r\n    (at your option) any later version.\r\n\r\n    The caver-js library is distributed in the hope that it will be useful,\r\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\r\n    GNU Lesser General Public License for more details.\r\n\r\n    You should have received a copy of the GNU Lesser General Public License\r\n    along with the caver-js. If not, see <http://www.gnu.org/licenses/>.\r\n*/\nvar RLP = require('eth-lib/lib/rlp');\n\nvar Bytes = require('eth-lib/lib/bytes');\n\nvar utils = require('../../../../caver-utils');\n\nvar helpers = require('../../../../caver-core-helpers');\n\nvar _helpers$constants = helpers.constants,\n    SMART_CONTRACT_DEPLOY_TYPE_TAG = _helpers$constants.SMART_CONTRACT_DEPLOY_TYPE_TAG,\n    SMART_CONTRACT_EXECUTION_TYPE_TAG = _helpers$constants.SMART_CONTRACT_EXECUTION_TYPE_TAG,\n    FEE_DELEGATED_SMART_CONTRACT_EXECUTION_TYPE_TAG = _helpers$constants.FEE_DELEGATED_SMART_CONTRACT_EXECUTION_TYPE_TAG,\n    FEE_DELEGATED_SMART_CONTRACT_DEPLOY_TYPE_TAG = _helpers$constants.FEE_DELEGATED_SMART_CONTRACT_DEPLOY_TYPE_TAG,\n    FEE_DELEGATED_SMART_CONTRACT_DEPLOY_WITH_RATIO_TYPE_TAG = _helpers$constants.FEE_DELEGATED_SMART_CONTRACT_DEPLOY_WITH_RATIO_TYPE_TAG,\n    FEE_DELEGATED_SMART_CONTRACT_EXECUTION_WITH_RATIO_TYPE_TAG = _helpers$constants.FEE_DELEGATED_SMART_CONTRACT_EXECUTION_WITH_RATIO_TYPE_TAG,\n    CODE_FORMAT_EVM_TAG = _helpers$constants.CODE_FORMAT_EVM_TAG;\n\nfunction getCodeFormatTag(codeFormat) {\n  switch (codeFormat) {\n    case 0:\n    case 'EVM':\n      return CODE_FORMAT_EVM_TAG;\n  }\n\n  return CODE_FORMAT_EVM_TAG;\n}\n\nfunction rlpEncodeForContractDeploy(transaction) {\n  return RLP.encode([RLP.encode([SMART_CONTRACT_DEPLOY_TYPE_TAG, Bytes.fromNat(transaction.nonce), Bytes.fromNat(transaction.gasPrice), Bytes.fromNat(transaction.gas), transaction.to.toLowerCase(), Bytes.fromNat(transaction.value), transaction.from.toLowerCase(), transaction.data, Bytes.fromNat(transaction.humanReadable === true ? '0x1' : '0x0'), Bytes.fromNat(getCodeFormatTag(transaction.codeFormat))]), Bytes.fromNat(transaction.chainId || '0x1'), '0x', '0x']);\n}\n\nfunction rlpEncodeForContractExecution(transaction) {\n  return RLP.encode([RLP.encode([SMART_CONTRACT_EXECUTION_TYPE_TAG, Bytes.fromNat(transaction.nonce), Bytes.fromNat(transaction.gasPrice), Bytes.fromNat(transaction.gas), transaction.to.toLowerCase(), Bytes.fromNat(transaction.value || '0x0'), transaction.from.toLowerCase(), transaction.data]), Bytes.fromNat(transaction.chainId || '0x1'), '0x', '0x']);\n}\n\nfunction rlpEncodeForFeeDelegatedSmartContractDeploy(transaction) {\n  if (transaction.senderRawTransaction) {\n    var typeDetacehdRawTransaction = \"0x\".concat(transaction.senderRawTransaction.slice(4)); // eslint-disable-next-line no-unused-vars\n\n    var _utils$rlpDecode = utils.rlpDecode(typeDetacehdRawTransaction),\n        _utils$rlpDecode2 = _slicedToArray(_utils$rlpDecode, 10),\n        nonce = _utils$rlpDecode2[0],\n        gasPrice = _utils$rlpDecode2[1],\n        gas = _utils$rlpDecode2[2],\n        to = _utils$rlpDecode2[3],\n        value = _utils$rlpDecode2[4],\n        from = _utils$rlpDecode2[5],\n        data = _utils$rlpDecode2[6],\n        humanReadable = _utils$rlpDecode2[7],\n        codeFormat = _utils$rlpDecode2[8],\n        _utils$rlpDecode2$ = _slicedToArray(_utils$rlpDecode2[9], 1),\n        _utils$rlpDecode2$$ = _slicedToArray(_utils$rlpDecode2$[0], 3),\n        v = _utils$rlpDecode2$$[0],\n        r = _utils$rlpDecode2$$[1],\n        s = _utils$rlpDecode2$$[2];\n\n    return RLP.encode([RLP.encode([FEE_DELEGATED_SMART_CONTRACT_DEPLOY_TYPE_TAG, Bytes.fromNat(nonce), Bytes.fromNat(gasPrice), Bytes.fromNat(gas), to.toLowerCase(), Bytes.fromNat(value), from.toLowerCase(), data, humanReadable, codeFormat]), transaction.feePayer.toLowerCase(), Bytes.fromNat(transaction.chainId || '0x1'), '0x', '0x']);\n  }\n\n  return RLP.encode([RLP.encode([FEE_DELEGATED_SMART_CONTRACT_DEPLOY_TYPE_TAG, Bytes.fromNat(transaction.nonce), Bytes.fromNat(transaction.gasPrice), Bytes.fromNat(transaction.gas), transaction.to.toLowerCase(), Bytes.fromNat(transaction.value), transaction.from.toLowerCase(), transaction.data, Bytes.fromNat(transaction.humanReadable === true ? '0x1' : '0x0'), Bytes.fromNat(getCodeFormatTag(transaction.codeFormat))]), Bytes.fromNat(transaction.chainId || '0x1'), '0x', '0x']);\n}\n\nfunction rlpEncodeForFeeDelegatedSmartContractDeployWithRatio(transaction) {\n  if (transaction.senderRawTransaction) {\n    var typeDetacehdRawTransaction = \"0x\".concat(transaction.senderRawTransaction.slice(4)); // eslint-disable-next-line no-unused-vars\n\n    var _utils$rlpDecode3 = utils.rlpDecode(typeDetacehdRawTransaction),\n        _utils$rlpDecode4 = _slicedToArray(_utils$rlpDecode3, 11),\n        nonce = _utils$rlpDecode4[0],\n        gasPrice = _utils$rlpDecode4[1],\n        gas = _utils$rlpDecode4[2],\n        to = _utils$rlpDecode4[3],\n        value = _utils$rlpDecode4[4],\n        from = _utils$rlpDecode4[5],\n        data = _utils$rlpDecode4[6],\n        humanReadable = _utils$rlpDecode4[7],\n        feeRatio = _utils$rlpDecode4[8],\n        codeFormat = _utils$rlpDecode4[9],\n        _utils$rlpDecode4$ = _slicedToArray(_utils$rlpDecode4[10], 1),\n        _utils$rlpDecode4$$ = _slicedToArray(_utils$rlpDecode4$[0], 3),\n        v = _utils$rlpDecode4$$[0],\n        r = _utils$rlpDecode4$$[1],\n        s = _utils$rlpDecode4$$[2];\n\n    return RLP.encode([RLP.encode([FEE_DELEGATED_SMART_CONTRACT_DEPLOY_WITH_RATIO_TYPE_TAG, Bytes.fromNat(nonce), Bytes.fromNat(gasPrice), Bytes.fromNat(gas), to.toLowerCase(), Bytes.fromNat(value), from.toLowerCase(), data, humanReadable, feeRatio, codeFormat]), transaction.feePayer.toLowerCase(), Bytes.fromNat(transaction.chainId || '0x1'), '0x', '0x']);\n  }\n\n  return RLP.encode([RLP.encode([FEE_DELEGATED_SMART_CONTRACT_DEPLOY_WITH_RATIO_TYPE_TAG, Bytes.fromNat(transaction.nonce), Bytes.fromNat(transaction.gasPrice), Bytes.fromNat(transaction.gas), transaction.to.toLowerCase(), Bytes.fromNat(transaction.value), transaction.from.toLowerCase(), transaction.data, Bytes.fromNat(transaction.humanReadable === true ? '0x1' : '0x0'), Bytes.fromNat(transaction.feeRatio), Bytes.fromNat(getCodeFormatTag(transaction.codeFormat))]), Bytes.fromNat(transaction.chainId || '0x1'), '0x', '0x']);\n}\n\nfunction rlpEncodeForFeeDelegatedSmartContractExecution(transaction) {\n  if (transaction.senderRawTransaction) {\n    var typeDetacehdRawTransaction = \"0x\".concat(transaction.senderRawTransaction.slice(4)); // eslint-disable-next-line no-unused-vars\n\n    var _utils$rlpDecode5 = utils.rlpDecode(typeDetacehdRawTransaction),\n        _utils$rlpDecode6 = _slicedToArray(_utils$rlpDecode5, 8),\n        nonce = _utils$rlpDecode6[0],\n        gasPrice = _utils$rlpDecode6[1],\n        gas = _utils$rlpDecode6[2],\n        to = _utils$rlpDecode6[3],\n        value = _utils$rlpDecode6[4],\n        from = _utils$rlpDecode6[5],\n        data = _utils$rlpDecode6[6],\n        _utils$rlpDecode6$ = _slicedToArray(_utils$rlpDecode6[7], 1),\n        _utils$rlpDecode6$$ = _slicedToArray(_utils$rlpDecode6$[0], 3),\n        v = _utils$rlpDecode6$$[0],\n        r = _utils$rlpDecode6$$[1],\n        s = _utils$rlpDecode6$$[2];\n\n    return RLP.encode([RLP.encode([FEE_DELEGATED_SMART_CONTRACT_EXECUTION_TYPE_TAG, Bytes.fromNat(nonce), Bytes.fromNat(gasPrice), Bytes.fromNat(gas), to.toLowerCase(), Bytes.fromNat(value), from.toLowerCase(), data]), transaction.feePayer.toLowerCase(), Bytes.fromNat(transaction.chainId || '0x1'), '0x', '0x']);\n  }\n\n  return RLP.encode([RLP.encode([FEE_DELEGATED_SMART_CONTRACT_EXECUTION_TYPE_TAG, Bytes.fromNat(transaction.nonce), Bytes.fromNat(transaction.gasPrice), Bytes.fromNat(transaction.gas), transaction.to.toLowerCase(), Bytes.fromNat(transaction.value || '0x0'), transaction.from.toLowerCase(), transaction.data]), Bytes.fromNat(transaction.chainId || '0x1'), '0x', '0x']);\n}\n\nfunction rlpEncodeForFeeDelegatedSmartContractExecutionWithRatio(transaction) {\n  if (transaction.senderRawTransaction) {\n    var typeDetacehdRawTransaction = \"0x\".concat(transaction.senderRawTransaction.slice(4)); // eslint-disable-next-line no-unused-vars\n\n    var _utils$rlpDecode7 = utils.rlpDecode(typeDetacehdRawTransaction),\n        _utils$rlpDecode8 = _slicedToArray(_utils$rlpDecode7, 9),\n        nonce = _utils$rlpDecode8[0],\n        gasPrice = _utils$rlpDecode8[1],\n        gas = _utils$rlpDecode8[2],\n        to = _utils$rlpDecode8[3],\n        value = _utils$rlpDecode8[4],\n        from = _utils$rlpDecode8[5],\n        data = _utils$rlpDecode8[6],\n        feeRatio = _utils$rlpDecode8[7],\n        _utils$rlpDecode8$ = _slicedToArray(_utils$rlpDecode8[8], 1),\n        _utils$rlpDecode8$$ = _slicedToArray(_utils$rlpDecode8$[0], 3),\n        v = _utils$rlpDecode8$$[0],\n        r = _utils$rlpDecode8$$[1],\n        s = _utils$rlpDecode8$$[2];\n\n    return RLP.encode([RLP.encode([FEE_DELEGATED_SMART_CONTRACT_EXECUTION_WITH_RATIO_TYPE_TAG, Bytes.fromNat(nonce), Bytes.fromNat(gasPrice), Bytes.fromNat(gas), to.toLowerCase(), Bytes.fromNat(value), from.toLowerCase(), data, Bytes.fromNat(feeRatio)]), transaction.feePayer.toLowerCase(), Bytes.fromNat(transaction.chainId || '0x1'), '0x', '0x']);\n  }\n\n  return RLP.encode([RLP.encode([FEE_DELEGATED_SMART_CONTRACT_EXECUTION_WITH_RATIO_TYPE_TAG, Bytes.fromNat(transaction.nonce), Bytes.fromNat(transaction.gasPrice), Bytes.fromNat(transaction.gas), transaction.to.toLowerCase(), Bytes.fromNat(transaction.value || '0x0'), transaction.from.toLowerCase(), transaction.data, Bytes.fromNat(transaction.feeRatio)]), Bytes.fromNat(transaction.chainId || '0x1'), '0x', '0x']);\n}\n\nmodule.exports = {\n  rlpEncodeForContractDeploy: rlpEncodeForContractDeploy,\n  rlpEncodeForFeeDelegatedSmartContractDeploy: rlpEncodeForFeeDelegatedSmartContractDeploy,\n  rlpEncodeForFeeDelegatedSmartContractDeployWithRatio: rlpEncodeForFeeDelegatedSmartContractDeployWithRatio,\n  rlpEncodeForContractExecution: rlpEncodeForContractExecution,\n  rlpEncodeForFeeDelegatedSmartContractExecution: rlpEncodeForFeeDelegatedSmartContractExecution,\n  rlpEncodeForFeeDelegatedSmartContractExecutionWithRatio: rlpEncodeForFeeDelegatedSmartContractExecutionWithRatio\n};","map":{"version":3,"names":["RLP","require","Bytes","utils","helpers","constants","SMART_CONTRACT_DEPLOY_TYPE_TAG","SMART_CONTRACT_EXECUTION_TYPE_TAG","FEE_DELEGATED_SMART_CONTRACT_EXECUTION_TYPE_TAG","FEE_DELEGATED_SMART_CONTRACT_DEPLOY_TYPE_TAG","FEE_DELEGATED_SMART_CONTRACT_DEPLOY_WITH_RATIO_TYPE_TAG","FEE_DELEGATED_SMART_CONTRACT_EXECUTION_WITH_RATIO_TYPE_TAG","CODE_FORMAT_EVM_TAG","getCodeFormatTag","codeFormat","rlpEncodeForContractDeploy","transaction","encode","fromNat","nonce","gasPrice","gas","to","toLowerCase","value","from","data","humanReadable","chainId","rlpEncodeForContractExecution","rlpEncodeForFeeDelegatedSmartContractDeploy","senderRawTransaction","typeDetacehdRawTransaction","slice","rlpDecode","v","r","s","feePayer","rlpEncodeForFeeDelegatedSmartContractDeployWithRatio","feeRatio","rlpEncodeForFeeDelegatedSmartContractExecution","rlpEncodeForFeeDelegatedSmartContractExecutionWithRatio","module","exports"],"sources":["C:/Users/User/Documents/clone-starter-kit-08/node_modules/caver-js/packages/caver-klay/caver-klay-accounts/src/transactionType/contract.js"],"sourcesContent":["/*\r\n    Copyright 2018 The caver-js Authors\r\n    This file is part of the caver-js library.\r\n\r\n    The caver-js library is free software: you can redistribute it and/or modify\r\n    it under the terms of the GNU Lesser General Public License as published by\r\n    the Free Software Foundation, either version 3 of the License, or\r\n    (at your option) any later version.\r\n\r\n    The caver-js library is distributed in the hope that it will be useful,\r\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\r\n    GNU Lesser General Public License for more details.\r\n\r\n    You should have received a copy of the GNU Lesser General Public License\r\n    along with the caver-js. If not, see <http://www.gnu.org/licenses/>.\r\n*/\r\n\r\nconst RLP = require('eth-lib/lib/rlp')\r\nconst Bytes = require('eth-lib/lib/bytes')\r\nconst utils = require('../../../../caver-utils')\r\nconst helpers = require('../../../../caver-core-helpers')\r\n\r\nconst {\r\n    SMART_CONTRACT_DEPLOY_TYPE_TAG,\r\n    SMART_CONTRACT_EXECUTION_TYPE_TAG,\r\n    FEE_DELEGATED_SMART_CONTRACT_EXECUTION_TYPE_TAG,\r\n    FEE_DELEGATED_SMART_CONTRACT_DEPLOY_TYPE_TAG,\r\n    FEE_DELEGATED_SMART_CONTRACT_DEPLOY_WITH_RATIO_TYPE_TAG,\r\n    FEE_DELEGATED_SMART_CONTRACT_EXECUTION_WITH_RATIO_TYPE_TAG,\r\n    CODE_FORMAT_EVM_TAG,\r\n} = helpers.constants\r\n\r\nfunction getCodeFormatTag(codeFormat) {\r\n    switch (codeFormat) {\r\n        case 0:\r\n        case 'EVM':\r\n            return CODE_FORMAT_EVM_TAG\r\n    }\r\n    return CODE_FORMAT_EVM_TAG\r\n}\r\n\r\nfunction rlpEncodeForContractDeploy(transaction) {\r\n    return RLP.encode([\r\n        RLP.encode([\r\n            SMART_CONTRACT_DEPLOY_TYPE_TAG,\r\n            Bytes.fromNat(transaction.nonce),\r\n            Bytes.fromNat(transaction.gasPrice),\r\n            Bytes.fromNat(transaction.gas),\r\n            transaction.to.toLowerCase(),\r\n            Bytes.fromNat(transaction.value),\r\n            transaction.from.toLowerCase(),\r\n            transaction.data,\r\n            Bytes.fromNat(transaction.humanReadable === true ? '0x1' : '0x0'),\r\n            Bytes.fromNat(getCodeFormatTag(transaction.codeFormat)),\r\n        ]),\r\n        Bytes.fromNat(transaction.chainId || '0x1'),\r\n        '0x',\r\n        '0x',\r\n    ])\r\n}\r\n\r\nfunction rlpEncodeForContractExecution(transaction) {\r\n    return RLP.encode([\r\n        RLP.encode([\r\n            SMART_CONTRACT_EXECUTION_TYPE_TAG,\r\n            Bytes.fromNat(transaction.nonce),\r\n            Bytes.fromNat(transaction.gasPrice),\r\n            Bytes.fromNat(transaction.gas),\r\n            transaction.to.toLowerCase(),\r\n            Bytes.fromNat(transaction.value || '0x0'),\r\n            transaction.from.toLowerCase(),\r\n            transaction.data,\r\n        ]),\r\n        Bytes.fromNat(transaction.chainId || '0x1'),\r\n        '0x',\r\n        '0x',\r\n    ])\r\n}\r\n\r\nfunction rlpEncodeForFeeDelegatedSmartContractDeploy(transaction) {\r\n    if (transaction.senderRawTransaction) {\r\n        const typeDetacehdRawTransaction = `0x${transaction.senderRawTransaction.slice(4)}`\r\n\r\n        // eslint-disable-next-line no-unused-vars\r\n        const [nonce, gasPrice, gas, to, value, from, data, humanReadable, codeFormat, [[v, r, s]]] = utils.rlpDecode(\r\n            typeDetacehdRawTransaction\r\n        )\r\n\r\n        return RLP.encode([\r\n            RLP.encode([\r\n                FEE_DELEGATED_SMART_CONTRACT_DEPLOY_TYPE_TAG,\r\n                Bytes.fromNat(nonce),\r\n                Bytes.fromNat(gasPrice),\r\n                Bytes.fromNat(gas),\r\n                to.toLowerCase(),\r\n                Bytes.fromNat(value),\r\n                from.toLowerCase(),\r\n                data,\r\n                humanReadable,\r\n                codeFormat,\r\n            ]),\r\n            transaction.feePayer.toLowerCase(),\r\n            Bytes.fromNat(transaction.chainId || '0x1'),\r\n            '0x',\r\n            '0x',\r\n        ])\r\n    }\r\n    return RLP.encode([\r\n        RLP.encode([\r\n            FEE_DELEGATED_SMART_CONTRACT_DEPLOY_TYPE_TAG,\r\n            Bytes.fromNat(transaction.nonce),\r\n            Bytes.fromNat(transaction.gasPrice),\r\n            Bytes.fromNat(transaction.gas),\r\n            transaction.to.toLowerCase(),\r\n            Bytes.fromNat(transaction.value),\r\n            transaction.from.toLowerCase(),\r\n            transaction.data,\r\n            Bytes.fromNat(transaction.humanReadable === true ? '0x1' : '0x0'),\r\n            Bytes.fromNat(getCodeFormatTag(transaction.codeFormat)),\r\n        ]),\r\n        Bytes.fromNat(transaction.chainId || '0x1'),\r\n        '0x',\r\n        '0x',\r\n    ])\r\n}\r\n\r\nfunction rlpEncodeForFeeDelegatedSmartContractDeployWithRatio(transaction) {\r\n    if (transaction.senderRawTransaction) {\r\n        const typeDetacehdRawTransaction = `0x${transaction.senderRawTransaction.slice(4)}`\r\n\r\n        // eslint-disable-next-line no-unused-vars\r\n        const [nonce, gasPrice, gas, to, value, from, data, humanReadable, feeRatio, codeFormat, [[v, r, s]]] = utils.rlpDecode(\r\n            typeDetacehdRawTransaction\r\n        )\r\n\r\n        return RLP.encode([\r\n            RLP.encode([\r\n                FEE_DELEGATED_SMART_CONTRACT_DEPLOY_WITH_RATIO_TYPE_TAG,\r\n                Bytes.fromNat(nonce),\r\n                Bytes.fromNat(gasPrice),\r\n                Bytes.fromNat(gas),\r\n                to.toLowerCase(),\r\n                Bytes.fromNat(value),\r\n                from.toLowerCase(),\r\n                data,\r\n                humanReadable,\r\n                feeRatio,\r\n                codeFormat,\r\n            ]),\r\n            transaction.feePayer.toLowerCase(),\r\n            Bytes.fromNat(transaction.chainId || '0x1'),\r\n            '0x',\r\n            '0x',\r\n        ])\r\n    }\r\n    return RLP.encode([\r\n        RLP.encode([\r\n            FEE_DELEGATED_SMART_CONTRACT_DEPLOY_WITH_RATIO_TYPE_TAG,\r\n            Bytes.fromNat(transaction.nonce),\r\n            Bytes.fromNat(transaction.gasPrice),\r\n            Bytes.fromNat(transaction.gas),\r\n            transaction.to.toLowerCase(),\r\n            Bytes.fromNat(transaction.value),\r\n            transaction.from.toLowerCase(),\r\n            transaction.data,\r\n            Bytes.fromNat(transaction.humanReadable === true ? '0x1' : '0x0'),\r\n            Bytes.fromNat(transaction.feeRatio),\r\n            Bytes.fromNat(getCodeFormatTag(transaction.codeFormat)),\r\n        ]),\r\n        Bytes.fromNat(transaction.chainId || '0x1'),\r\n        '0x',\r\n        '0x',\r\n    ])\r\n}\r\n\r\nfunction rlpEncodeForFeeDelegatedSmartContractExecution(transaction) {\r\n    if (transaction.senderRawTransaction) {\r\n        const typeDetacehdRawTransaction = `0x${transaction.senderRawTransaction.slice(4)}`\r\n\r\n        // eslint-disable-next-line no-unused-vars\r\n        const [nonce, gasPrice, gas, to, value, from, data, [[v, r, s]]] = utils.rlpDecode(typeDetacehdRawTransaction)\r\n\r\n        return RLP.encode([\r\n            RLP.encode([\r\n                FEE_DELEGATED_SMART_CONTRACT_EXECUTION_TYPE_TAG,\r\n                Bytes.fromNat(nonce),\r\n                Bytes.fromNat(gasPrice),\r\n                Bytes.fromNat(gas),\r\n                to.toLowerCase(),\r\n                Bytes.fromNat(value),\r\n                from.toLowerCase(),\r\n                data,\r\n            ]),\r\n            transaction.feePayer.toLowerCase(),\r\n            Bytes.fromNat(transaction.chainId || '0x1'),\r\n            '0x',\r\n            '0x',\r\n        ])\r\n    }\r\n    return RLP.encode([\r\n        RLP.encode([\r\n            FEE_DELEGATED_SMART_CONTRACT_EXECUTION_TYPE_TAG,\r\n            Bytes.fromNat(transaction.nonce),\r\n            Bytes.fromNat(transaction.gasPrice),\r\n            Bytes.fromNat(transaction.gas),\r\n            transaction.to.toLowerCase(),\r\n            Bytes.fromNat(transaction.value || '0x0'),\r\n            transaction.from.toLowerCase(),\r\n            transaction.data,\r\n        ]),\r\n        Bytes.fromNat(transaction.chainId || '0x1'),\r\n        '0x',\r\n        '0x',\r\n    ])\r\n}\r\n\r\nfunction rlpEncodeForFeeDelegatedSmartContractExecutionWithRatio(transaction) {\r\n    if (transaction.senderRawTransaction) {\r\n        const typeDetacehdRawTransaction = `0x${transaction.senderRawTransaction.slice(4)}`\r\n\r\n        // eslint-disable-next-line no-unused-vars\r\n        const [nonce, gasPrice, gas, to, value, from, data, feeRatio, [[v, r, s]]] = utils.rlpDecode(typeDetacehdRawTransaction)\r\n\r\n        return RLP.encode([\r\n            RLP.encode([\r\n                FEE_DELEGATED_SMART_CONTRACT_EXECUTION_WITH_RATIO_TYPE_TAG,\r\n                Bytes.fromNat(nonce),\r\n                Bytes.fromNat(gasPrice),\r\n                Bytes.fromNat(gas),\r\n                to.toLowerCase(),\r\n                Bytes.fromNat(value),\r\n                from.toLowerCase(),\r\n                data,\r\n                Bytes.fromNat(feeRatio),\r\n            ]),\r\n            transaction.feePayer.toLowerCase(),\r\n            Bytes.fromNat(transaction.chainId || '0x1'),\r\n            '0x',\r\n            '0x',\r\n        ])\r\n    }\r\n    return RLP.encode([\r\n        RLP.encode([\r\n            FEE_DELEGATED_SMART_CONTRACT_EXECUTION_WITH_RATIO_TYPE_TAG,\r\n            Bytes.fromNat(transaction.nonce),\r\n            Bytes.fromNat(transaction.gasPrice),\r\n            Bytes.fromNat(transaction.gas),\r\n            transaction.to.toLowerCase(),\r\n            Bytes.fromNat(transaction.value || '0x0'),\r\n            transaction.from.toLowerCase(),\r\n            transaction.data,\r\n            Bytes.fromNat(transaction.feeRatio),\r\n        ]),\r\n        Bytes.fromNat(transaction.chainId || '0x1'),\r\n        '0x',\r\n        '0x',\r\n    ])\r\n}\r\n\r\nmodule.exports = {\r\n    rlpEncodeForContractDeploy,\r\n    rlpEncodeForFeeDelegatedSmartContractDeploy,\r\n    rlpEncodeForFeeDelegatedSmartContractDeployWithRatio,\r\n\r\n    rlpEncodeForContractExecution,\r\n    rlpEncodeForFeeDelegatedSmartContractExecution,\r\n    rlpEncodeForFeeDelegatedSmartContractExecutionWithRatio,\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}