{"ast":null,"code":"var _asyncToGenerator = require(\"C:\\\\Users\\\\User\\\\Documents\\\\clone-starter-kit-08\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\User\\\\Documents\\\\clone-starter-kit-08\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\User\\\\Documents\\\\clone-starter-kit-08\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\n/*\r\n    Copyright 2020 The caver-js Authors\r\n    This file is part of the caver-js library.\r\n\r\n    The caver-js library is free software: you can redistribute it and/or modify\r\n    it under the terms of the GNU Lesser General Public License as published by\r\n    the Free Software Foundation, either version 3 of the License, or\r\n    (at your option) any later version.\r\n\r\n    The caver-js library is distributed in the hope that it will be useful,\r\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\r\n    GNU Lesser General Public License for more details.\r\n\r\n    You should have received a copy of the GNU Lesser General Public License\r\n    along with the caver-js. If not, see <http://www.gnu.org/licenses/>.\r\n*/\n\n/* eslint-disable no-unused-vars */\nvar LegacyTransaction = require('./transactionTypes/legacyTransaction/legacyTransaction');\n\nvar EthereumAccessList = require('./transactionTypes/ethereumTypedTransaction/ethereumAccessList');\n\nvar EthereumDynamicFee = require('./transactionTypes/ethereumTypedTransaction/ethereumDynamicFee');\n\nvar ValueTransfer = require('./transactionTypes/valueTransfer/valueTransfer');\n\nvar FeeDelegatedValueTransfer = require('./transactionTypes/valueTransfer/feeDelegatedValueTransfer');\n\nvar FeeDelegatedValueTransferWithRatio = require('./transactionTypes/valueTransfer/feeDelegatedValueTransferWithRatio');\n\nvar ValueTransferMemo = require('./transactionTypes/valueTransferMemo/valueTransferMemo');\n\nvar FeeDelegatedValueTransferMemo = require('./transactionTypes/valueTransferMemo/feeDelegatedValueTransferMemo');\n\nvar FeeDelegatedValueTransferMemoWithRatio = require('./transactionTypes/valueTransferMemo/feeDelegatedValueTransferMemoWithRatio');\n\nvar AccountUpdate = require('./transactionTypes/accountUpdate/accountUpdate');\n\nvar FeeDelegatedAccountUpdate = require('./transactionTypes/accountUpdate/feeDelegatedAccountUpdate');\n\nvar FeeDelegatedAccountUpdateWithRatio = require('./transactionTypes/accountUpdate/feeDelegatedAccountUpdateWithRatio');\n\nvar SmartContractDeploy = require('./transactionTypes/smartContractDeploy/smartContractDeploy');\n\nvar FeeDelegatedSmartContractDeploy = require('./transactionTypes/smartContractDeploy/feeDelegatedSmartContractDeploy');\n\nvar FeeDelegatedSmartContractDeployWithRatio = require('./transactionTypes/smartContractDeploy/feeDelegatedSmartContractDeployWithRatio');\n\nvar SmartContractExecution = require('./transactionTypes/smartContractExecution/smartContractExecution');\n\nvar FeeDelegatedSmartContractExecution = require('./transactionTypes/smartContractExecution/feeDelegatedSmartContractExecution');\n\nvar FeeDelegatedSmartContractExecutionWithRatio = require('./transactionTypes/smartContractExecution/feeDelegatedSmartContractExecutionWithRatio');\n\nvar Cancel = require('./transactionTypes/cancel/cancel');\n\nvar FeeDelegatedCancel = require('./transactionTypes/cancel/feeDelegatedCancel');\n\nvar FeeDelegatedCancelWithRatio = require('./transactionTypes/cancel/feeDelegatedCancelWithRatio');\n\nvar ChainDataAnchoring = require('./transactionTypes/chainDataAnchoring/chainDataAnchoring');\n\nvar FeeDelegatedChainDataAnchoring = require('./transactionTypes/chainDataAnchoring/feeDelegatedChainDataAnchoring');\n\nvar FeeDelegatedChainDataAnchoringWithRatio = require('./transactionTypes/chainDataAnchoring/feeDelegatedChainDataAnchoringWithRatio');\n\nvar LegacyTransactionWrapper = require('./transactionTypes/wrappers/legacyTransactionWrapper');\n\nvar EthereumAccessListWrapper = require('./transactionTypes/wrappers/ethereumAccessListWrapper');\n\nvar EthereumDynamicFeeWrapper = require('./transactionTypes/wrappers/ethereumDynamicFeeWrapper');\n\nvar ValueTransferWrapper = require('./transactionTypes/wrappers/valueTransferWrapper');\n\nvar FeeDelegatedValueTransferWrapper = require('./transactionTypes/wrappers/feeDelegatedValueTransferWrapper');\n\nvar FeeDelegatedValueTransferWithRatioWrapper = require('./transactionTypes/wrappers/feeDelegatedValueTransferWithRatioWrapper');\n\nvar ValueTransferMemoWrapper = require('./transactionTypes/wrappers/valueTransferMemoWrapper');\n\nvar FeeDelegatedValueTransferMemoWrapper = require('./transactionTypes/wrappers/feeDelegatedValueTransferMemoWrapper');\n\nvar FeeDelegatedValueTransferMemoWithRatioWrapper = require('./transactionTypes/wrappers/feeDelegatedValueTransferMemoWithRatioWrapper');\n\nvar AccountUpdateWrapper = require('./transactionTypes/wrappers/accountUpdateWrapper');\n\nvar FeeDelegatedAccountUpdateWrapper = require('./transactionTypes/wrappers/feeDelegatedAccountUpdateWrapper');\n\nvar FeeDelegatedAccountUpdateWithRatioWrapper = require('./transactionTypes/wrappers/feeDelegatedAccountUpdateWithRatioWrapper');\n\nvar SmartContractDeployWrapper = require('./transactionTypes/wrappers/smartContractDeployWrapper');\n\nvar FeeDelegatedSmartContractDeployWrapper = require('./transactionTypes/wrappers/feeDelegatedSmartContractDeployWrapper');\n\nvar FeeDelegatedSmartContractDeployWithRatioWrapper = require('./transactionTypes/wrappers/feeDelegatedSmartContractDeployWithRatioWrapper');\n\nvar SmartContractExecutionWrapper = require('./transactionTypes/wrappers/smartContractExecutionWrapper');\n\nvar FeeDelegatedSmartContractExecutionWrapper = require('./transactionTypes/wrappers/feeDelegatedSmartContractExecutionWrapper');\n\nvar FeeDelegatedSmartContractExecutionWithRatioWrapper = require('./transactionTypes/wrappers/feeDelegatedSmartContractExecutionWithRatioWrapper');\n\nvar CancelWrapper = require('./transactionTypes/wrappers/cancelWrapper');\n\nvar FeeDelegatedCancelWrapper = require('./transactionTypes/wrappers/feeDelegatedCancelWrapper');\n\nvar FeeDelegatedCancelWithRatioWrapper = require('./transactionTypes/wrappers/feeDelegatedCancelWithRatioWrapper');\n\nvar ChainDataAnchoringWrapper = require('./transactionTypes/wrappers/chainDataAnchoringWrapper');\n\nvar FeeDelegatedChainDataAnchoringWrapper = require('./transactionTypes/wrappers/feeDelegatedChainDataAnchoringWrapper');\n\nvar FeeDelegatedChainDataAnchoringWithRatioWrapper = require('./transactionTypes/wrappers/feeDelegatedChainDataAnchoringWithRatioWrapper');\n\nvar TransactionDecoder = require('./transactionDecoder/transactionDecoder');\n\nvar AbstractTransaction = require('./transactionTypes/abstractTransaction');\n\nvar _require = require('./transactionHelper/transactionHelper'),\n    TX_TYPE_STRING = _require.TX_TYPE_STRING,\n    TX_TYPE_TAG = _require.TX_TYPE_TAG;\n\nvar Account = require('../../caver-account');\n\nvar AbstractFeeDelegatedTransaction = require('./transactionTypes/abstractFeeDelegatedTransaction');\n\nvar AccessList = require('./utils/accessList');\n\nvar AccessTuple = require('./utils/accessTuple');\n/**\r\n * @typedef {LegacyTransaction|ValueTransfer|FeeDelegatedValueTransfer|FeeDelegatedValueTransferWithRatio|ValueTransferMemo|FeeDelegatedValueTransferMemo|FeeDelegatedValueTransferMemoWithRatio|AccountUpdate|FeeDelegatedAccountUpdate|FeeDelegatedAccountUpdateWithRatio|SmartContractDeploy|FeeDelegatedSmartContractDeploy|FeeDelegatedSmartContractDeployWithRatio|SmartContractExecution|FeeDelegatedSmartContractExecution|FeeDelegatedSmartContractExecution|FeeDelegatedSmartContractExecutionWithRatio|Cancel|FeeDelegatedCancel|FeeDelegatedCancelWithRatio|ChainDataAnchoring|FeeDelegatedChainDataAnchoring|FeeDelegatedChainDataAnchoringWithRatio|EthereumAccessList|EthereumDynamicFee} module:Transaction.Transaction\r\n */\n\n/**\r\n * @typedef {FeeDelegatedValueTransfer|FeeDelegatedValueTransferWithRatio|FeeDelegatedValueTransferMemo|FeeDelegatedValueTransferMemoWithRatio|FeeDelegatedAccountUpdate|FeeDelegatedAccountUpdateWithRatio|FeeDelegatedSmartContractDeploy|FeeDelegatedSmartContractDeployWithRatio|FeeDelegatedSmartContractExecution|FeeDelegatedSmartContractExecution|FeeDelegatedSmartContractExecutionWithRatio|FeeDelegatedCancel|FeeDelegatedCancelWithRatio|FeeDelegatedChainDataAnchoring|FeeDelegatedChainDataAnchoringWithRatio} module:Transaction.FeeDelegatedTransaction\r\n */\n\n/**\r\n * A class that manages instances of the transaction wrapper and other functions provided by the transaction module.\r\n * @class\r\n * @hideconstructor\r\n */\n\n\nvar TransactionModule = /*#__PURE__*/function () {\n  \"use strict\";\n\n  /**\r\n   * Creates a TransactionModule.\r\n   *\r\n   * @constructor\r\n   * @param {object} klaytnCall - An object includes klay rpc calls.\r\n   */\n  function TransactionModule(klaytnCall) {\n    _classCallCheck(this, TransactionModule);\n\n    if (!klaytnCall) throw new Error(\"Invalid constructor parameter: klaytnCall is undefined.\");\n    this.klaytnCall = klaytnCall;\n    this.legacyTransaction = new LegacyTransactionWrapper(this.klaytnCall);\n    this.ethereumAccessList = new EthereumAccessListWrapper(this.klaytnCall);\n    this.ethereumDynamicFee = new EthereumDynamicFeeWrapper(this.klaytnCall);\n    this.valueTransfer = new ValueTransferWrapper(this.klaytnCall);\n    this.feeDelegatedValueTransfer = new FeeDelegatedValueTransferWrapper(this.klaytnCall);\n    this.feeDelegatedValueTransferWithRatio = new FeeDelegatedValueTransferWithRatioWrapper(this.klaytnCall);\n    this.valueTransferMemo = new ValueTransferMemoWrapper(this.klaytnCall);\n    this.feeDelegatedValueTransferMemo = new FeeDelegatedValueTransferMemoWrapper(this.klaytnCall);\n    this.feeDelegatedValueTransferMemoWithRatio = new FeeDelegatedValueTransferMemoWithRatioWrapper(this.klaytnCall);\n    this.accountUpdate = new AccountUpdateWrapper(this.klaytnCall);\n    this.feeDelegatedAccountUpdate = new FeeDelegatedAccountUpdateWrapper(this.klaytnCall);\n    this.feeDelegatedAccountUpdateWithRatio = new FeeDelegatedAccountUpdateWithRatioWrapper(this.klaytnCall);\n    this.smartContractDeploy = new SmartContractDeployWrapper(this.klaytnCall);\n    this.feeDelegatedSmartContractDeploy = new FeeDelegatedSmartContractDeployWrapper(this.klaytnCall);\n    this.feeDelegatedSmartContractDeployWithRatio = new FeeDelegatedSmartContractDeployWithRatioWrapper(this.klaytnCall);\n    this.smartContractExecution = new SmartContractExecutionWrapper(this.klaytnCall);\n    this.feeDelegatedSmartContractExecution = new FeeDelegatedSmartContractExecutionWrapper(this.klaytnCall);\n    this.feeDelegatedSmartContractExecutionWithRatio = new FeeDelegatedSmartContractExecutionWithRatioWrapper(this.klaytnCall);\n    this.cancel = new CancelWrapper(this.klaytnCall);\n    this.feeDelegatedCancel = new FeeDelegatedCancelWrapper(this.klaytnCall);\n    this.feeDelegatedCancelWithRatio = new FeeDelegatedCancelWithRatioWrapper(this.klaytnCall);\n    this.chainDataAnchoring = new ChainDataAnchoringWrapper(this.klaytnCall);\n    this.feeDelegatedChainDataAnchoring = new FeeDelegatedChainDataAnchoringWrapper(this.klaytnCall);\n    this.feeDelegatedChainDataAnchoringWithRatio = new FeeDelegatedChainDataAnchoringWithRatioWrapper(this.klaytnCall);\n    this.type = TX_TYPE_STRING;\n    this.tag = TX_TYPE_TAG;\n    this.utils = {\n      accessList: AccessList,\n      accessTuple: AccessTuple\n    };\n  }\n  /**\r\n   * @type {object}\r\n   */\n\n\n  _createClass(TransactionModule, [{\n    key: \"klaytnCall\",\n    get: function get() {\n      return this._klaytnCall;\n    },\n    set: function set(c) {\n      this._klaytnCall = c;\n    }\n    /**\r\n     * Querys transaction from Klaytn and converts to a caver transaction instance.\r\n     * If it fails to receive a transaction from Klaytn, an error is thrown.\r\n     *\r\n     * @example\r\n     * const txObject = await caver.transaction.getTransactionByHash('0x{transaction hash}')\r\n     *\r\n     * @method getTransactionByHash\r\n     * @param  {string} transactionHash The transaction hash string to query from Klaytn.\r\n     * @return {Promise<AbstractTransaction>}\r\n     */\n\n  }, {\n    key: \"getTransactionByHash\",\n    value: function () {\n      var _getTransactionByHash = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(transactionHash) {\n        var txObject, account;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.klaytnCall.getTransactionByHash(transactionHash);\n\n              case 2:\n                txObject = _context.sent;\n\n                if (!(txObject === null)) {\n                  _context.next = 5;\n                  break;\n                }\n\n                throw new Error(\"Failed to get transaction from Klaytn with '\".concat(transactionHash, \"'.\"));\n\n              case 5:\n                // AccountUpdate transaction received from Klaytn defines encodedAccountKey string in `key` field.\n                // This needs to be formatted according to the caver transaction format (`account` field).\n                if (txObject.key) {\n                  account = Account.createFromRLPEncoding(txObject.from, txObject.key);\n                  txObject.account = account;\n                  delete txObject.key;\n                }\n\n                _context.t0 = txObject.type;\n                _context.next = _context.t0 === 'TxTypeLegacyTransaction' ? 9 : _context.t0 === 'TxTypeValueTransfer' ? 11 : _context.t0 === 'TxTypeFeeDelegatedValueTransfer' ? 13 : _context.t0 === 'TxTypeFeeDelegatedValueTransferWithRatio' ? 15 : _context.t0 === 'TxTypeValueTransferMemo' ? 17 : _context.t0 === 'TxTypeFeeDelegatedValueTransferMemo' ? 19 : _context.t0 === 'TxTypeFeeDelegatedValueTransferMemoWithRatio' ? 21 : _context.t0 === 'TxTypeAccountUpdate' ? 23 : _context.t0 === 'TxTypeFeeDelegatedAccountUpdate' ? 25 : _context.t0 === 'TxTypeFeeDelegatedAccountUpdateWithRatio' ? 27 : _context.t0 === 'TxTypeSmartContractDeploy' ? 29 : _context.t0 === 'TxTypeFeeDelegatedSmartContractDeploy' ? 31 : _context.t0 === 'TxTypeFeeDelegatedSmartContractDeployWithRatio' ? 33 : _context.t0 === 'TxTypeSmartContractExecution' ? 35 : _context.t0 === 'TxTypeFeeDelegatedSmartContractExecution' ? 37 : _context.t0 === 'TxTypeFeeDelegatedSmartContractExecutionWithRatio' ? 39 : _context.t0 === 'TxTypeCancel' ? 41 : _context.t0 === 'TxTypeFeeDelegatedCancel' ? 43 : _context.t0 === 'TxTypeFeeDelegatedCancelWithRatio' ? 45 : _context.t0 === 'TxTypeChainDataAnchoring' ? 47 : _context.t0 === 'TxTypeFeeDelegatedChainDataAnchoring' ? 49 : _context.t0 === 'TxTypeFeeDelegatedChainDataAnchoringWithRatio' ? 51 : _context.t0 === 'TxTypeEthereumAccessList' ? 53 : _context.t0 === 'TxTypeEthereumDynamicFee' ? 55 : 57;\n                break;\n\n              case 9:\n                txObject = this.legacyTransaction.create(txObject, this.klaytnCall);\n                return _context.abrupt(\"break\", 57);\n\n              case 11:\n                txObject = this.valueTransfer.create(txObject, this.klaytnCall);\n                return _context.abrupt(\"break\", 57);\n\n              case 13:\n                txObject = this.feeDelegatedValueTransfer.create(txObject, this.klaytnCall);\n                return _context.abrupt(\"break\", 57);\n\n              case 15:\n                txObject = this.feeDelegatedValueTransferWithRatio.create(txObject, this.klaytnCall);\n                return _context.abrupt(\"break\", 57);\n\n              case 17:\n                txObject = this.valueTransferMemo.create(txObject, this.klaytnCall);\n                return _context.abrupt(\"break\", 57);\n\n              case 19:\n                txObject = this.feeDelegatedValueTransferMemo.create(txObject, this.klaytnCall);\n                return _context.abrupt(\"break\", 57);\n\n              case 21:\n                txObject = this.feeDelegatedValueTransferMemoWithRatio.create(txObject, this.klaytnCall);\n                return _context.abrupt(\"break\", 57);\n\n              case 23:\n                txObject = this.accountUpdate.create(txObject, this.klaytnCall);\n                return _context.abrupt(\"break\", 57);\n\n              case 25:\n                txObject = this.feeDelegatedAccountUpdate.create(txObject, this.klaytnCall);\n                return _context.abrupt(\"break\", 57);\n\n              case 27:\n                txObject = this.feeDelegatedAccountUpdateWithRatio.create(txObject, this.klaytnCall);\n                return _context.abrupt(\"break\", 57);\n\n              case 29:\n                txObject = this.smartContractDeploy.create(txObject, this.klaytnCall);\n                return _context.abrupt(\"break\", 57);\n\n              case 31:\n                txObject = this.feeDelegatedSmartContractDeploy.create(txObject, this.klaytnCall);\n                return _context.abrupt(\"break\", 57);\n\n              case 33:\n                txObject = this.feeDelegatedSmartContractDeployWithRatio.create(txObject, this.klaytnCall);\n                return _context.abrupt(\"break\", 57);\n\n              case 35:\n                txObject = this.smartContractExecution.create(txObject, this.klaytnCall);\n                return _context.abrupt(\"break\", 57);\n\n              case 37:\n                txObject = this.feeDelegatedSmartContractExecution.create(txObject, this.klaytnCall);\n                return _context.abrupt(\"break\", 57);\n\n              case 39:\n                txObject = this.feeDelegatedSmartContractExecutionWithRatio.create(txObject, this.klaytnCall);\n                return _context.abrupt(\"break\", 57);\n\n              case 41:\n                txObject = this.cancel.create(txObject, this.klaytnCall);\n                return _context.abrupt(\"break\", 57);\n\n              case 43:\n                txObject = this.feeDelegatedCancel.create(txObject, this.klaytnCall);\n                return _context.abrupt(\"break\", 57);\n\n              case 45:\n                txObject = this.feeDelegatedCancelWithRatio.create(txObject, this.klaytnCall);\n                return _context.abrupt(\"break\", 57);\n\n              case 47:\n                txObject = this.chainDataAnchoring.create(txObject, this.klaytnCall);\n                return _context.abrupt(\"break\", 57);\n\n              case 49:\n                txObject = this.feeDelegatedChainDataAnchoring.create(txObject, this.klaytnCall);\n                return _context.abrupt(\"break\", 57);\n\n              case 51:\n                txObject = this.feeDelegatedChainDataAnchoringWithRatio.create(txObject, this.klaytnCall);\n                return _context.abrupt(\"break\", 57);\n\n              case 53:\n                txObject = this.ethereumAccessList.create(txObject, this.klaytnCall);\n                return _context.abrupt(\"break\", 57);\n\n              case 55:\n                txObject = this.ethereumDynamicFee.create(txObject, this.klaytnCall);\n                return _context.abrupt(\"break\", 57);\n\n              case 57:\n                return _context.abrupt(\"return\", txObject);\n\n              case 58:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getTransactionByHash(_x) {\n        return _getTransactionByHash.apply(this, arguments);\n      }\n\n      return getTransactionByHash;\n    }()\n    /**\r\n     * Recovers the public key strings from `signatures` field.\r\n     * If you want to derive an address from public key, please use `caver.utils.publicKeyToAddress`.\r\n     *\r\n     * @example\r\n     * const publicKey = caver.transaction.recoverPublicKeys('0x{RLP-encoded transaction string}')\r\n     *\r\n     * @method recoverPublicKeys\r\n     * @param  {string} rawTx The RLP-encoded transaction string to recover public keys from `signatures`.\r\n     * @return {Array.<string>}\r\n     */\n\n  }, {\n    key: \"recoverPublicKeys\",\n    value: function recoverPublicKeys(rawTx) {\n      var tx = TransactionDecoder.decode(rawTx);\n      return tx.recoverPublicKeys();\n    }\n    /**\r\n     * Recovers the public key strings from `feePayerSignatures` field.\r\n     * If you want to derive an address from public key, please use `caver.utils.publicKeyToAddress`.\r\n     *\r\n     * @example\r\n     * const publicKey = caver.transaction.recoverFeePayerPublicKeys()\r\n     *\r\n     * @method recoverFeePayerPublicKeys\r\n     * @param  {string} rawTx The RLP-encoded transaction string to recover public keys from `feePayerSignatures`.\r\n     * @return {Array.<string>}\r\n     */\n\n  }, {\n    key: \"recoverFeePayerPublicKeys\",\n    value: function recoverFeePayerPublicKeys(rawTx) {\n      var tx = TransactionDecoder.decode(rawTx);\n      if (!(tx instanceof AbstractFeeDelegatedTransaction)) throw new Error('The `caver.transaction.recoverFeePayerPublicKeys` function can only use with fee delegation transaction. For basic transactions, use `caver.transaction.recoverPublicKeys`.');\n      return tx.recoverFeePayerPublicKeys();\n    }\n    /**\r\n     * Decodes RLP-encoded transaction string and returns a Transaction instance.\r\n     *\r\n     * @example\r\n     * const tx = caver.transaction.decode('0x{RLP-encoded transaction string}')\r\n     *\r\n     * @param {string} rlpEncoded - An RLP-encoded transaction string to decode.\r\n     * @return {module:Transaction.Transaction}\r\n     */\n\n  }, {\n    key: \"decode\",\n    value: function decode(encoded) {\n      return TransactionDecoder.decode(encoded);\n    }\n  }]);\n\n  return TransactionModule;\n}();\n\nmodule.exports = TransactionModule;","map":{"version":3,"names":["LegacyTransaction","require","EthereumAccessList","EthereumDynamicFee","ValueTransfer","FeeDelegatedValueTransfer","FeeDelegatedValueTransferWithRatio","ValueTransferMemo","FeeDelegatedValueTransferMemo","FeeDelegatedValueTransferMemoWithRatio","AccountUpdate","FeeDelegatedAccountUpdate","FeeDelegatedAccountUpdateWithRatio","SmartContractDeploy","FeeDelegatedSmartContractDeploy","FeeDelegatedSmartContractDeployWithRatio","SmartContractExecution","FeeDelegatedSmartContractExecution","FeeDelegatedSmartContractExecutionWithRatio","Cancel","FeeDelegatedCancel","FeeDelegatedCancelWithRatio","ChainDataAnchoring","FeeDelegatedChainDataAnchoring","FeeDelegatedChainDataAnchoringWithRatio","LegacyTransactionWrapper","EthereumAccessListWrapper","EthereumDynamicFeeWrapper","ValueTransferWrapper","FeeDelegatedValueTransferWrapper","FeeDelegatedValueTransferWithRatioWrapper","ValueTransferMemoWrapper","FeeDelegatedValueTransferMemoWrapper","FeeDelegatedValueTransferMemoWithRatioWrapper","AccountUpdateWrapper","FeeDelegatedAccountUpdateWrapper","FeeDelegatedAccountUpdateWithRatioWrapper","SmartContractDeployWrapper","FeeDelegatedSmartContractDeployWrapper","FeeDelegatedSmartContractDeployWithRatioWrapper","SmartContractExecutionWrapper","FeeDelegatedSmartContractExecutionWrapper","FeeDelegatedSmartContractExecutionWithRatioWrapper","CancelWrapper","FeeDelegatedCancelWrapper","FeeDelegatedCancelWithRatioWrapper","ChainDataAnchoringWrapper","FeeDelegatedChainDataAnchoringWrapper","FeeDelegatedChainDataAnchoringWithRatioWrapper","TransactionDecoder","AbstractTransaction","TX_TYPE_STRING","TX_TYPE_TAG","Account","AbstractFeeDelegatedTransaction","AccessList","AccessTuple","TransactionModule","klaytnCall","Error","legacyTransaction","ethereumAccessList","ethereumDynamicFee","valueTransfer","feeDelegatedValueTransfer","feeDelegatedValueTransferWithRatio","valueTransferMemo","feeDelegatedValueTransferMemo","feeDelegatedValueTransferMemoWithRatio","accountUpdate","feeDelegatedAccountUpdate","feeDelegatedAccountUpdateWithRatio","smartContractDeploy","feeDelegatedSmartContractDeploy","feeDelegatedSmartContractDeployWithRatio","smartContractExecution","feeDelegatedSmartContractExecution","feeDelegatedSmartContractExecutionWithRatio","cancel","feeDelegatedCancel","feeDelegatedCancelWithRatio","chainDataAnchoring","feeDelegatedChainDataAnchoring","feeDelegatedChainDataAnchoringWithRatio","type","tag","utils","accessList","accessTuple","_klaytnCall","c","transactionHash","getTransactionByHash","txObject","key","account","createFromRLPEncoding","from","create","rawTx","tx","decode","recoverPublicKeys","recoverFeePayerPublicKeys","encoded","module","exports"],"sources":["C:/Users/User/Documents/clone-starter-kit-08/node_modules/caver-js/packages/caver-transaction/src/index.js"],"sourcesContent":["/*\r\n    Copyright 2020 The caver-js Authors\r\n    This file is part of the caver-js library.\r\n\r\n    The caver-js library is free software: you can redistribute it and/or modify\r\n    it under the terms of the GNU Lesser General Public License as published by\r\n    the Free Software Foundation, either version 3 of the License, or\r\n    (at your option) any later version.\r\n\r\n    The caver-js library is distributed in the hope that it will be useful,\r\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\r\n    GNU Lesser General Public License for more details.\r\n\r\n    You should have received a copy of the GNU Lesser General Public License\r\n    along with the caver-js. If not, see <http://www.gnu.org/licenses/>.\r\n*/\r\n\r\n/* eslint-disable no-unused-vars */\r\nconst LegacyTransaction = require('./transactionTypes/legacyTransaction/legacyTransaction')\r\nconst EthereumAccessList = require('./transactionTypes/ethereumTypedTransaction/ethereumAccessList')\r\nconst EthereumDynamicFee = require('./transactionTypes/ethereumTypedTransaction/ethereumDynamicFee')\r\nconst ValueTransfer = require('./transactionTypes/valueTransfer/valueTransfer')\r\nconst FeeDelegatedValueTransfer = require('./transactionTypes/valueTransfer/feeDelegatedValueTransfer')\r\nconst FeeDelegatedValueTransferWithRatio = require('./transactionTypes/valueTransfer/feeDelegatedValueTransferWithRatio')\r\nconst ValueTransferMemo = require('./transactionTypes/valueTransferMemo/valueTransferMemo')\r\nconst FeeDelegatedValueTransferMemo = require('./transactionTypes/valueTransferMemo/feeDelegatedValueTransferMemo')\r\nconst FeeDelegatedValueTransferMemoWithRatio = require('./transactionTypes/valueTransferMemo/feeDelegatedValueTransferMemoWithRatio')\r\nconst AccountUpdate = require('./transactionTypes/accountUpdate/accountUpdate')\r\nconst FeeDelegatedAccountUpdate = require('./transactionTypes/accountUpdate/feeDelegatedAccountUpdate')\r\nconst FeeDelegatedAccountUpdateWithRatio = require('./transactionTypes/accountUpdate/feeDelegatedAccountUpdateWithRatio')\r\nconst SmartContractDeploy = require('./transactionTypes/smartContractDeploy/smartContractDeploy')\r\nconst FeeDelegatedSmartContractDeploy = require('./transactionTypes/smartContractDeploy/feeDelegatedSmartContractDeploy')\r\nconst FeeDelegatedSmartContractDeployWithRatio = require('./transactionTypes/smartContractDeploy/feeDelegatedSmartContractDeployWithRatio')\r\nconst SmartContractExecution = require('./transactionTypes/smartContractExecution/smartContractExecution')\r\nconst FeeDelegatedSmartContractExecution = require('./transactionTypes/smartContractExecution/feeDelegatedSmartContractExecution')\r\nconst FeeDelegatedSmartContractExecutionWithRatio = require('./transactionTypes/smartContractExecution/feeDelegatedSmartContractExecutionWithRatio')\r\nconst Cancel = require('./transactionTypes/cancel/cancel')\r\nconst FeeDelegatedCancel = require('./transactionTypes/cancel/feeDelegatedCancel')\r\nconst FeeDelegatedCancelWithRatio = require('./transactionTypes/cancel/feeDelegatedCancelWithRatio')\r\nconst ChainDataAnchoring = require('./transactionTypes/chainDataAnchoring/chainDataAnchoring')\r\nconst FeeDelegatedChainDataAnchoring = require('./transactionTypes/chainDataAnchoring/feeDelegatedChainDataAnchoring')\r\nconst FeeDelegatedChainDataAnchoringWithRatio = require('./transactionTypes/chainDataAnchoring/feeDelegatedChainDataAnchoringWithRatio')\r\nconst LegacyTransactionWrapper = require('./transactionTypes/wrappers/legacyTransactionWrapper')\r\nconst EthereumAccessListWrapper = require('./transactionTypes/wrappers/ethereumAccessListWrapper')\r\nconst EthereumDynamicFeeWrapper = require('./transactionTypes/wrappers/ethereumDynamicFeeWrapper')\r\nconst ValueTransferWrapper = require('./transactionTypes/wrappers/valueTransferWrapper')\r\nconst FeeDelegatedValueTransferWrapper = require('./transactionTypes/wrappers/feeDelegatedValueTransferWrapper')\r\nconst FeeDelegatedValueTransferWithRatioWrapper = require('./transactionTypes/wrappers/feeDelegatedValueTransferWithRatioWrapper')\r\nconst ValueTransferMemoWrapper = require('./transactionTypes/wrappers/valueTransferMemoWrapper')\r\nconst FeeDelegatedValueTransferMemoWrapper = require('./transactionTypes/wrappers/feeDelegatedValueTransferMemoWrapper')\r\nconst FeeDelegatedValueTransferMemoWithRatioWrapper = require('./transactionTypes/wrappers/feeDelegatedValueTransferMemoWithRatioWrapper')\r\nconst AccountUpdateWrapper = require('./transactionTypes/wrappers/accountUpdateWrapper')\r\nconst FeeDelegatedAccountUpdateWrapper = require('./transactionTypes/wrappers/feeDelegatedAccountUpdateWrapper')\r\nconst FeeDelegatedAccountUpdateWithRatioWrapper = require('./transactionTypes/wrappers/feeDelegatedAccountUpdateWithRatioWrapper')\r\nconst SmartContractDeployWrapper = require('./transactionTypes/wrappers/smartContractDeployWrapper')\r\nconst FeeDelegatedSmartContractDeployWrapper = require('./transactionTypes/wrappers/feeDelegatedSmartContractDeployWrapper')\r\nconst FeeDelegatedSmartContractDeployWithRatioWrapper = require('./transactionTypes/wrappers/feeDelegatedSmartContractDeployWithRatioWrapper')\r\nconst SmartContractExecutionWrapper = require('./transactionTypes/wrappers/smartContractExecutionWrapper')\r\nconst FeeDelegatedSmartContractExecutionWrapper = require('./transactionTypes/wrappers/feeDelegatedSmartContractExecutionWrapper')\r\nconst FeeDelegatedSmartContractExecutionWithRatioWrapper = require('./transactionTypes/wrappers/feeDelegatedSmartContractExecutionWithRatioWrapper')\r\nconst CancelWrapper = require('./transactionTypes/wrappers/cancelWrapper')\r\nconst FeeDelegatedCancelWrapper = require('./transactionTypes/wrappers/feeDelegatedCancelWrapper')\r\nconst FeeDelegatedCancelWithRatioWrapper = require('./transactionTypes/wrappers/feeDelegatedCancelWithRatioWrapper')\r\nconst ChainDataAnchoringWrapper = require('./transactionTypes/wrappers/chainDataAnchoringWrapper')\r\nconst FeeDelegatedChainDataAnchoringWrapper = require('./transactionTypes/wrappers/feeDelegatedChainDataAnchoringWrapper')\r\nconst FeeDelegatedChainDataAnchoringWithRatioWrapper = require('./transactionTypes/wrappers/feeDelegatedChainDataAnchoringWithRatioWrapper')\r\nconst TransactionDecoder = require('./transactionDecoder/transactionDecoder')\r\nconst AbstractTransaction = require('./transactionTypes/abstractTransaction')\r\nconst { TX_TYPE_STRING, TX_TYPE_TAG } = require('./transactionHelper/transactionHelper')\r\nconst Account = require('../../caver-account')\r\nconst AbstractFeeDelegatedTransaction = require('./transactionTypes/abstractFeeDelegatedTransaction')\r\nconst AccessList = require('./utils/accessList')\r\nconst AccessTuple = require('./utils/accessTuple')\r\n\r\n/**\r\n * @typedef {LegacyTransaction|ValueTransfer|FeeDelegatedValueTransfer|FeeDelegatedValueTransferWithRatio|ValueTransferMemo|FeeDelegatedValueTransferMemo|FeeDelegatedValueTransferMemoWithRatio|AccountUpdate|FeeDelegatedAccountUpdate|FeeDelegatedAccountUpdateWithRatio|SmartContractDeploy|FeeDelegatedSmartContractDeploy|FeeDelegatedSmartContractDeployWithRatio|SmartContractExecution|FeeDelegatedSmartContractExecution|FeeDelegatedSmartContractExecution|FeeDelegatedSmartContractExecutionWithRatio|Cancel|FeeDelegatedCancel|FeeDelegatedCancelWithRatio|ChainDataAnchoring|FeeDelegatedChainDataAnchoring|FeeDelegatedChainDataAnchoringWithRatio|EthereumAccessList|EthereumDynamicFee} module:Transaction.Transaction\r\n */\r\n/**\r\n * @typedef {FeeDelegatedValueTransfer|FeeDelegatedValueTransferWithRatio|FeeDelegatedValueTransferMemo|FeeDelegatedValueTransferMemoWithRatio|FeeDelegatedAccountUpdate|FeeDelegatedAccountUpdateWithRatio|FeeDelegatedSmartContractDeploy|FeeDelegatedSmartContractDeployWithRatio|FeeDelegatedSmartContractExecution|FeeDelegatedSmartContractExecution|FeeDelegatedSmartContractExecutionWithRatio|FeeDelegatedCancel|FeeDelegatedCancelWithRatio|FeeDelegatedChainDataAnchoring|FeeDelegatedChainDataAnchoringWithRatio} module:Transaction.FeeDelegatedTransaction\r\n */\r\n\r\n/**\r\n * A class that manages instances of the transaction wrapper and other functions provided by the transaction module.\r\n * @class\r\n * @hideconstructor\r\n */\r\nclass TransactionModule {\r\n    /**\r\n     * Creates a TransactionModule.\r\n     *\r\n     * @constructor\r\n     * @param {object} klaytnCall - An object includes klay rpc calls.\r\n     */\r\n    constructor(klaytnCall) {\r\n        if (!klaytnCall) throw new Error(`Invalid constructor parameter: klaytnCall is undefined.`)\r\n\r\n        this.klaytnCall = klaytnCall\r\n        this.legacyTransaction = new LegacyTransactionWrapper(this.klaytnCall)\r\n        this.ethereumAccessList = new EthereumAccessListWrapper(this.klaytnCall)\r\n        this.ethereumDynamicFee = new EthereumDynamicFeeWrapper(this.klaytnCall)\r\n        this.valueTransfer = new ValueTransferWrapper(this.klaytnCall)\r\n        this.feeDelegatedValueTransfer = new FeeDelegatedValueTransferWrapper(this.klaytnCall)\r\n        this.feeDelegatedValueTransferWithRatio = new FeeDelegatedValueTransferWithRatioWrapper(this.klaytnCall)\r\n        this.valueTransferMemo = new ValueTransferMemoWrapper(this.klaytnCall)\r\n        this.feeDelegatedValueTransferMemo = new FeeDelegatedValueTransferMemoWrapper(this.klaytnCall)\r\n        this.feeDelegatedValueTransferMemoWithRatio = new FeeDelegatedValueTransferMemoWithRatioWrapper(this.klaytnCall)\r\n        this.accountUpdate = new AccountUpdateWrapper(this.klaytnCall)\r\n        this.feeDelegatedAccountUpdate = new FeeDelegatedAccountUpdateWrapper(this.klaytnCall)\r\n        this.feeDelegatedAccountUpdateWithRatio = new FeeDelegatedAccountUpdateWithRatioWrapper(this.klaytnCall)\r\n        this.smartContractDeploy = new SmartContractDeployWrapper(this.klaytnCall)\r\n        this.feeDelegatedSmartContractDeploy = new FeeDelegatedSmartContractDeployWrapper(this.klaytnCall)\r\n        this.feeDelegatedSmartContractDeployWithRatio = new FeeDelegatedSmartContractDeployWithRatioWrapper(this.klaytnCall)\r\n        this.smartContractExecution = new SmartContractExecutionWrapper(this.klaytnCall)\r\n        this.feeDelegatedSmartContractExecution = new FeeDelegatedSmartContractExecutionWrapper(this.klaytnCall)\r\n        this.feeDelegatedSmartContractExecutionWithRatio = new FeeDelegatedSmartContractExecutionWithRatioWrapper(this.klaytnCall)\r\n        this.cancel = new CancelWrapper(this.klaytnCall)\r\n        this.feeDelegatedCancel = new FeeDelegatedCancelWrapper(this.klaytnCall)\r\n        this.feeDelegatedCancelWithRatio = new FeeDelegatedCancelWithRatioWrapper(this.klaytnCall)\r\n        this.chainDataAnchoring = new ChainDataAnchoringWrapper(this.klaytnCall)\r\n        this.feeDelegatedChainDataAnchoring = new FeeDelegatedChainDataAnchoringWrapper(this.klaytnCall)\r\n        this.feeDelegatedChainDataAnchoringWithRatio = new FeeDelegatedChainDataAnchoringWithRatioWrapper(this.klaytnCall)\r\n\r\n        this.type = TX_TYPE_STRING\r\n        this.tag = TX_TYPE_TAG\r\n\r\n        this.utils = {\r\n            accessList: AccessList,\r\n            accessTuple: AccessTuple,\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @type {object}\r\n     */\r\n    get klaytnCall() {\r\n        return this._klaytnCall\r\n    }\r\n\r\n    set klaytnCall(c) {\r\n        this._klaytnCall = c\r\n    }\r\n\r\n    /**\r\n     * Querys transaction from Klaytn and converts to a caver transaction instance.\r\n     * If it fails to receive a transaction from Klaytn, an error is thrown.\r\n     *\r\n     * @example\r\n     * const txObject = await caver.transaction.getTransactionByHash('0x{transaction hash}')\r\n     *\r\n     * @method getTransactionByHash\r\n     * @param  {string} transactionHash The transaction hash string to query from Klaytn.\r\n     * @return {Promise<AbstractTransaction>}\r\n     */\r\n    async getTransactionByHash(transactionHash) {\r\n        let txObject = await this.klaytnCall.getTransactionByHash(transactionHash)\r\n        if (txObject === null) throw new Error(`Failed to get transaction from Klaytn with '${transactionHash}'.`)\r\n\r\n        // AccountUpdate transaction received from Klaytn defines encodedAccountKey string in `key` field.\r\n        // This needs to be formatted according to the caver transaction format (`account` field).\r\n        if (txObject.key) {\r\n            const account = Account.createFromRLPEncoding(txObject.from, txObject.key)\r\n            txObject.account = account\r\n            delete txObject.key\r\n        }\r\n\r\n        switch (txObject.type) {\r\n            case 'TxTypeLegacyTransaction':\r\n                txObject = this.legacyTransaction.create(txObject, this.klaytnCall)\r\n                break\r\n            case 'TxTypeValueTransfer':\r\n                txObject = this.valueTransfer.create(txObject, this.klaytnCall)\r\n                break\r\n            case 'TxTypeFeeDelegatedValueTransfer':\r\n                txObject = this.feeDelegatedValueTransfer.create(txObject, this.klaytnCall)\r\n                break\r\n            case 'TxTypeFeeDelegatedValueTransferWithRatio':\r\n                txObject = this.feeDelegatedValueTransferWithRatio.create(txObject, this.klaytnCall)\r\n                break\r\n            case 'TxTypeValueTransferMemo':\r\n                txObject = this.valueTransferMemo.create(txObject, this.klaytnCall)\r\n                break\r\n            case 'TxTypeFeeDelegatedValueTransferMemo':\r\n                txObject = this.feeDelegatedValueTransferMemo.create(txObject, this.klaytnCall)\r\n                break\r\n            case 'TxTypeFeeDelegatedValueTransferMemoWithRatio':\r\n                txObject = this.feeDelegatedValueTransferMemoWithRatio.create(txObject, this.klaytnCall)\r\n                break\r\n            case 'TxTypeAccountUpdate':\r\n                txObject = this.accountUpdate.create(txObject, this.klaytnCall)\r\n                break\r\n            case 'TxTypeFeeDelegatedAccountUpdate':\r\n                txObject = this.feeDelegatedAccountUpdate.create(txObject, this.klaytnCall)\r\n                break\r\n            case 'TxTypeFeeDelegatedAccountUpdateWithRatio':\r\n                txObject = this.feeDelegatedAccountUpdateWithRatio.create(txObject, this.klaytnCall)\r\n                break\r\n            case 'TxTypeSmartContractDeploy':\r\n                txObject = this.smartContractDeploy.create(txObject, this.klaytnCall)\r\n                break\r\n            case 'TxTypeFeeDelegatedSmartContractDeploy':\r\n                txObject = this.feeDelegatedSmartContractDeploy.create(txObject, this.klaytnCall)\r\n                break\r\n            case 'TxTypeFeeDelegatedSmartContractDeployWithRatio':\r\n                txObject = this.feeDelegatedSmartContractDeployWithRatio.create(txObject, this.klaytnCall)\r\n                break\r\n            case 'TxTypeSmartContractExecution':\r\n                txObject = this.smartContractExecution.create(txObject, this.klaytnCall)\r\n                break\r\n            case 'TxTypeFeeDelegatedSmartContractExecution':\r\n                txObject = this.feeDelegatedSmartContractExecution.create(txObject, this.klaytnCall)\r\n                break\r\n            case 'TxTypeFeeDelegatedSmartContractExecutionWithRatio':\r\n                txObject = this.feeDelegatedSmartContractExecutionWithRatio.create(txObject, this.klaytnCall)\r\n                break\r\n            case 'TxTypeCancel':\r\n                txObject = this.cancel.create(txObject, this.klaytnCall)\r\n                break\r\n            case 'TxTypeFeeDelegatedCancel':\r\n                txObject = this.feeDelegatedCancel.create(txObject, this.klaytnCall)\r\n                break\r\n            case 'TxTypeFeeDelegatedCancelWithRatio':\r\n                txObject = this.feeDelegatedCancelWithRatio.create(txObject, this.klaytnCall)\r\n                break\r\n            case 'TxTypeChainDataAnchoring':\r\n                txObject = this.chainDataAnchoring.create(txObject, this.klaytnCall)\r\n                break\r\n            case 'TxTypeFeeDelegatedChainDataAnchoring':\r\n                txObject = this.feeDelegatedChainDataAnchoring.create(txObject, this.klaytnCall)\r\n                break\r\n            case 'TxTypeFeeDelegatedChainDataAnchoringWithRatio':\r\n                txObject = this.feeDelegatedChainDataAnchoringWithRatio.create(txObject, this.klaytnCall)\r\n                break\r\n            case 'TxTypeEthereumAccessList':\r\n                txObject = this.ethereumAccessList.create(txObject, this.klaytnCall)\r\n                break\r\n            case 'TxTypeEthereumDynamicFee':\r\n                txObject = this.ethereumDynamicFee.create(txObject, this.klaytnCall)\r\n                break\r\n        }\r\n        return txObject\r\n    }\r\n\r\n    /**\r\n     * Recovers the public key strings from `signatures` field.\r\n     * If you want to derive an address from public key, please use `caver.utils.publicKeyToAddress`.\r\n     *\r\n     * @example\r\n     * const publicKey = caver.transaction.recoverPublicKeys('0x{RLP-encoded transaction string}')\r\n     *\r\n     * @method recoverPublicKeys\r\n     * @param  {string} rawTx The RLP-encoded transaction string to recover public keys from `signatures`.\r\n     * @return {Array.<string>}\r\n     */\r\n    recoverPublicKeys(rawTx) {\r\n        const tx = TransactionDecoder.decode(rawTx)\r\n        return tx.recoverPublicKeys()\r\n    }\r\n\r\n    /**\r\n     * Recovers the public key strings from `feePayerSignatures` field.\r\n     * If you want to derive an address from public key, please use `caver.utils.publicKeyToAddress`.\r\n     *\r\n     * @example\r\n     * const publicKey = caver.transaction.recoverFeePayerPublicKeys()\r\n     *\r\n     * @method recoverFeePayerPublicKeys\r\n     * @param  {string} rawTx The RLP-encoded transaction string to recover public keys from `feePayerSignatures`.\r\n     * @return {Array.<string>}\r\n     */\r\n    recoverFeePayerPublicKeys(rawTx) {\r\n        const tx = TransactionDecoder.decode(rawTx)\r\n        if (!(tx instanceof AbstractFeeDelegatedTransaction))\r\n            throw new Error(\r\n                'The `caver.transaction.recoverFeePayerPublicKeys` function can only use with fee delegation transaction. For basic transactions, use `caver.transaction.recoverPublicKeys`.'\r\n            )\r\n        return tx.recoverFeePayerPublicKeys()\r\n    }\r\n\r\n    /**\r\n     * Decodes RLP-encoded transaction string and returns a Transaction instance.\r\n     *\r\n     * @example\r\n     * const tx = caver.transaction.decode('0x{RLP-encoded transaction string}')\r\n     *\r\n     * @param {string} rlpEncoded - An RLP-encoded transaction string to decode.\r\n     * @return {module:Transaction.Transaction}\r\n     */\r\n    decode(encoded) {\r\n        return TransactionDecoder.decode(encoded)\r\n    }\r\n}\r\n\r\nmodule.exports = TransactionModule\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}