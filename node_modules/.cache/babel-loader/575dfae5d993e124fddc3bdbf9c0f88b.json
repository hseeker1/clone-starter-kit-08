{"ast":null,"code":"/*\r\n    Copyright 2018 The caver-js Authors\r\n    This file is part of the caver-js library.\r\n\r\n    The caver-js library is free software: you can redistribute it and/or modify\r\n    it under the terms of the GNU Lesser General Public License as published by\r\n    the Free Software Foundation, either version 3 of the License, or\r\n    (at your option) any later version.\r\n\r\n    The caver-js library is distributed in the hope that it will be useful,\r\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\r\n    GNU Lesser General Public License for more details.\r\n\r\n    You should have received a copy of the GNU Lesser General Public License\r\n    along with the caver-js. If not, see <http://www.gnu.org/licenses/>.\r\n*/\nfunction randomHex(size, callback) {\n  var crypto = require('./crypto');\n\n  var isCallback = typeof callback === 'function';\n\n  if (size < 0 || size > 65536) {\n    if (isCallback) {\n      callback(new Error('Invalid size: It must be >=0 && <= 65536'));\n    } else {\n      throw new Error('Invalid size: It must be >=0 && <= 65536');\n    }\n  } // If environment is in node\n\n\n  if (typeof crypto !== 'undefined' && crypto.randomBytes) {\n    if (isCallback) {\n      crypto.randomBytes(size, function (err, result) {\n        if (!err) {\n          callback(null, \"0x\".concat(result.toString('hex')));\n        } else {\n          callback(err);\n        }\n      });\n    } else {\n      return \"0x\".concat(crypto.randomBytes(size).toString('hex'));\n    } // If environment is in browser\n\n  } else {\n    var cryptoLib;\n\n    if (typeof crypto !== 'undefined') {\n      cryptoLib = crypto;\n    } else if (typeof msCrypto !== 'undefined') {\n      /* eslint-disable no-undef */\n      cryptoLib = msCrypto;\n    }\n\n    if (cryptoLib && cryptoLib.getRandomValues) {\n      var randomBytes = cryptoLib.getRandomValues(new Uint8Array(size));\n      var returnValue = \"0x\".concat(Array.from(randomBytes).map(function (arr) {\n        return arr.toString(16);\n      }).join(''));\n\n      if (isCallback) {\n        callback(null, returnValue);\n      } else {\n        return returnValue;\n      } // crypto object is missing in browser.\n\n    } else {\n      var error = new Error('\"crypto\" object does not exist. This Browser does not support generating secure random bytes.');\n\n      if (isCallback) {\n        callback(error);\n      } else {\n        throw error;\n      }\n    }\n  }\n}\n\nmodule.exports = randomHex;","map":{"version":3,"names":["randomHex","size","callback","crypto","require","isCallback","Error","randomBytes","err","result","toString","cryptoLib","msCrypto","getRandomValues","Uint8Array","returnValue","Array","from","map","arr","join","error","module","exports"],"sources":["C:/Users/User/Documents/clone-starter-kit-08/node_modules/caver-js/packages/caver-utils/randomhex/index.js"],"sourcesContent":["/*\r\n    Copyright 2018 The caver-js Authors\r\n    This file is part of the caver-js library.\r\n\r\n    The caver-js library is free software: you can redistribute it and/or modify\r\n    it under the terms of the GNU Lesser General Public License as published by\r\n    the Free Software Foundation, either version 3 of the License, or\r\n    (at your option) any later version.\r\n\r\n    The caver-js library is distributed in the hope that it will be useful,\r\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\r\n    GNU Lesser General Public License for more details.\r\n\r\n    You should have received a copy of the GNU Lesser General Public License\r\n    along with the caver-js. If not, see <http://www.gnu.org/licenses/>.\r\n*/\r\n\r\nfunction randomHex(size, callback) {\r\n    const crypto = require('./crypto')\r\n    const isCallback = typeof callback === 'function'\r\n\r\n    if (size < 0 || size > 65536) {\r\n        if (isCallback) {\r\n            callback(new Error('Invalid size: It must be >=0 && <= 65536'))\r\n        } else {\r\n            throw new Error('Invalid size: It must be >=0 && <= 65536')\r\n        }\r\n    }\r\n\r\n    // If environment is in node\r\n    if (typeof crypto !== 'undefined' && crypto.randomBytes) {\r\n        if (isCallback) {\r\n            crypto.randomBytes(size, (err, result) => {\r\n                if (!err) {\r\n                    callback(null, `0x${result.toString('hex')}`)\r\n                } else {\r\n                    callback(err)\r\n                }\r\n            })\r\n        } else {\r\n            return `0x${crypto.randomBytes(size).toString('hex')}`\r\n        }\r\n\r\n        // If environment is in browser\r\n    } else {\r\n        let cryptoLib\r\n        if (typeof crypto !== 'undefined') {\r\n            cryptoLib = crypto\r\n        } else if (typeof msCrypto !== 'undefined') {\r\n            /* eslint-disable no-undef */\r\n            cryptoLib = msCrypto\r\n        }\r\n\r\n        if (cryptoLib && cryptoLib.getRandomValues) {\r\n            const randomBytes = cryptoLib.getRandomValues(new Uint8Array(size))\r\n            const returnValue = `0x${Array.from(randomBytes)\r\n                .map(arr => arr.toString(16))\r\n                .join('')}`\r\n\r\n            if (isCallback) {\r\n                callback(null, returnValue)\r\n            } else {\r\n                return returnValue\r\n            }\r\n\r\n            // crypto object is missing in browser.\r\n        } else {\r\n            const error = new Error('\"crypto\" object does not exist. This Browser does not support generating secure random bytes.')\r\n\r\n            if (isCallback) {\r\n                callback(error)\r\n            } else {\r\n                throw error\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nmodule.exports = randomHex\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,SAAT,CAAmBC,IAAnB,EAAyBC,QAAzB,EAAmC;EAC/B,IAAMC,MAAM,GAAGC,OAAO,CAAC,UAAD,CAAtB;;EACA,IAAMC,UAAU,GAAG,OAAOH,QAAP,KAAoB,UAAvC;;EAEA,IAAID,IAAI,GAAG,CAAP,IAAYA,IAAI,GAAG,KAAvB,EAA8B;IAC1B,IAAII,UAAJ,EAAgB;MACZH,QAAQ,CAAC,IAAII,KAAJ,CAAU,0CAAV,CAAD,CAAR;IACH,CAFD,MAEO;MACH,MAAM,IAAIA,KAAJ,CAAU,0CAAV,CAAN;IACH;EACJ,CAV8B,CAY/B;;;EACA,IAAI,OAAOH,MAAP,KAAkB,WAAlB,IAAiCA,MAAM,CAACI,WAA5C,EAAyD;IACrD,IAAIF,UAAJ,EAAgB;MACZF,MAAM,CAACI,WAAP,CAAmBN,IAAnB,EAAyB,UAACO,GAAD,EAAMC,MAAN,EAAiB;QACtC,IAAI,CAACD,GAAL,EAAU;UACNN,QAAQ,CAAC,IAAD,cAAYO,MAAM,CAACC,QAAP,CAAgB,KAAhB,CAAZ,EAAR;QACH,CAFD,MAEO;UACHR,QAAQ,CAACM,GAAD,CAAR;QACH;MACJ,CAND;IAOH,CARD,MAQO;MACH,mBAAYL,MAAM,CAACI,WAAP,CAAmBN,IAAnB,EAAyBS,QAAzB,CAAkC,KAAlC,CAAZ;IACH,CAXoD,CAarD;;EACH,CAdD,MAcO;IACH,IAAIC,SAAJ;;IACA,IAAI,OAAOR,MAAP,KAAkB,WAAtB,EAAmC;MAC/BQ,SAAS,GAAGR,MAAZ;IACH,CAFD,MAEO,IAAI,OAAOS,QAAP,KAAoB,WAAxB,EAAqC;MACxC;MACAD,SAAS,GAAGC,QAAZ;IACH;;IAED,IAAID,SAAS,IAAIA,SAAS,CAACE,eAA3B,EAA4C;MACxC,IAAMN,WAAW,GAAGI,SAAS,CAACE,eAAV,CAA0B,IAAIC,UAAJ,CAAeb,IAAf,CAA1B,CAApB;MACA,IAAMc,WAAW,eAAQC,KAAK,CAACC,IAAN,CAAWV,WAAX,EACpBW,GADoB,CAChB,UAAAC,GAAG;QAAA,OAAIA,GAAG,CAACT,QAAJ,CAAa,EAAb,CAAJ;MAAA,CADa,EAEpBU,IAFoB,CAEf,EAFe,CAAR,CAAjB;;MAIA,IAAIf,UAAJ,EAAgB;QACZH,QAAQ,CAAC,IAAD,EAAOa,WAAP,CAAR;MACH,CAFD,MAEO;QACH,OAAOA,WAAP;MACH,CAVuC,CAYxC;;IACH,CAbD,MAaO;MACH,IAAMM,KAAK,GAAG,IAAIf,KAAJ,CAAU,+FAAV,CAAd;;MAEA,IAAID,UAAJ,EAAgB;QACZH,QAAQ,CAACmB,KAAD,CAAR;MACH,CAFD,MAEO;QACH,MAAMA,KAAN;MACH;IACJ;EACJ;AACJ;;AAEDC,MAAM,CAACC,OAAP,GAAiBvB,SAAjB"},"metadata":{},"sourceType":"script"}