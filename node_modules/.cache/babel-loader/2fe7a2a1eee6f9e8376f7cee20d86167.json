{"ast":null,"code":"/*\r\n    Copyright 2022 The caver-js Authors\r\n    This file is part of the caver-js library.\r\n\r\n    The caver-js library is free software: you can redistribute it and/or modify\r\n    it under the terms of the GNU Lesser General Public License as published by\r\n    the Free Software Foundation, either version 3 of the License, or\r\n    (at your option) any later version.\r\n\r\n    The caver-js library is distributed in the hope that it will be useful,\r\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\r\n    GNU Lesser General Public License for more details.\r\n\r\n    You should have received a copy of the GNU Lesser General Public License\r\n    along with the caver-js. If not, see <http://www.gnu.org/licenses/>.\r\n*/\nconst FeeDelegatedValueTransferMemoWithRatio = require('../valueTransferMemo/feeDelegatedValueTransferMemoWithRatio');\n/**\r\n * Represents a fee delegated value transfer memo with ratio transaction wrapper.\r\n * @class\r\n * @hideconstructor\r\n */\n\n\nclass FeeDelegatedValueTransferMemoWithRatioWrapper {\n  /**\r\n   * Creates a fee delegated value transfer memo with ratio transaction wrapper.\r\n   * The wrapper plays an intermediate role for calling static functions of each transaction type in `caver.transaction`.\r\n   * @constructor\r\n   * @param {object} _klaytnCall - An object includes klay rpc calls.\r\n   */\n  constructor(klaytnCall) {\n    this.klaytnCall = klaytnCall;\n  }\n  /**\r\n   * Calls `FeeDelegatedValueTransferMemoWithRatio.create`.\r\n   *\r\n   * @param {object} obj - An object defines fields to create a tx.\r\n   * @return {string} An RLP-encoded transaction string.\r\n   */\n\n\n  create(obj) {\n    return FeeDelegatedValueTransferMemoWithRatio.create(obj, this.klaytnCall);\n  }\n  /**\r\n   * Calls `FeeDelegatedValueTransferMemoWithRatio.decode`.\r\n   *\r\n   * @param {string} encoded - RLP-encoded string.\r\n   * @return {string} FeeDelegatedValueTransferMemoWithRatio instance.\r\n   */\n\n\n  decode(encoded) {\n    return FeeDelegatedValueTransferMemoWithRatio.decode(encoded, this.klaytnCall);\n  }\n\n}\n\nmodule.exports = FeeDelegatedValueTransferMemoWithRatioWrapper;","map":{"version":3,"names":["FeeDelegatedValueTransferMemoWithRatio","require","FeeDelegatedValueTransferMemoWithRatioWrapper","constructor","klaytnCall","create","obj","decode","encoded","module","exports"],"sources":["C:/Users/User/Documents/clone-starter-kit-08/node_modules/caver-js/packages/caver-transaction/src/transactionTypes/wrappers/feeDelegatedValueTransferMemoWithRatioWrapper.js"],"sourcesContent":["/*\r\n    Copyright 2022 The caver-js Authors\r\n    This file is part of the caver-js library.\r\n\r\n    The caver-js library is free software: you can redistribute it and/or modify\r\n    it under the terms of the GNU Lesser General Public License as published by\r\n    the Free Software Foundation, either version 3 of the License, or\r\n    (at your option) any later version.\r\n\r\n    The caver-js library is distributed in the hope that it will be useful,\r\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\r\n    GNU Lesser General Public License for more details.\r\n\r\n    You should have received a copy of the GNU Lesser General Public License\r\n    along with the caver-js. If not, see <http://www.gnu.org/licenses/>.\r\n*/\r\n\r\nconst FeeDelegatedValueTransferMemoWithRatio = require('../valueTransferMemo/feeDelegatedValueTransferMemoWithRatio')\r\n\r\n/**\r\n * Represents a fee delegated value transfer memo with ratio transaction wrapper.\r\n * @class\r\n * @hideconstructor\r\n */\r\nclass FeeDelegatedValueTransferMemoWithRatioWrapper {\r\n    /**\r\n     * Creates a fee delegated value transfer memo with ratio transaction wrapper.\r\n     * The wrapper plays an intermediate role for calling static functions of each transaction type in `caver.transaction`.\r\n     * @constructor\r\n     * @param {object} _klaytnCall - An object includes klay rpc calls.\r\n     */\r\n    constructor(klaytnCall) {\r\n        this.klaytnCall = klaytnCall\r\n    }\r\n\r\n    /**\r\n     * Calls `FeeDelegatedValueTransferMemoWithRatio.create`.\r\n     *\r\n     * @param {object} obj - An object defines fields to create a tx.\r\n     * @return {string} An RLP-encoded transaction string.\r\n     */\r\n    create(obj) {\r\n        return FeeDelegatedValueTransferMemoWithRatio.create(obj, this.klaytnCall)\r\n    }\r\n\r\n    /**\r\n     * Calls `FeeDelegatedValueTransferMemoWithRatio.decode`.\r\n     *\r\n     * @param {string} encoded - RLP-encoded string.\r\n     * @return {string} FeeDelegatedValueTransferMemoWithRatio instance.\r\n     */\r\n    decode(encoded) {\r\n        return FeeDelegatedValueTransferMemoWithRatio.decode(encoded, this.klaytnCall)\r\n    }\r\n}\r\n\r\nmodule.exports = FeeDelegatedValueTransferMemoWithRatioWrapper\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAMA,sCAAsC,GAAGC,OAAO,CAAC,6DAAD,CAAtD;AAEA;AACA;AACA;AACA;AACA;;;AACA,MAAMC,6CAAN,CAAoD;EAChD;AACJ;AACA;AACA;AACA;AACA;EACIC,WAAW,CAACC,UAAD,EAAa;IACpB,KAAKA,UAAL,GAAkBA,UAAlB;EACH;EAED;AACJ;AACA;AACA;AACA;AACA;;;EACIC,MAAM,CAACC,GAAD,EAAM;IACR,OAAON,sCAAsC,CAACK,MAAvC,CAA8CC,GAA9C,EAAmD,KAAKF,UAAxD,CAAP;EACH;EAED;AACJ;AACA;AACA;AACA;AACA;;;EACIG,MAAM,CAACC,OAAD,EAAU;IACZ,OAAOR,sCAAsC,CAACO,MAAvC,CAA8CC,OAA9C,EAAuD,KAAKJ,UAA5D,CAAP;EACH;;AA7B+C;;AAgCpDK,MAAM,CAACC,OAAP,GAAiBR,6CAAjB"},"metadata":{},"sourceType":"script"}