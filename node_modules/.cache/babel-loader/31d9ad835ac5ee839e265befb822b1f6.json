{"ast":null,"code":"'use strict';\n\nvar _createForOfIteratorHelper = require(\"C:\\\\Users\\\\User\\\\Documents\\\\clone-starter-kit-08\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createForOfIteratorHelper\");\n\nvar _objectWithoutProperties = require(\"C:\\\\Users\\\\User\\\\Documents\\\\clone-starter-kit-08\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/objectWithoutProperties\");\n\nvar _asyncToGenerator = require(\"C:\\\\Users\\\\User\\\\Documents\\\\clone-starter-kit-08\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/asyncToGenerator\");\n\nvar _objectSpread = require(\"C:\\\\Users\\\\User\\\\Documents\\\\clone-starter-kit-08\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/objectSpread2\");\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\User\\\\Documents\\\\clone-starter-kit-08\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\User\\\\Documents\\\\clone-starter-kit-08\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar _awaitAsyncGenerator = require(\"C:\\\\Users\\\\User\\\\Documents\\\\clone-starter-kit-08\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/awaitAsyncGenerator\");\n\nvar _wrapAsyncGenerator = require(\"C:\\\\Users\\\\User\\\\Documents\\\\clone-starter-kit-08\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/wrapAsyncGenerator\");\n\nvar _excluded = [\"timeout\", \"signal\", \"headers\"],\n    _excluded2 = [\"timeout\", \"signal\", \"headers\"],\n    _excluded3 = [\"timeout\", \"signal\", \"headers\"];\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nfunction _asyncIterator(iterable) { var method, async, sync, retry = 2; for (\"undefined\" != typeof Symbol && (async = Symbol.asyncIterator, sync = Symbol.iterator); retry--;) { if (async && null != (method = iterable[async])) return method.call(iterable); if (sync && null != (method = iterable[sync])) return new AsyncFromSyncIterator(method.call(iterable)); async = \"@@asyncIterator\", sync = \"@@iterator\"; } throw new TypeError(\"Object is not async iterable\"); }\n\nfunction AsyncFromSyncIterator(s) { function AsyncFromSyncIteratorContinuation(r) { if (Object(r) !== r) return Promise.reject(new TypeError(r + \" is not an object.\")); var done = r.done; return Promise.resolve(r.value).then(function (value) { return { value: value, done: done }; }); } return AsyncFromSyncIterator = function AsyncFromSyncIterator(s) { this.s = s, this.n = s.next; }, AsyncFromSyncIterator.prototype = { s: null, n: null, next: function next() { return AsyncFromSyncIteratorContinuation(this.n.apply(this.s, arguments)); }, return: function _return(value) { var ret = this.s.return; return void 0 === ret ? Promise.resolve({ value: value, done: !0 }) : AsyncFromSyncIteratorContinuation(ret.apply(this.s, arguments)); }, throw: function _throw(value) { var thr = this.s.return; return void 0 === thr ? Promise.reject(value) : AsyncFromSyncIteratorContinuation(thr.apply(this.s, arguments)); } }, new AsyncFromSyncIterator(s); }\n\nvar CID = require('cids');\n\nvar Client = require('../../lib/core');\n\nvar Service = require('./service');\n\nvar toUrlSearchParams = require('../../lib/to-url-search-params');\n/**\r\n * @typedef {import('../..').HttpOptions} HttpOptions\r\n * @typedef {import('../../lib/core').ClientOptions} ClientOptions\r\n * @typedef {import('ipfs-core-types/src/basic').AbortOptions} AbortOptions\r\n * @typedef {import('ipfs-core-types/src/pin/remote').API} API\r\n * @typedef {import('ipfs-core-types/src/pin/remote').Pin} Pin\r\n * @typedef {import('ipfs-core-types/src/pin/remote').AddOptions} AddOptions\r\n * @typedef {import('ipfs-core-types/src/pin/remote').Query} Query\r\n * @typedef {import('ipfs-core-types/src/pin/remote').Status} Status\r\n *\r\n * @implements {API}\r\n */\n\n\nvar Remote = /*#__PURE__*/function () {\n  /**\r\n   * @param {ClientOptions} options\r\n   */\n  function Remote(options) {\n    _classCallCheck(this, Remote);\n\n    /** @private */\n    this.client = new Client(options);\n    /** @readonly */\n\n    this.service = new Service(options);\n  }\n  /**\r\n   * Stores an IPFS object(s) from a given path to a remote pinning service.\r\n   *\r\n   * @param {CID} cid\r\n   * @param {AddOptions & AbortOptions & HttpOptions} options\r\n   * @returns {Promise<Pin>}\r\n   */\n\n\n  _createClass(Remote, [{\n    key: \"add\",\n    value: function add(cid, options) {\n      return Remote.add(this.client, cid, options);\n    }\n    /**\r\n     * @param {Client} client\r\n     * @param {CID} cid\r\n     * @param {AddOptions & AbortOptions & HttpOptions} options\r\n     */\n\n  }, {\n    key: \"ls\",\n    value:\n    /**\r\n     * Returns a list of matching pins on the remote pinning service.\r\n     *\r\n     * @param {Query & AbortOptions & HttpOptions} query\r\n     */\n    function ls(query) {\n      return Remote.ls(this.client, query);\n    }\n    /**\r\n     *\r\n     * @param {Client} client\r\n     * @param {Query & AbortOptions & HttpOptions} options\r\n     * @returns {AsyncIterable<Pin>}\r\n     */\n\n  }, {\n    key: \"rm\",\n    value:\n    /**\r\n     * Removes a single pin object matching query allowing it to be garbage\r\n     * collected (if needed). Will error if multiple pins mtach provided\r\n     * query. To remove all matches use `rmAll` instead.\r\n     *\r\n     * @param {Query & AbortOptions & HttpOptions} query\r\n     */\n    function rm(query) {\n      return Remote.rm(this.client, _objectSpread(_objectSpread({}, query), {}, {\n        all: false\n      }));\n    }\n    /**\r\n     * Removes all pin object that match given query allowing them to be garbage\r\n     * collected if needed.\r\n     *\r\n     * @param {Query & AbortOptions & HttpOptions} query\r\n     */\n\n  }, {\n    key: \"rmAll\",\n    value: function rmAll(query) {\n      return Remote.rm(this.client, _objectSpread(_objectSpread({}, query), {}, {\n        all: true\n      }));\n    }\n    /**\r\n     *\r\n     * @param {Client} client\r\n     * @param {{all: boolean} & Query & AbortOptions & HttpOptions} options\r\n     */\n\n  }], [{\n    key: \"add\",\n    value: function () {\n      var _add = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(client, cid, _ref) {\n        var timeout, signal, headers, options, response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                timeout = _ref.timeout, signal = _ref.signal, headers = _ref.headers, options = _objectWithoutProperties(_ref, _excluded);\n                _context.next = 3;\n                return client.post('pin/remote/add', {\n                  timeout: timeout,\n                  signal: signal,\n                  headers: headers,\n                  searchParams: encodeAddParams(_objectSpread({\n                    cid: cid\n                  }, options))\n                });\n\n              case 3:\n                response = _context.sent;\n                _context.t0 = Remote;\n                _context.next = 7;\n                return response.json();\n\n              case 7:\n                _context.t1 = _context.sent;\n                return _context.abrupt(\"return\", _context.t0.decodePin.call(_context.t0, _context.t1));\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function add(_x, _x2, _x3) {\n        return _add.apply(this, arguments);\n      }\n\n      return add;\n    }()\n    /**\r\n     * @param {Object} json\r\n     * @param {string} json.Name\r\n     * @param {string} json.Cid\r\n     * @param {Status} json.Status\r\n     * @returns {Pin}\r\n     */\n\n  }, {\n    key: \"decodePin\",\n    value: function decodePin(_ref2) {\n      var name = _ref2.Name,\n          status = _ref2.Status,\n          cid = _ref2.Cid;\n      return {\n        cid: new CID(cid),\n        name: name,\n        status: status\n      };\n    }\n  }, {\n    key: \"ls\",\n    value: function ls(client, _ref3) {\n      var timeout = _ref3.timeout,\n          signal = _ref3.signal,\n          headers = _ref3.headers,\n          query = _objectWithoutProperties(_ref3, _excluded2);\n\n      return _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var response, _iteratorAbruptCompletion, _didIteratorError, _iteratorError, _iterator, _step, pin;\n\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return _awaitAsyncGenerator(client.post('pin/remote/ls', {\n                  signal: signal,\n                  timeout: timeout,\n                  headers: headers,\n                  searchParams: encodeQuery(query)\n                }));\n\n              case 2:\n                response = _context2.sent;\n                _iteratorAbruptCompletion = false;\n                _didIteratorError = false;\n                _context2.prev = 5;\n                _iterator = _asyncIterator(response.ndjson());\n\n              case 7:\n                _context2.next = 9;\n                return _awaitAsyncGenerator(_iterator.next());\n\n              case 9:\n                if (!(_iteratorAbruptCompletion = !(_step = _context2.sent).done)) {\n                  _context2.next = 16;\n                  break;\n                }\n\n                pin = _step.value;\n                _context2.next = 13;\n                return Remote.decodePin(pin);\n\n              case 13:\n                _iteratorAbruptCompletion = false;\n                _context2.next = 7;\n                break;\n\n              case 16:\n                _context2.next = 22;\n                break;\n\n              case 18:\n                _context2.prev = 18;\n                _context2.t0 = _context2[\"catch\"](5);\n                _didIteratorError = true;\n                _iteratorError = _context2.t0;\n\n              case 22:\n                _context2.prev = 22;\n                _context2.prev = 23;\n\n                if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n                  _context2.next = 27;\n                  break;\n                }\n\n                _context2.next = 27;\n                return _awaitAsyncGenerator(_iterator.return());\n\n              case 27:\n                _context2.prev = 27;\n\n                if (!_didIteratorError) {\n                  _context2.next = 30;\n                  break;\n                }\n\n                throw _iteratorError;\n\n              case 30:\n                return _context2.finish(27);\n\n              case 31:\n                return _context2.finish(22);\n\n              case 32:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[5, 18, 22, 32], [23,, 27, 31]]);\n      }))();\n    }\n  }, {\n    key: \"rm\",\n    value: function () {\n      var _rm = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(client, _ref4) {\n        var timeout, signal, headers, query;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                timeout = _ref4.timeout, signal = _ref4.signal, headers = _ref4.headers, query = _objectWithoutProperties(_ref4, _excluded3);\n                _context3.next = 3;\n                return client.post('pin/remote/rm', {\n                  timeout: timeout,\n                  signal: signal,\n                  headers: headers,\n                  searchParams: encodeQuery(query)\n                });\n\n              case 3:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function rm(_x4, _x5) {\n        return _rm.apply(this, arguments);\n      }\n\n      return rm;\n    }()\n  }]);\n\n  return Remote;\n}();\n/**\r\n * @param {any} service\r\n * @returns {string}\r\n */\n\n\nvar encodeService = function encodeService(service) {\n  if (typeof service === 'string' && service !== '') {\n    return service;\n  } else {\n    throw new TypeError('service name must be passed');\n  }\n};\n/**\r\n * @param {any} cid\r\n * @returns {string}\r\n */\n\n\nvar encodeCID = function encodeCID(cid) {\n  if (CID.isCID(cid)) {\n    return cid.toString();\n  } else {\n    throw new TypeError(\"CID instance expected instead of \".concat(cid));\n  }\n};\n/**\r\n * @param {Query & { all?: boolean }} query\r\n * @returns {URLSearchParams}\r\n */\n\n\nvar encodeQuery = function encodeQuery(_ref5) {\n  var service = _ref5.service,\n      cid = _ref5.cid,\n      name = _ref5.name,\n      status = _ref5.status,\n      all = _ref5.all;\n  var query = toUrlSearchParams({\n    service: encodeService(service),\n    name: name,\n    force: all ? true : undefined\n  });\n\n  if (cid) {\n    var _iterator2 = _createForOfIteratorHelper(cid),\n        _step2;\n\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var value = _step2.value;\n        query.append('cid', encodeCID(value));\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n  }\n\n  if (status) {\n    var _iterator3 = _createForOfIteratorHelper(status),\n        _step3;\n\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var _value = _step3.value;\n        query.append('status', _value);\n      }\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n  }\n\n  return query;\n};\n/**\r\n * @param {AddOptions & {cid:CID}} options\r\n * @returns {URLSearchParams}\r\n */\n\n\nvar encodeAddParams = function encodeAddParams(_ref6) {\n  var cid = _ref6.cid,\n      service = _ref6.service,\n      background = _ref6.background,\n      name = _ref6.name,\n      origins = _ref6.origins;\n  var params = toUrlSearchParams({\n    arg: encodeCID(cid),\n    service: encodeService(service),\n    name: name,\n    background: background ? true : undefined\n  });\n\n  if (origins) {\n    var _iterator4 = _createForOfIteratorHelper(origins),\n        _step4;\n\n    try {\n      for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n        var origin = _step4.value;\n        params.append('origin', origin.toString());\n      }\n    } catch (err) {\n      _iterator4.e(err);\n    } finally {\n      _iterator4.f();\n    }\n  }\n\n  return params;\n};\n\nmodule.exports = Remote;","map":{"version":3,"names":["CID","require","Client","Service","toUrlSearchParams","Remote","options","client","service","cid","add","query","ls","rm","all","timeout","signal","headers","post","searchParams","encodeAddParams","response","json","decodePin","name","Name","status","Status","Cid","encodeQuery","ndjson","pin","encodeService","TypeError","encodeCID","isCID","toString","force","undefined","value","append","background","origins","params","arg","origin","module","exports"],"sources":["C:/Users/User/Documents/clone-starter-kit-08/node_modules/ipfs-http-client/src/pin/remote/index.js"],"sourcesContent":["'use strict'\r\n\r\nconst CID = require('cids')\r\nconst Client = require('../../lib/core')\r\nconst Service = require('./service')\r\nconst toUrlSearchParams = require('../../lib/to-url-search-params')\r\n\r\n/**\r\n * @typedef {import('../..').HttpOptions} HttpOptions\r\n * @typedef {import('../../lib/core').ClientOptions} ClientOptions\r\n * @typedef {import('ipfs-core-types/src/basic').AbortOptions} AbortOptions\r\n * @typedef {import('ipfs-core-types/src/pin/remote').API} API\r\n * @typedef {import('ipfs-core-types/src/pin/remote').Pin} Pin\r\n * @typedef {import('ipfs-core-types/src/pin/remote').AddOptions} AddOptions\r\n * @typedef {import('ipfs-core-types/src/pin/remote').Query} Query\r\n * @typedef {import('ipfs-core-types/src/pin/remote').Status} Status\r\n *\r\n * @implements {API}\r\n */\r\nclass Remote {\r\n  /**\r\n   * @param {ClientOptions} options\r\n   */\r\n  constructor (options) {\r\n    /** @private */\r\n    this.client = new Client(options)\r\n    /** @readonly */\r\n    this.service = new Service(options)\r\n  }\r\n\r\n  /**\r\n   * Stores an IPFS object(s) from a given path to a remote pinning service.\r\n   *\r\n   * @param {CID} cid\r\n   * @param {AddOptions & AbortOptions & HttpOptions} options\r\n   * @returns {Promise<Pin>}\r\n   */\r\n  add (cid, options) {\r\n    return Remote.add(this.client, cid, options)\r\n  }\r\n\r\n  /**\r\n   * @param {Client} client\r\n   * @param {CID} cid\r\n   * @param {AddOptions & AbortOptions & HttpOptions} options\r\n   */\r\n  static async add (client, cid, { timeout, signal, headers, ...options }) {\r\n    const response = await client.post('pin/remote/add', {\r\n      timeout,\r\n      signal,\r\n      headers,\r\n      searchParams: encodeAddParams({ cid, ...options })\r\n    })\r\n\r\n    return Remote.decodePin(await response.json())\r\n  }\r\n\r\n  /**\r\n   * @param {Object} json\r\n   * @param {string} json.Name\r\n   * @param {string} json.Cid\r\n   * @param {Status} json.Status\r\n   * @returns {Pin}\r\n   */\r\n  static decodePin ({ Name: name, Status: status, Cid: cid }) {\r\n    return {\r\n      cid: new CID(cid),\r\n      name,\r\n      status\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns a list of matching pins on the remote pinning service.\r\n   *\r\n   * @param {Query & AbortOptions & HttpOptions} query\r\n   */\r\n  ls (query) {\r\n    return Remote.ls(this.client, query)\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Client} client\r\n   * @param {Query & AbortOptions & HttpOptions} options\r\n   * @returns {AsyncIterable<Pin>}\r\n   */\r\n  static async * ls (client, { timeout, signal, headers, ...query }) {\r\n    const response = await client.post('pin/remote/ls', {\r\n      signal,\r\n      timeout,\r\n      headers,\r\n      searchParams: encodeQuery(query)\r\n    })\r\n\r\n    for await (const pin of response.ndjson()) {\r\n      yield Remote.decodePin(pin)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Removes a single pin object matching query allowing it to be garbage\r\n   * collected (if needed). Will error if multiple pins mtach provided\r\n   * query. To remove all matches use `rmAll` instead.\r\n   *\r\n   * @param {Query & AbortOptions & HttpOptions} query\r\n   */\r\n  rm (query) {\r\n    return Remote.rm(this.client, { ...query, all: false })\r\n  }\r\n\r\n  /**\r\n   * Removes all pin object that match given query allowing them to be garbage\r\n   * collected if needed.\r\n   *\r\n   * @param {Query & AbortOptions & HttpOptions} query\r\n   */\r\n  rmAll (query) {\r\n    return Remote.rm(this.client, { ...query, all: true })\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Client} client\r\n   * @param {{all: boolean} & Query & AbortOptions & HttpOptions} options\r\n   */\r\n  static async rm (client, { timeout, signal, headers, ...query }) {\r\n    await client.post('pin/remote/rm', {\r\n      timeout,\r\n      signal,\r\n      headers,\r\n      searchParams: encodeQuery(query)\r\n    })\r\n  }\r\n}\r\n\r\n/**\r\n * @param {any} service\r\n * @returns {string}\r\n */\r\nconst encodeService = (service) => {\r\n  if (typeof service === 'string' && service !== '') {\r\n    return service\r\n  } else {\r\n    throw new TypeError('service name must be passed')\r\n  }\r\n}\r\n\r\n/**\r\n * @param {any} cid\r\n * @returns {string}\r\n */\r\nconst encodeCID = (cid) => {\r\n  if (CID.isCID(cid)) {\r\n    return cid.toString()\r\n  } else {\r\n    throw new TypeError(`CID instance expected instead of ${cid}`)\r\n  }\r\n}\r\n\r\n/**\r\n * @param {Query & { all?: boolean }} query\r\n * @returns {URLSearchParams}\r\n */\r\nconst encodeQuery = ({ service, cid, name, status, all }) => {\r\n  const query = toUrlSearchParams({\r\n    service: encodeService(service),\r\n    name,\r\n    force: all ? true : undefined\r\n  })\r\n\r\n  if (cid) {\r\n    for (const value of cid) {\r\n      query.append('cid', encodeCID(value))\r\n    }\r\n  }\r\n\r\n  if (status) {\r\n    for (const value of status) {\r\n      query.append('status', value)\r\n    }\r\n  }\r\n\r\n  return query\r\n}\r\n\r\n/**\r\n * @param {AddOptions & {cid:CID}} options\r\n * @returns {URLSearchParams}\r\n */\r\nconst encodeAddParams = ({ cid, service, background, name, origins }) => {\r\n  const params = toUrlSearchParams({\r\n    arg: encodeCID(cid),\r\n    service: encodeService(service),\r\n    name,\r\n    background: background ? true : undefined\r\n  })\r\n\r\n  if (origins) {\r\n    for (const origin of origins) {\r\n      params.append('origin', origin.toString())\r\n    }\r\n  }\r\n\r\n  return params\r\n}\r\n\r\nmodule.exports = Remote\r\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;+CACA,oJ;;;;;;AACA,IAAMA,GAAG,GAAGC,OAAO,CAAC,MAAD,CAAnB;;AACA,IAAMC,MAAM,GAAGD,OAAO,CAAC,gBAAD,CAAtB;;AACA,IAAME,OAAO,GAAGF,OAAO,CAAC,WAAD,CAAvB;;AACA,IAAMG,iBAAiB,GAAGH,OAAO,CAAC,gCAAD,CAAjC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;IACMI,M;EACJ;AACF;AACA;EACE,gBAAaC,OAAb,EAAsB;IAAA;;IACpB;IACA,KAAKC,MAAL,GAAc,IAAIL,MAAJ,CAAWI,OAAX,CAAd;IACA;;IACA,KAAKE,OAAL,GAAe,IAAIL,OAAJ,CAAYG,OAAZ,CAAf;EACD;EAED;AACF;AACA;AACA;AACA;AACA;AACA;;;;;WACE,aAAKG,GAAL,EAAUH,OAAV,EAAmB;MACjB,OAAOD,MAAM,CAACK,GAAP,CAAW,KAAKH,MAAhB,EAAwBE,GAAxB,EAA6BH,OAA7B,CAAP;IACD;IAED;AACF;AACA;AACA;AACA;;;;;IA2BE;AACF;AACA;AACA;AACA;IACE,YAAIK,KAAJ,EAAW;MACT,OAAON,MAAM,CAACO,EAAP,CAAU,KAAKL,MAAf,EAAuBI,KAAvB,CAAP;IACD;IAED;AACF;AACA;AACA;AACA;AACA;;;;;IAcE;AACF;AACA;AACA;AACA;AACA;AACA;IACE,YAAIA,KAAJ,EAAW;MACT,OAAON,MAAM,CAACQ,EAAP,CAAU,KAAKN,MAAf,kCAA4BI,KAA5B;QAAmCG,GAAG,EAAE;MAAxC,GAAP;IACD;IAED;AACF;AACA;AACA;AACA;AACA;;;;WACE,eAAOH,KAAP,EAAc;MACZ,OAAON,MAAM,CAACQ,EAAP,CAAU,KAAKN,MAAf,kCAA4BI,KAA5B;QAAmCG,GAAG,EAAE;MAAxC,GAAP;IACD;IAED;AACF;AACA;AACA;AACA;;;;;4EA/EE,iBAAkBP,MAAlB,EAA0BE,GAA1B;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAiCM,OAAjC,QAAiCA,OAAjC,EAA0CC,MAA1C,QAA0CA,MAA1C,EAAkDC,OAAlD,QAAkDA,OAAlD,EAA8DX,OAA9D;gBAAA;gBAAA,OACyBC,MAAM,CAACW,IAAP,CAAY,gBAAZ,EAA8B;kBACnDH,OAAO,EAAPA,OADmD;kBAEnDC,MAAM,EAANA,MAFmD;kBAGnDC,OAAO,EAAPA,OAHmD;kBAInDE,YAAY,EAAEC,eAAe;oBAAGX,GAAG,EAAHA;kBAAH,GAAWH,OAAX;gBAJsB,CAA9B,CADzB;;cAAA;gBACQe,QADR;gBAAA,cAQShB,MART;gBAAA;gBAAA,OAQgCgB,QAAQ,CAACC,IAAT,EARhC;;cAAA;gBAAA;gBAAA,6CAQgBC,SARhB;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;IAWA;AACF;AACA;AACA;AACA;AACA;AACA;;;;WACE,0BAA4D;MAAA,IAAlCC,IAAkC,SAAxCC,IAAwC;MAAA,IAApBC,MAAoB,SAA5BC,MAA4B;MAAA,IAAPlB,GAAO,SAAZmB,GAAY;MAC1D,OAAO;QACLnB,GAAG,EAAE,IAAIT,GAAJ,CAAQS,GAAR,CADA;QAELe,IAAI,EAAJA,IAFK;QAGLE,MAAM,EAANA;MAHK,CAAP;IAKD;;;WAiBD,YAAmBnB,MAAnB,SAAmE;MAAA,IAAtCQ,OAAsC,SAAtCA,OAAsC;MAAA,IAA7BC,MAA6B,SAA7BA,MAA6B;MAAA,IAArBC,OAAqB,SAArBA,OAAqB;MAAA,IAATN,KAAS;;MAAA;QAAA;;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,4BAC1CJ,MAAM,CAACW,IAAP,CAAY,eAAZ,EAA6B;kBAClDF,MAAM,EAANA,MADkD;kBAElDD,OAAO,EAAPA,OAFkD;kBAGlDE,OAAO,EAAPA,OAHkD;kBAIlDE,YAAY,EAAEU,WAAW,CAAClB,KAAD;gBAJyB,CAA7B,CAD0C;;cAAA;gBAC3DU,QAD2D;gBAAA;gBAAA;gBAAA;gBAAA,2BAQzCA,QAAQ,CAACS,MAAT,EARyC;;cAAA;gBAAA;gBAAA;;cAAA;gBAAA;kBAAA;kBAAA;gBAAA;;gBAQhDC,GARgD;gBAAA;gBAS/D,OAAM1B,MAAM,CAACkB,SAAP,CAAiBQ,GAAjB,CAAN;;cAT+D;gBAAA;gBAAA;gBAAA;;cAAA;gBAAA;gBAAA;;cAAA;gBAAA;gBAAA;gBAAA;gBAAA;;cAAA;gBAAA;gBAAA;;gBAAA;kBAAA;kBAAA;gBAAA;;gBAAA;gBAAA;;cAAA;gBAAA;;gBAAA;kBAAA;kBAAA;gBAAA;;gBAAA;;cAAA;gBAAA;;cAAA;gBAAA;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAWlE;;;;2EA4BD,kBAAiBxB,MAAjB;QAAA;QAAA;UAAA;YAAA;cAAA;gBAA2BQ,OAA3B,SAA2BA,OAA3B,EAAoCC,MAApC,SAAoCA,MAApC,EAA4CC,OAA5C,SAA4CA,OAA5C,EAAwDN,KAAxD;gBAAA;gBAAA,OACQJ,MAAM,CAACW,IAAP,CAAY,eAAZ,EAA6B;kBACjCH,OAAO,EAAPA,OADiC;kBAEjCC,MAAM,EAANA,MAFiC;kBAGjCC,OAAO,EAAPA,OAHiC;kBAIjCE,YAAY,EAAEU,WAAW,CAAClB,KAAD;gBAJQ,CAA7B,CADR;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;;;;;AAUF;AACA;AACA;AACA;;;AACA,IAAMqB,aAAa,GAAG,SAAhBA,aAAgB,CAACxB,OAAD,EAAa;EACjC,IAAI,OAAOA,OAAP,KAAmB,QAAnB,IAA+BA,OAAO,KAAK,EAA/C,EAAmD;IACjD,OAAOA,OAAP;EACD,CAFD,MAEO;IACL,MAAM,IAAIyB,SAAJ,CAAc,6BAAd,CAAN;EACD;AACF,CAND;AAQA;AACA;AACA;AACA;;;AACA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACzB,GAAD,EAAS;EACzB,IAAIT,GAAG,CAACmC,KAAJ,CAAU1B,GAAV,CAAJ,EAAoB;IAClB,OAAOA,GAAG,CAAC2B,QAAJ,EAAP;EACD,CAFD,MAEO;IACL,MAAM,IAAIH,SAAJ,4CAAkDxB,GAAlD,EAAN;EACD;AACF,CAND;AAQA;AACA;AACA;AACA;;;AACA,IAAMoB,WAAW,GAAG,SAAdA,WAAc,QAAyC;EAAA,IAAtCrB,OAAsC,SAAtCA,OAAsC;EAAA,IAA7BC,GAA6B,SAA7BA,GAA6B;EAAA,IAAxBe,IAAwB,SAAxBA,IAAwB;EAAA,IAAlBE,MAAkB,SAAlBA,MAAkB;EAAA,IAAVZ,GAAU,SAAVA,GAAU;EAC3D,IAAMH,KAAK,GAAGP,iBAAiB,CAAC;IAC9BI,OAAO,EAAEwB,aAAa,CAACxB,OAAD,CADQ;IAE9BgB,IAAI,EAAJA,IAF8B;IAG9Ba,KAAK,EAAEvB,GAAG,GAAG,IAAH,GAAUwB;EAHU,CAAD,CAA/B;;EAMA,IAAI7B,GAAJ,EAAS;IAAA,4CACaA,GADb;IAAA;;IAAA;MACP,uDAAyB;QAAA,IAAd8B,KAAc;QACvB5B,KAAK,CAAC6B,MAAN,CAAa,KAAb,EAAoBN,SAAS,CAACK,KAAD,CAA7B;MACD;IAHM;MAAA;IAAA;MAAA;IAAA;EAIR;;EAED,IAAIb,MAAJ,EAAY;IAAA,4CACUA,MADV;IAAA;;IAAA;MACV,uDAA4B;QAAA,IAAjBa,MAAiB;QAC1B5B,KAAK,CAAC6B,MAAN,CAAa,QAAb,EAAuBD,MAAvB;MACD;IAHS;MAAA;IAAA;MAAA;IAAA;EAIX;;EAED,OAAO5B,KAAP;AACD,CApBD;AAsBA;AACA;AACA;AACA;;;AACA,IAAMS,eAAe,GAAG,SAAlBA,eAAkB,QAAiD;EAAA,IAA9CX,GAA8C,SAA9CA,GAA8C;EAAA,IAAzCD,OAAyC,SAAzCA,OAAyC;EAAA,IAAhCiC,UAAgC,SAAhCA,UAAgC;EAAA,IAApBjB,IAAoB,SAApBA,IAAoB;EAAA,IAAdkB,OAAc,SAAdA,OAAc;EACvE,IAAMC,MAAM,GAAGvC,iBAAiB,CAAC;IAC/BwC,GAAG,EAAEV,SAAS,CAACzB,GAAD,CADiB;IAE/BD,OAAO,EAAEwB,aAAa,CAACxB,OAAD,CAFS;IAG/BgB,IAAI,EAAJA,IAH+B;IAI/BiB,UAAU,EAAEA,UAAU,GAAG,IAAH,GAAUH;EAJD,CAAD,CAAhC;;EAOA,IAAII,OAAJ,EAAa;IAAA,4CACUA,OADV;IAAA;;IAAA;MACX,uDAA8B;QAAA,IAAnBG,MAAmB;QAC5BF,MAAM,CAACH,MAAP,CAAc,QAAd,EAAwBK,MAAM,CAACT,QAAP,EAAxB;MACD;IAHU;MAAA;IAAA;MAAA;IAAA;EAIZ;;EAED,OAAOO,MAAP;AACD,CAfD;;AAiBAG,MAAM,CAACC,OAAP,GAAiB1C,MAAjB"},"metadata":{},"sourceType":"script"}