{"ast":null,"code":"'use strict';\n\nconst normaliseContent = require('./normalise-content.browser');\n\nconst normaliseInput = require('./normalise-input');\n/**\r\n * Transforms any of the `ipfs.add` input types into\r\n *\r\n * ```\r\n * AsyncIterable<{ path, mode, mtime, content: Blob }>\r\n * ```\r\n *\r\n * See https://github.com/ipfs/js-ipfs/blob/master/docs/core-api/FILES.md#ipfsadddata-options\r\n *\r\n * @param {import('ipfs-core-types/src/files').ImportSource} input\r\n * @returns {AsyncIterable<import('ipfs-core-types/src/files').Entry<Blob>>}\r\n */\n\n\nmodule.exports = input => normaliseInput(input, normaliseContent);","map":{"version":3,"names":["normaliseContent","require","normaliseInput","module","exports","input"],"sources":["C:/Users/User/Documents/clone-starter-kit-08/node_modules/ipfs-core-utils/src/files/normalise-input/index.browser.js"],"sourcesContent":["'use strict'\r\n\r\nconst normaliseContent = require('./normalise-content.browser')\r\nconst normaliseInput = require('./normalise-input')\r\n\r\n/**\r\n * Transforms any of the `ipfs.add` input types into\r\n *\r\n * ```\r\n * AsyncIterable<{ path, mode, mtime, content: Blob }>\r\n * ```\r\n *\r\n * See https://github.com/ipfs/js-ipfs/blob/master/docs/core-api/FILES.md#ipfsadddata-options\r\n *\r\n * @param {import('ipfs-core-types/src/files').ImportSource} input\r\n * @returns {AsyncIterable<import('ipfs-core-types/src/files').Entry<Blob>>}\r\n */\r\nmodule.exports = (input) => normaliseInput(input, normaliseContent)\r\n"],"mappings":"AAAA;;AAEA,MAAMA,gBAAgB,GAAGC,OAAO,CAAC,6BAAD,CAAhC;;AACA,MAAMC,cAAc,GAAGD,OAAO,CAAC,mBAAD,CAA9B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAE,MAAM,CAACC,OAAP,GAAkBC,KAAD,IAAWH,cAAc,CAACG,KAAD,EAAQL,gBAAR,CAA1C"},"metadata":{},"sourceType":"script"}