{"ast":null,"code":"'use strict';\n\nvar _objectSpread = require(\"C:\\\\Users\\\\User\\\\Documents\\\\clone-starter-kit-08\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/objectSpread2\");\n\nvar _asyncToGenerator = require(\"C:\\\\Users\\\\User\\\\Documents\\\\clone-starter-kit-08\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\User\\\\Documents\\\\clone-starter-kit-08\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\User\\\\Documents\\\\clone-starter-kit-08\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nvar Client = require('../../lib/core');\n\nvar toUrlSearchParams = require('../../lib/to-url-search-params');\n/**\r\n * @typedef {import('../../lib/core').ClientOptions} ClientOptions\r\n * @typedef {import('../..').HttpOptions} HttpOptions\r\n * @typedef {import('ipfs-core-types/src/basic').AbortOptions} AbortOptions\r\n * @typedef {import('ipfs-core-types/src/pin/remote/service').API} API\r\n * @typedef {import('ipfs-core-types/src/pin/remote/service').Credentials} Credentials\r\n * @typedef {import('ipfs-core-types/src/pin/remote/service').RemotePinService} RemotePinService\r\n * @typedef {import('ipfs-core-types/src/pin/remote/service').RemotePinServiceWithStat} RemotePinServiceWithStat\r\n * @implements {API}\r\n */\n\n\nvar Service = /*#__PURE__*/function () {\n  /**\r\n   * @param {ClientOptions} options\r\n   */\n  function Service(options) {\n    _classCallCheck(this, Service);\n\n    /** @private */\n    this.client = new Client(options);\n  }\n  /**\r\n   * @param {Client} client\r\n   * @param {string} name\r\n   * @param {Credentials & AbortOptions & HttpOptions} options\r\n   */\n\n\n  _createClass(Service, [{\n    key: \"add\",\n    value:\n    /**\r\n     * Registers remote pinning service with a given name. Errors if service\r\n     * with the given name is already registered.\r\n     *\r\n     * @param {string} name\r\n     * @param {Credentials & AbortOptions & HttpOptions} options\r\n     */\n    function add(name, options) {\n      return Service.add(this.client, name, options);\n    }\n    /**\r\n     * Unregisteres remote pinning service with a given name. If service with such\r\n     * name isn't registerede this is a noop.\r\n     *\r\n     * @param {string} name\r\n     * @param {AbortOptions & HttpOptions} [options]\r\n     */\n\n  }, {\n    key: \"rm\",\n    value: function rm(name, options) {\n      return Service.rm(this.client, name, options);\n    }\n    /**\r\n     * List registered remote pinning services.\r\n     *\r\n     * @param {{ stat?: true } & AbortOptions & HttpOptions} [options]\r\n     */\n\n  }, {\n    key: \"ls\",\n    value: function ls(options) {\n      return Service.ls(this.client, options);\n    }\n  }], [{\n    key: \"add\",\n    value: function () {\n      var _add = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(client, name, options) {\n        var endpoint, key, headers, timeout, signal;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                endpoint = options.endpoint, key = options.key, headers = options.headers, timeout = options.timeout, signal = options.signal;\n                _context.next = 3;\n                return client.post('pin/remote/service/add', {\n                  timeout: timeout,\n                  signal: signal,\n                  searchParams: toUrlSearchParams({\n                    arg: [name, Service.encodeEndpoint(endpoint), key]\n                  }),\n                  headers: headers\n                });\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function add(_x, _x2, _x3) {\n        return _add.apply(this, arguments);\n      }\n\n      return add;\n    }()\n    /**\r\n     * @param {URL} url\r\n     */\n\n  }, {\n    key: \"encodeEndpoint\",\n    value: function encodeEndpoint(url) {\n      var href = String(url);\n\n      if (href === 'undefined') {\n        throw Error('endpoint is required');\n      } // Workaround trailing `/` issue in go-ipfs\n      // @see https://github.com/ipfs/go-ipfs/issues/7826\n\n\n      return href[href.length - 1] === '/' ? href.slice(0, -1) : href;\n    }\n    /**\r\n     * @param {Client} client\r\n     * @param {string} name\r\n     * @param {AbortOptions & HttpOptions} [options]\r\n     */\n\n  }, {\n    key: \"rm\",\n    value: function () {\n      var _rm = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(client, name) {\n        var _ref,\n            timeout,\n            signal,\n            headers,\n            _args2 = arguments;\n\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _ref = _args2.length > 2 && _args2[2] !== undefined ? _args2[2] : {}, timeout = _ref.timeout, signal = _ref.signal, headers = _ref.headers;\n                _context2.next = 3;\n                return client.post('pin/remote/service/rm', {\n                  timeout: timeout,\n                  signal: signal,\n                  headers: headers,\n                  searchParams: toUrlSearchParams({\n                    arg: name\n                  })\n                });\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function rm(_x4, _x5) {\n        return _rm.apply(this, arguments);\n      }\n\n      return rm;\n    }()\n    /**\r\n     * @template {true} Stat\r\n     * @param {Client} client\r\n     * @param {{ stat?: Stat } & AbortOptions & HttpOptions} [options]\r\n     */\n\n  }, {\n    key: \"ls\",\n    value: function () {\n      var _ls = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(client) {\n        var _ref2,\n            stat,\n            timeout,\n            signal,\n            headers,\n            response,\n            _yield$response$json,\n            RemoteServices,\n            _args3 = arguments;\n\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _ref2 = _args3.length > 1 && _args3[1] !== undefined ? _args3[1] : {}, stat = _ref2.stat, timeout = _ref2.timeout, signal = _ref2.signal, headers = _ref2.headers;\n                _context3.next = 3;\n                return client.post('pin/remote/service/ls', {\n                  searchParams: stat === true ? toUrlSearchParams({\n                    stat: stat\n                  }) : undefined,\n                  timeout: timeout,\n                  signal: signal,\n                  headers: headers\n                });\n\n              case 3:\n                response = _context3.sent;\n                _context3.next = 6;\n                return response.json();\n\n              case 6:\n                _yield$response$json = _context3.sent;\n                RemoteServices = _yield$response$json.RemoteServices;\n                return _context3.abrupt(\"return\", RemoteServices.map(Service.decodeRemoteService));\n\n              case 9:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function ls(_x6) {\n        return _ls.apply(this, arguments);\n      }\n\n      return ls;\n    }()\n    /**\r\n     * @param {Object} json\r\n     * @returns {RemotePinServiceWithStat}\r\n     */\n\n  }, {\n    key: \"decodeRemoteService\",\n    value: function decodeRemoteService(json) {\n      return _objectSpread({\n        service: json.Service,\n        endpoint: new URL(json.ApiEndpoint)\n      }, json.Stat && {\n        stat: Service.decodeStat(json.Stat)\n      });\n    }\n    /**\r\n     * @param {Object} json\r\n     * @returns {import('ipfs-core-types/src/pin/remote/service').Stat}\r\n     */\n\n  }, {\n    key: \"decodeStat\",\n    value: function decodeStat(json) {\n      switch (json.Status) {\n        case 'valid':\n          {\n            var _json$PinCount = json.PinCount,\n                Pinning = _json$PinCount.Pinning,\n                Pinned = _json$PinCount.Pinned,\n                Queued = _json$PinCount.Queued,\n                Failed = _json$PinCount.Failed;\n            return {\n              status: 'valid',\n              pinCount: {\n                queued: Queued,\n                pinning: Pinning,\n                pinned: Pinned,\n                failed: Failed\n              }\n            };\n          }\n\n        case 'invalid':\n          {\n            return {\n              status: 'invalid'\n            };\n          }\n\n        default:\n          {\n            return {\n              status: json.Status\n            };\n          }\n      }\n    }\n  }]);\n\n  return Service;\n}();\n\nmodule.exports = Service;","map":{"version":3,"names":["Client","require","toUrlSearchParams","Service","options","client","name","add","rm","ls","endpoint","key","headers","timeout","signal","post","searchParams","arg","encodeEndpoint","url","href","String","Error","length","slice","stat","undefined","response","json","RemoteServices","map","decodeRemoteService","service","URL","ApiEndpoint","Stat","decodeStat","Status","PinCount","Pinning","Pinned","Queued","Failed","status","pinCount","queued","pinning","pinned","failed","module","exports"],"sources":["C:/Users/User/Documents/clone-starter-kit-08/node_modules/ipfs-http-client/src/pin/remote/service.js"],"sourcesContent":["'use strict'\r\n\r\nconst Client = require('../../lib/core')\r\nconst toUrlSearchParams = require('../../lib/to-url-search-params')\r\n\r\n/**\r\n * @typedef {import('../../lib/core').ClientOptions} ClientOptions\r\n * @typedef {import('../..').HttpOptions} HttpOptions\r\n * @typedef {import('ipfs-core-types/src/basic').AbortOptions} AbortOptions\r\n * @typedef {import('ipfs-core-types/src/pin/remote/service').API} API\r\n * @typedef {import('ipfs-core-types/src/pin/remote/service').Credentials} Credentials\r\n * @typedef {import('ipfs-core-types/src/pin/remote/service').RemotePinService} RemotePinService\r\n * @typedef {import('ipfs-core-types/src/pin/remote/service').RemotePinServiceWithStat} RemotePinServiceWithStat\r\n * @implements {API}\r\n */\r\nclass Service {\r\n  /**\r\n   * @param {ClientOptions} options\r\n   */\r\n  constructor (options) {\r\n    /** @private */\r\n    this.client = new Client(options)\r\n  }\r\n\r\n  /**\r\n   * @param {Client} client\r\n   * @param {string} name\r\n   * @param {Credentials & AbortOptions & HttpOptions} options\r\n   */\r\n  static async add (client, name, options) {\r\n    const { endpoint, key, headers, timeout, signal } = options\r\n    await client.post('pin/remote/service/add', {\r\n      timeout,\r\n      signal,\r\n      searchParams: toUrlSearchParams({\r\n        arg: [name, Service.encodeEndpoint(endpoint), key]\r\n      }),\r\n      headers\r\n    })\r\n  }\r\n\r\n  /**\r\n   * @param {URL} url\r\n   */\r\n  static encodeEndpoint (url) {\r\n    const href = String(url)\r\n    if (href === 'undefined') {\r\n      throw Error('endpoint is required')\r\n    }\r\n    // Workaround trailing `/` issue in go-ipfs\r\n    // @see https://github.com/ipfs/go-ipfs/issues/7826\r\n    return href[href.length - 1] === '/' ? href.slice(0, -1) : href\r\n  }\r\n\r\n  /**\r\n   * @param {Client} client\r\n   * @param {string} name\r\n   * @param {AbortOptions & HttpOptions} [options]\r\n   */\r\n  static async rm (client, name, { timeout, signal, headers } = {}) {\r\n    await client.post('pin/remote/service/rm', {\r\n      timeout,\r\n      signal,\r\n      headers,\r\n      searchParams: toUrlSearchParams({\r\n        arg: name\r\n      })\r\n    })\r\n  }\r\n\r\n  /**\r\n   * @template {true} Stat\r\n   * @param {Client} client\r\n   * @param {{ stat?: Stat } & AbortOptions & HttpOptions} [options]\r\n   */\r\n  static async ls (client, { stat, timeout, signal, headers } = {}) {\r\n    const response = await client.post('pin/remote/service/ls', {\r\n      searchParams: stat === true ? toUrlSearchParams({ stat }) : undefined,\r\n      timeout,\r\n      signal,\r\n      headers\r\n    })\r\n\r\n    /** @type {{RemoteServices: Object[]}} */\r\n    const { RemoteServices } = await response.json()\r\n\r\n    /** @type {Stat extends true ? RemotePinServiceWithStat[] : RemotePinService []} */\r\n    return (RemoteServices.map(Service.decodeRemoteService))\r\n  }\r\n\r\n  /**\r\n   * @param {Object} json\r\n   * @returns {RemotePinServiceWithStat}\r\n   */\r\n  static decodeRemoteService (json) {\r\n    return {\r\n      service: json.Service,\r\n      endpoint: new URL(json.ApiEndpoint),\r\n      ...(json.Stat && { stat: Service.decodeStat(json.Stat) })\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Object} json\r\n   * @returns {import('ipfs-core-types/src/pin/remote/service').Stat}\r\n   */\r\n  static decodeStat (json) {\r\n    switch (json.Status) {\r\n      case 'valid': {\r\n        const { Pinning, Pinned, Queued, Failed } = json.PinCount\r\n        return {\r\n          status: 'valid',\r\n          pinCount: {\r\n            queued: Queued,\r\n            pinning: Pinning,\r\n            pinned: Pinned,\r\n            failed: Failed\r\n          }\r\n        }\r\n      }\r\n      case 'invalid': {\r\n        return { status: 'invalid' }\r\n      }\r\n      default: {\r\n        return { status: json.Status }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Registers remote pinning service with a given name. Errors if service\r\n   * with the given name is already registered.\r\n   *\r\n   * @param {string} name\r\n   * @param {Credentials & AbortOptions & HttpOptions} options\r\n   */\r\n  add (name, options) {\r\n    return Service.add(this.client, name, options)\r\n  }\r\n\r\n  /**\r\n   * Unregisteres remote pinning service with a given name. If service with such\r\n   * name isn't registerede this is a noop.\r\n   *\r\n   * @param {string} name\r\n   * @param {AbortOptions & HttpOptions} [options]\r\n   */\r\n  rm (name, options) {\r\n    return Service.rm(this.client, name, options)\r\n  }\r\n\r\n  /**\r\n   * List registered remote pinning services.\r\n   *\r\n   * @param {{ stat?: true } & AbortOptions & HttpOptions} [options]\r\n   */\r\n  ls (options) {\r\n    return Service.ls(this.client, options)\r\n  }\r\n}\r\n\r\nmodule.exports = Service\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}