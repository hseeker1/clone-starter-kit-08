{"ast":null,"code":"var _classCallCheck = require(\"C:\\\\Users\\\\User\\\\Documents\\\\clone-starter-kit-08\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\User\\\\Documents\\\\clone-starter-kit-08\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\n/*\r\n    Copyright 2022 The caver-js Authors\r\n    This file is part of the caver-js library.\r\n\r\n    The caver-js library is free software: you can redistribute it and/or modify\r\n    it under the terms of the GNU Lesser General Public License as published by\r\n    the Free Software Foundation, either version 3 of the License, or\r\n    (at your option) any later version.\r\n\r\n    The caver-js library is distributed in the hope that it will be useful,\r\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\r\n    GNU Lesser General Public License for more details.\r\n\r\n    You should have received a copy of the GNU Lesser General Public License\r\n    along with the caver-js. If not, see <http://www.gnu.org/licenses/>.\r\n*/\nvar ValueTransferMemo = require('../valueTransferMemo/valueTransferMemo');\n/**\r\n * Represents a value transfer memo transaction wrapper.\r\n * @class\r\n * @hideconstructor\r\n */\n\n\nvar ValueTransferMemoWrapper = /*#__PURE__*/function () {\n  \"use strict\";\n\n  /**\r\n   * Creates a value transfer memo transaction wrapper.\r\n   * The wrapper plays an intermediate role for calling static functions of each transaction type in `caver.transaction`.\r\n   * @constructor\r\n   * @param {object} _klaytnCall - An object includes klay rpc calls.\r\n   */\n  function ValueTransferMemoWrapper(klaytnCall) {\n    _classCallCheck(this, ValueTransferMemoWrapper);\n\n    this.klaytnCall = klaytnCall;\n  }\n  /**\r\n   * Calls `ValueTransferMemo.create`.\r\n   *\r\n   * @param {object} obj - An object defines fields to create a tx.\r\n   * @return {string} An RLP-encoded transaction string.\r\n   */\n\n\n  _createClass(ValueTransferMemoWrapper, [{\n    key: \"create\",\n    value: function create(obj) {\n      return ValueTransferMemo.create(obj, this.klaytnCall);\n    }\n    /**\r\n     * Calls `ValueTransferMemo.decode`.\r\n     *\r\n     * @param {string} encoded - RLP-encoded string.\r\n     * @return {string} ValueTransferMemo instance.\r\n     */\n\n  }, {\n    key: \"decode\",\n    value: function decode(encoded) {\n      return ValueTransferMemo.decode(encoded, this.klaytnCall);\n    }\n  }]);\n\n  return ValueTransferMemoWrapper;\n}();\n\nmodule.exports = ValueTransferMemoWrapper;","map":{"version":3,"names":["ValueTransferMemo","require","ValueTransferMemoWrapper","klaytnCall","obj","create","encoded","decode","module","exports"],"sources":["C:/Users/User/Documents/clone-starter-kit-08/node_modules/caver-js/packages/caver-transaction/src/transactionTypes/wrappers/valueTransferMemoWrapper.js"],"sourcesContent":["/*\r\n    Copyright 2022 The caver-js Authors\r\n    This file is part of the caver-js library.\r\n\r\n    The caver-js library is free software: you can redistribute it and/or modify\r\n    it under the terms of the GNU Lesser General Public License as published by\r\n    the Free Software Foundation, either version 3 of the License, or\r\n    (at your option) any later version.\r\n\r\n    The caver-js library is distributed in the hope that it will be useful,\r\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\r\n    GNU Lesser General Public License for more details.\r\n\r\n    You should have received a copy of the GNU Lesser General Public License\r\n    along with the caver-js. If not, see <http://www.gnu.org/licenses/>.\r\n*/\r\n\r\nconst ValueTransferMemo = require('../valueTransferMemo/valueTransferMemo')\r\n\r\n/**\r\n * Represents a value transfer memo transaction wrapper.\r\n * @class\r\n * @hideconstructor\r\n */\r\nclass ValueTransferMemoWrapper {\r\n    /**\r\n     * Creates a value transfer memo transaction wrapper.\r\n     * The wrapper plays an intermediate role for calling static functions of each transaction type in `caver.transaction`.\r\n     * @constructor\r\n     * @param {object} _klaytnCall - An object includes klay rpc calls.\r\n     */\r\n    constructor(klaytnCall) {\r\n        this.klaytnCall = klaytnCall\r\n    }\r\n\r\n    /**\r\n     * Calls `ValueTransferMemo.create`.\r\n     *\r\n     * @param {object} obj - An object defines fields to create a tx.\r\n     * @return {string} An RLP-encoded transaction string.\r\n     */\r\n    create(obj) {\r\n        return ValueTransferMemo.create(obj, this.klaytnCall)\r\n    }\r\n\r\n    /**\r\n     * Calls `ValueTransferMemo.decode`.\r\n     *\r\n     * @param {string} encoded - RLP-encoded string.\r\n     * @return {string} ValueTransferMemo instance.\r\n     */\r\n    decode(encoded) {\r\n        return ValueTransferMemo.decode(encoded, this.klaytnCall)\r\n    }\r\n}\r\n\r\nmodule.exports = ValueTransferMemoWrapper\r\n"],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAMA,iBAAiB,GAAGC,OAAO,CAAC,wCAAD,CAAjC;AAEA;AACA;AACA;AACA;AACA;;;IACMC,wB;;;EACF;AACJ;AACA;AACA;AACA;AACA;EACI,kCAAYC,UAAZ,EAAwB;IAAA;;IACpB,KAAKA,UAAL,GAAkBA,UAAlB;EACH;EAED;AACJ;AACA;AACA;AACA;AACA;;;;;WACI,gBAAOC,GAAP,EAAY;MACR,OAAOJ,iBAAiB,CAACK,MAAlB,CAAyBD,GAAzB,EAA8B,KAAKD,UAAnC,CAAP;IACH;IAED;AACJ;AACA;AACA;AACA;AACA;;;;WACI,gBAAOG,OAAP,EAAgB;MACZ,OAAON,iBAAiB,CAACO,MAAlB,CAAyBD,OAAzB,EAAkC,KAAKH,UAAvC,CAAP;IACH;;;;;;AAGLK,MAAM,CAACC,OAAP,GAAiBP,wBAAjB"},"metadata":{},"sourceType":"script"}