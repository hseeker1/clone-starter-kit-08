{"ast":null,"code":"'use strict';\n\nvar _require = require('multibase/src/constants'),\n    names = _require.names;\n\nvar _require2 = require('web-encoding'),\n    TextEncoder = _require2.TextEncoder;\n\nvar utf8Encoder = new TextEncoder();\n/**\r\n * Interperets each character in a string as a byte and\r\n * returns a Uint8Array of those bytes.\r\n *\r\n * @param {String} string The string to turn into an array\r\n * @returns {Uint8Array}\r\n */\n\nfunction asciiStringToUint8Array(string) {\n  var array = new Uint8Array(string.length);\n\n  for (var i = 0; i < string.length; i++) {\n    array[i] = string.charCodeAt(i);\n  }\n\n  return array;\n}\n/**\r\n * Create a `Uint8Array` from the passed string\r\n *\r\n * Supports `utf8`, `utf-8` and any encoding supported by the multibase module.\r\n *\r\n * Also `ascii` which is similar to node's 'binary' encoding.\r\n *\r\n * @param {String} string\r\n * @param {String} [encoding=utf8] utf8, base16, base64, base64urlpad, etc\r\n * @returns {Uint8Array}\r\n * @see {@link https://www.npmjs.com/package/multibase|multibase} for supported encodings other than `utf8`\r\n */\n\n\nfunction fromString(string) {\n  var encoding = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'utf8';\n\n  if (encoding === 'utf8' || encoding === 'utf-8') {\n    return utf8Encoder.encode(string);\n  }\n\n  if (encoding === 'ascii') {\n    return asciiStringToUint8Array(string);\n  }\n\n  var codec = names[encoding];\n\n  if (!codec) {\n    throw new Error('Unknown base');\n  }\n\n  return codec.decode(string);\n}\n\nmodule.exports = fromString;","map":{"version":3,"names":["require","names","TextEncoder","utf8Encoder","asciiStringToUint8Array","string","array","Uint8Array","length","i","charCodeAt","fromString","encoding","encode","codec","Error","decode","module","exports"],"sources":["C:/Users/User/Documents/clone-starter-kit-08/node_modules/multiaddr/node_modules/uint8arrays/from-string.js"],"sourcesContent":["'use strict'\r\n\r\nconst { names } = require('multibase/src/constants')\r\nconst { TextEncoder } = require('web-encoding')\r\nconst utf8Encoder = new TextEncoder()\r\n\r\n/**\r\n * Interperets each character in a string as a byte and\r\n * returns a Uint8Array of those bytes.\r\n *\r\n * @param {String} string The string to turn into an array\r\n * @returns {Uint8Array}\r\n */\r\nfunction asciiStringToUint8Array (string) {\r\n  const array = new Uint8Array(string.length)\r\n\r\n  for (let i = 0; i < string.length; i++) {\r\n    array[i] = string.charCodeAt(i)\r\n  }\r\n\r\n  return array\r\n}\r\n\r\n/**\r\n * Create a `Uint8Array` from the passed string\r\n *\r\n * Supports `utf8`, `utf-8` and any encoding supported by the multibase module.\r\n *\r\n * Also `ascii` which is similar to node's 'binary' encoding.\r\n *\r\n * @param {String} string\r\n * @param {String} [encoding=utf8] utf8, base16, base64, base64urlpad, etc\r\n * @returns {Uint8Array}\r\n * @see {@link https://www.npmjs.com/package/multibase|multibase} for supported encodings other than `utf8`\r\n */\r\nfunction fromString (string, encoding = 'utf8') {\r\n  if (encoding === 'utf8' || encoding === 'utf-8') {\r\n    return utf8Encoder.encode(string)\r\n  }\r\n\r\n  if (encoding === 'ascii') {\r\n    return asciiStringToUint8Array(string)\r\n  }\r\n\r\n  const codec = names[encoding]\r\n\r\n  if (!codec) {\r\n    throw new Error('Unknown base')\r\n  }\r\n\r\n  return codec.decode(string)\r\n}\r\n\r\nmodule.exports = fromString\r\n"],"mappings":"AAAA;;AAEA,eAAkBA,OAAO,CAAC,yBAAD,CAAzB;AAAA,IAAQC,KAAR,YAAQA,KAAR;;AACA,gBAAwBD,OAAO,CAAC,cAAD,CAA/B;AAAA,IAAQE,WAAR,aAAQA,WAAR;;AACA,IAAMC,WAAW,GAAG,IAAID,WAAJ,EAApB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASE,uBAAT,CAAkCC,MAAlC,EAA0C;EACxC,IAAMC,KAAK,GAAG,IAAIC,UAAJ,CAAeF,MAAM,CAACG,MAAtB,CAAd;;EAEA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,MAAM,CAACG,MAA3B,EAAmCC,CAAC,EAApC,EAAwC;IACtCH,KAAK,CAACG,CAAD,CAAL,GAAWJ,MAAM,CAACK,UAAP,CAAkBD,CAAlB,CAAX;EACD;;EAED,OAAOH,KAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASK,UAAT,CAAqBN,MAArB,EAAgD;EAAA,IAAnBO,QAAmB,uEAAR,MAAQ;;EAC9C,IAAIA,QAAQ,KAAK,MAAb,IAAuBA,QAAQ,KAAK,OAAxC,EAAiD;IAC/C,OAAOT,WAAW,CAACU,MAAZ,CAAmBR,MAAnB,CAAP;EACD;;EAED,IAAIO,QAAQ,KAAK,OAAjB,EAA0B;IACxB,OAAOR,uBAAuB,CAACC,MAAD,CAA9B;EACD;;EAED,IAAMS,KAAK,GAAGb,KAAK,CAACW,QAAD,CAAnB;;EAEA,IAAI,CAACE,KAAL,EAAY;IACV,MAAM,IAAIC,KAAJ,CAAU,cAAV,CAAN;EACD;;EAED,OAAOD,KAAK,CAACE,MAAN,CAAaX,MAAb,CAAP;AACD;;AAEDY,MAAM,CAACC,OAAP,GAAiBP,UAAjB"},"metadata":{},"sourceType":"script"}