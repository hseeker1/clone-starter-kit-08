{"ast":null,"code":"/*\r\n    Copyright 2020 The caver-js Authors\r\n    This file is part of the caver-js library.\r\n\r\n    The caver-js library is free software: you can redistribute it and/or modify\r\n    it under the terms of the GNU Lesser General Public License as published by\r\n    the Free Software Foundation, either version 3 of the License, or\r\n    (at your option) any later version.\r\n\r\n    The caver-js library is distributed in the hope that it will be useful,\r\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\r\n    GNU Lesser General Public License for more details.\r\n\r\n    You should have received a copy of the GNU Lesser General Public License\r\n    along with the caver-js. If not, see <http://www.gnu.org/licenses/>.\r\n*/\n\n/**\r\n * @module AccountKeyHelper\r\n * @ignore\r\n */\nvar _ = require('lodash');\n\nvar WeightedMultiSigOptions = require('./weightedMultiSigOptions');\n\nvar ACCOUNT_KEY_TAG = {\n  ACCOUNT_KEY_NIL_TAG: '0x80',\n  ACCOUNT_KEY_LEGACY_TAG: '0x01c0',\n  ACCOUNT_KEY_PUBLIC_TAG: '0x02',\n  ACCOUNT_KEY_FAIL_TAG: '0x03c0',\n  ACCOUNT_KEY_WEIGHTED_MULTISIG_TAG: '0x04',\n  ACCOUNT_KEY_ROLE_BASED_TAG: '0x05'\n};\n/**\r\n * Creates and returns the valid instance of WeightedMultiSigOptions for AccountKeyWeightedMultiSig.\r\n * If the user does not define the values of options(threshold, weights),\r\n * default options(threshold is 1 and the weight of each key is 1) are returned.\r\n *\r\n * @param {number} lengthOfKeys The lenght of keys.\r\n * @param {WeightedMultiSigOptions|object} [options] An instance of WeightedMultiSigOptions or an object that defines 'threshold' and 'weight'.\r\n * @return {WeightedMultiSigOptions}\r\n */\n\nvar fillWeightedMultiSigOptionsForMultiSig = function fillWeightedMultiSigOptionsForMultiSig(lengthOfKeys, options) {\n  if (_.isArray(options)) throw new Error(\"For AccountKeyWeightedMultiSig, options cannot be defined as an array of WeightedMultiSigOptions.\");\n  if (!options) options = new WeightedMultiSigOptions(1, Array(lengthOfKeys).fill(1));\n  if (!(options instanceof WeightedMultiSigOptions)) options = WeightedMultiSigOptions.fromObject(options);\n  return options.isEmpty() ? new WeightedMultiSigOptions(1, Array(lengthOfKeys).fill(1)) : options;\n};\n/**\r\n * Creates and returns the valid instance of WeightedMultiSigOptions for AccountKeyRoleBased.\r\n * If the user does not define the values of options(threshold, weights),\r\n * default options(threshold is 1 and the weight of each key is 1) will be used for each role key.\r\n *\r\n * @param {Array.<number>} lengthOfKeys The lenght of keys.\r\n * @param {Array.<WeightedMultiSigOptions>|Array.<object>} [options] An array of WeightedMultiSigOptions or object that defines 'threshold' and 'weight'.\r\n * @return {Array.<WeightedMultiSigOptions>}\r\n */\n\n\nvar fillWeightedMultiSigOptionsForRoleBased = function fillWeightedMultiSigOptionsForRoleBased(lengthOfKeys) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  if (!_.isArray(options)) throw new Error(\"For AccountKeyRoleBased, options should be an array of WeightedMultiSigOptions.\");\n\n  for (var i = 0; i < lengthOfKeys.length; i++) {\n    if (options[i] && !(options[i] instanceof WeightedMultiSigOptions)) {\n      options[i] = WeightedMultiSigOptions.fromObject(options[i]);\n    } // If the WeightedMultiSigOptions instance is not empty,\n    // it means that the user has defined the option parameters needed when updating to AccountKeyWeightedMultiSig.\n\n\n    if (options[i] && !options[i].isEmpty()) continue;\n    var optionToAdd = void 0;\n\n    if (lengthOfKeys[i] > 1) {\n      // default option when option is not set\n      optionToAdd = new WeightedMultiSigOptions(1, Array(lengthOfKeys[i]).fill(1));\n    } else {\n      // AccountKeyPublic does not need option\n      optionToAdd = new WeightedMultiSigOptions();\n    }\n\n    if (options[i]) {\n      options[i] = optionToAdd;\n    } else {\n      options.push(optionToAdd);\n    }\n  }\n\n  return options;\n};\n\nmodule.exports = {\n  ACCOUNT_KEY_TAG: ACCOUNT_KEY_TAG,\n  fillWeightedMultiSigOptionsForMultiSig: fillWeightedMultiSigOptionsForMultiSig,\n  fillWeightedMultiSigOptionsForRoleBased: fillWeightedMultiSigOptionsForRoleBased\n};","map":{"version":3,"names":["_","require","WeightedMultiSigOptions","ACCOUNT_KEY_TAG","ACCOUNT_KEY_NIL_TAG","ACCOUNT_KEY_LEGACY_TAG","ACCOUNT_KEY_PUBLIC_TAG","ACCOUNT_KEY_FAIL_TAG","ACCOUNT_KEY_WEIGHTED_MULTISIG_TAG","ACCOUNT_KEY_ROLE_BASED_TAG","fillWeightedMultiSigOptionsForMultiSig","lengthOfKeys","options","isArray","Error","Array","fill","fromObject","isEmpty","fillWeightedMultiSigOptionsForRoleBased","i","length","optionToAdd","push","module","exports"],"sources":["C:/Users/User/Documents/clone-starter-kit-08/node_modules/caver-js/packages/caver-account/src/accountKey/accountKeyHelper.js"],"sourcesContent":["/*\r\n    Copyright 2020 The caver-js Authors\r\n    This file is part of the caver-js library.\r\n\r\n    The caver-js library is free software: you can redistribute it and/or modify\r\n    it under the terms of the GNU Lesser General Public License as published by\r\n    the Free Software Foundation, either version 3 of the License, or\r\n    (at your option) any later version.\r\n\r\n    The caver-js library is distributed in the hope that it will be useful,\r\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\r\n    GNU Lesser General Public License for more details.\r\n\r\n    You should have received a copy of the GNU Lesser General Public License\r\n    along with the caver-js. If not, see <http://www.gnu.org/licenses/>.\r\n*/\r\n\r\n/**\r\n * @module AccountKeyHelper\r\n * @ignore\r\n */\r\n\r\nconst _ = require('lodash')\r\nconst WeightedMultiSigOptions = require('./weightedMultiSigOptions')\r\n\r\nconst ACCOUNT_KEY_TAG = {\r\n    ACCOUNT_KEY_NIL_TAG: '0x80',\r\n    ACCOUNT_KEY_LEGACY_TAG: '0x01c0',\r\n    ACCOUNT_KEY_PUBLIC_TAG: '0x02',\r\n    ACCOUNT_KEY_FAIL_TAG: '0x03c0',\r\n    ACCOUNT_KEY_WEIGHTED_MULTISIG_TAG: '0x04',\r\n    ACCOUNT_KEY_ROLE_BASED_TAG: '0x05',\r\n}\r\n\r\n/**\r\n * Creates and returns the valid instance of WeightedMultiSigOptions for AccountKeyWeightedMultiSig.\r\n * If the user does not define the values of options(threshold, weights),\r\n * default options(threshold is 1 and the weight of each key is 1) are returned.\r\n *\r\n * @param {number} lengthOfKeys The lenght of keys.\r\n * @param {WeightedMultiSigOptions|object} [options] An instance of WeightedMultiSigOptions or an object that defines 'threshold' and 'weight'.\r\n * @return {WeightedMultiSigOptions}\r\n */\r\nconst fillWeightedMultiSigOptionsForMultiSig = (lengthOfKeys, options) => {\r\n    if (_.isArray(options))\r\n        throw new Error(`For AccountKeyWeightedMultiSig, options cannot be defined as an array of WeightedMultiSigOptions.`)\r\n\r\n    if (!options) options = new WeightedMultiSigOptions(1, Array(lengthOfKeys).fill(1))\r\n    if (!(options instanceof WeightedMultiSigOptions)) options = WeightedMultiSigOptions.fromObject(options)\r\n\r\n    return options.isEmpty() ? new WeightedMultiSigOptions(1, Array(lengthOfKeys).fill(1)) : options\r\n}\r\n\r\n/**\r\n * Creates and returns the valid instance of WeightedMultiSigOptions for AccountKeyRoleBased.\r\n * If the user does not define the values of options(threshold, weights),\r\n * default options(threshold is 1 and the weight of each key is 1) will be used for each role key.\r\n *\r\n * @param {Array.<number>} lengthOfKeys The lenght of keys.\r\n * @param {Array.<WeightedMultiSigOptions>|Array.<object>} [options] An array of WeightedMultiSigOptions or object that defines 'threshold' and 'weight'.\r\n * @return {Array.<WeightedMultiSigOptions>}\r\n */\r\nconst fillWeightedMultiSigOptionsForRoleBased = (lengthOfKeys, options = []) => {\r\n    if (!_.isArray(options)) throw new Error(`For AccountKeyRoleBased, options should be an array of WeightedMultiSigOptions.`)\r\n\r\n    for (let i = 0; i < lengthOfKeys.length; i++) {\r\n        if (options[i] && !(options[i] instanceof WeightedMultiSigOptions)) {\r\n            options[i] = WeightedMultiSigOptions.fromObject(options[i])\r\n        }\r\n        // If the WeightedMultiSigOptions instance is not empty,\r\n        // it means that the user has defined the option parameters needed when updating to AccountKeyWeightedMultiSig.\r\n        if (options[i] && !options[i].isEmpty()) continue\r\n\r\n        let optionToAdd\r\n        if (lengthOfKeys[i] > 1) {\r\n            // default option when option is not set\r\n            optionToAdd = new WeightedMultiSigOptions(1, Array(lengthOfKeys[i]).fill(1))\r\n        } else {\r\n            // AccountKeyPublic does not need option\r\n            optionToAdd = new WeightedMultiSigOptions()\r\n        }\r\n\r\n        if (options[i]) {\r\n            options[i] = optionToAdd\r\n        } else {\r\n            options.push(optionToAdd)\r\n        }\r\n    }\r\n    return options\r\n}\r\n\r\nmodule.exports = {\r\n    ACCOUNT_KEY_TAG,\r\n    fillWeightedMultiSigOptionsForMultiSig,\r\n    fillWeightedMultiSigOptionsForRoleBased,\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}