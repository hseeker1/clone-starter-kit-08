{"ast":null,"code":"var _classCallCheck = require(\"C:\\\\Users\\\\User\\\\Documents\\\\clone-starter-kit-08\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\User\\\\Documents\\\\clone-starter-kit-08\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\n/*\r\n    Copyright 2019 The caver-js Authors\r\n    This file is part of the caver-js library.\r\n\r\n    The caver-js library is free software: you can redistribute it and/or modify\r\n    it under the terms of the GNU Lesser General Public License as published by\r\n    the Free Software Foundation, either version 3 of the License, or\r\n    (at your option) any later version.\r\n\r\n    The caver-js library is distributed in the hope that it will be useful,\r\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\r\n    GNU Lesser General Public License for more details.\r\n\r\n    You should have received a copy of the GNU Lesser General Public License\r\n    along with the caver-js. If not, see <http://www.gnu.org/licenses/>.\r\n*/\nvar AccountKeyPublic = require('../accountKey/accountKeyPublic');\n\nvar AccountKeyMultiSig = require('../accountKey/accountKeyMultiSig');\n\nvar AccountKeyRoleBased = require('../accountKey/accountKeyRoleBased');\n\nvar isAddress = require('../../../../caver-utils/src/utils').isAddress;\n\nvar addHexPrefix = require('../../../../caver-utils').addHexPrefix;\n\nvar Account = /*#__PURE__*/function () {\n  \"use strict\";\n\n  function Account(address, accountKey) {\n    _classCallCheck(this, Account);\n\n    if (!address || !accountKey) throw new Error('Failed to create Account. address and accountKey are needed to create Account.');\n    if (!isAddress(address)) throw new Error(\"Invalid address : \".concat(address));\n    if (!Account.isAccountKey(accountKey)) throw new Error('Invalid accountKey.');\n    address = addHexPrefix(address);\n    Object.defineProperty(this, 'address', {\n      get: function get() {\n        return address;\n      },\n      set: function set(addressInput) {\n        if (!isAddress(addressInput)) throw new Error(\"Invalid address : \".concat(addressInput));\n        address = addHexPrefix(addressInput);\n      },\n      enumerable: true\n    });\n    Object.defineProperty(this, 'accountKey', {\n      get: function get() {\n        return accountKey;\n      },\n      set: function set(accountKeyInput) {\n        if (!Account.isAccountKey(accountKeyInput) && accountKeyInput !== null) throw new Error('Invalid accountKey.');\n\n        if (accountKey === null || accountKeyInput === null) {\n          accountKey = accountKeyInput;\n        } else if (accountKey.type !== accountKeyInput.type) {\n          accountKey = accountKeyInput;\n        } else {\n          accountKey.update(accountKeyInput);\n        }\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(this, 'privateKey', {\n      get: function get() {\n        return this.accountKey.defaultKey;\n      },\n      set: function set() {\n        throw new Error('The privateKey cannot be modified. The privateKey is set to default key of accountKey, so update accountKey to modify the privateKey.');\n      },\n      enumerable: true\n    });\n  }\n\n  _createClass(Account, [{\n    key: \"keys\",\n    get: function get() {\n      return this.accountKey.keys;\n    }\n  }, {\n    key: \"accountKeyType\",\n    get: function get() {\n      return this.accountKey.type;\n    }\n  }, {\n    key: \"transactionKey\",\n    get: function get() {\n      return this.accountKey.transactionKey;\n    }\n  }, {\n    key: \"updateKey\",\n    get: function get() {\n      return this.accountKey.updateKey;\n    }\n  }, {\n    key: \"feePayerKey\",\n    get: function get() {\n      return this.accountKey.feePayerKey;\n    }\n  }, {\n    key: \"toPublicKey\",\n    value: function toPublicKey(toPublicKeyFunc) {\n      return this.accountKey.toPublicKey(toPublicKeyFunc);\n    }\n  }], [{\n    key: \"fromObject\",\n    value: function fromObject(obj) {\n      return new Account(obj.address, new AccountKeyPublic(obj.privateKey));\n    }\n  }, {\n    key: \"isAccountKey\",\n    value: function isAccountKey(accountKey) {\n      var isAccountKey = false;\n      if (accountKey instanceof AccountKeyPublic) isAccountKey = true;\n      if (accountKey instanceof AccountKeyMultiSig) isAccountKey = true;\n      if (accountKey instanceof AccountKeyRoleBased) isAccountKey = true;\n      return isAccountKey;\n    }\n  }]);\n\n  return Account;\n}();\n\nmodule.exports = Account;","map":{"version":3,"names":["AccountKeyPublic","require","AccountKeyMultiSig","AccountKeyRoleBased","isAddress","addHexPrefix","Account","address","accountKey","Error","isAccountKey","Object","defineProperty","get","set","addressInput","enumerable","accountKeyInput","type","update","configurable","defaultKey","keys","transactionKey","updateKey","feePayerKey","toPublicKeyFunc","toPublicKey","obj","privateKey","module","exports"],"sources":["C:/Users/User/Documents/clone-starter-kit-08/node_modules/caver-js/packages/caver-klay/caver-klay-accounts/src/account/account.js"],"sourcesContent":["/*\r\n    Copyright 2019 The caver-js Authors\r\n    This file is part of the caver-js library.\r\n\r\n    The caver-js library is free software: you can redistribute it and/or modify\r\n    it under the terms of the GNU Lesser General Public License as published by\r\n    the Free Software Foundation, either version 3 of the License, or\r\n    (at your option) any later version.\r\n\r\n    The caver-js library is distributed in the hope that it will be useful,\r\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\r\n    GNU Lesser General Public License for more details.\r\n\r\n    You should have received a copy of the GNU Lesser General Public License\r\n    along with the caver-js. If not, see <http://www.gnu.org/licenses/>.\r\n*/\r\n\r\nconst AccountKeyPublic = require('../accountKey/accountKeyPublic')\r\nconst AccountKeyMultiSig = require('../accountKey/accountKeyMultiSig')\r\nconst AccountKeyRoleBased = require('../accountKey/accountKeyRoleBased')\r\nconst isAddress = require('../../../../caver-utils/src/utils').isAddress\r\nconst addHexPrefix = require('../../../../caver-utils').addHexPrefix\r\n\r\nclass Account {\r\n    static fromObject(obj) {\r\n        return new Account(obj.address, new AccountKeyPublic(obj.privateKey))\r\n    }\r\n\r\n    static isAccountKey(accountKey) {\r\n        let isAccountKey = false\r\n        if (accountKey instanceof AccountKeyPublic) isAccountKey = true\r\n        if (accountKey instanceof AccountKeyMultiSig) isAccountKey = true\r\n        if (accountKey instanceof AccountKeyRoleBased) isAccountKey = true\r\n\r\n        return isAccountKey\r\n    }\r\n\r\n    constructor(address, accountKey) {\r\n        if (!address || !accountKey) throw new Error('Failed to create Account. address and accountKey are needed to create Account.')\r\n\r\n        if (!isAddress(address)) throw new Error(`Invalid address : ${address}`)\r\n        if (!Account.isAccountKey(accountKey)) throw new Error('Invalid accountKey.')\r\n\r\n        address = addHexPrefix(address)\r\n\r\n        Object.defineProperty(this, 'address', {\r\n            get: function() {\r\n                return address\r\n            },\r\n            set: function(addressInput) {\r\n                if (!isAddress(addressInput)) throw new Error(`Invalid address : ${addressInput}`)\r\n                address = addHexPrefix(addressInput)\r\n            },\r\n            enumerable: true,\r\n        })\r\n\r\n        Object.defineProperty(this, 'accountKey', {\r\n            get: function() {\r\n                return accountKey\r\n            },\r\n            set: function(accountKeyInput) {\r\n                if (!Account.isAccountKey(accountKeyInput) && accountKeyInput !== null) throw new Error('Invalid accountKey.')\r\n\r\n                if (accountKey === null || accountKeyInput === null) {\r\n                    accountKey = accountKeyInput\r\n                } else if (accountKey.type !== accountKeyInput.type) {\r\n                    accountKey = accountKeyInput\r\n                } else {\r\n                    accountKey.update(accountKeyInput)\r\n                }\r\n            },\r\n            enumerable: true,\r\n            configurable: true,\r\n        })\r\n\r\n        Object.defineProperty(this, 'privateKey', {\r\n            get: function() {\r\n                return this.accountKey.defaultKey\r\n            },\r\n            set: function() {\r\n                throw new Error(\r\n                    'The privateKey cannot be modified. The privateKey is set to default key of accountKey, so update accountKey to modify the privateKey.'\r\n                )\r\n            },\r\n            enumerable: true,\r\n        })\r\n    }\r\n\r\n    get keys() {\r\n        return this.accountKey.keys\r\n    }\r\n\r\n    get accountKeyType() {\r\n        return this.accountKey.type\r\n    }\r\n\r\n    get transactionKey() {\r\n        return this.accountKey.transactionKey\r\n    }\r\n\r\n    get updateKey() {\r\n        return this.accountKey.updateKey\r\n    }\r\n\r\n    get feePayerKey() {\r\n        return this.accountKey.feePayerKey\r\n    }\r\n\r\n    toPublicKey(toPublicKeyFunc) {\r\n        return this.accountKey.toPublicKey(toPublicKeyFunc)\r\n    }\r\n}\r\n\r\nmodule.exports = Account\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}