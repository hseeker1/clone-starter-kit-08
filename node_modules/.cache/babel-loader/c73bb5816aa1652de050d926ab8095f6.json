{"ast":null,"code":"/*\r\n    Copyright 2018 The caver-js Authors\r\n    This file is part of the caver-js library.\r\n\r\n    The caver-js library is free software: you can redistribute it and/or modify\r\n    it under the terms of the GNU Lesser General Public License as published by\r\n    the Free Software Foundation, either version 3 of the License, or\r\n    (at your option) any later version.\r\n\r\n    The caver-js library is distributed in the hope that it will be useful,\r\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\r\n    GNU Lesser General Public License for more details.\r\n\r\n    You should have received a copy of the GNU Lesser General Public License\r\n    along with the caver-js. If not, see <http://www.gnu.org/licenses/>.\r\n*/\nconst RLP = require('eth-lib/lib/rlp');\n\nconst Bytes = require('eth-lib/lib/bytes');\n\nconst utils = require('../../../../caver-utils');\n\nconst helpers = require('../../../../caver-core-helpers');\n\nconst {\n  VALUE_TRANFSER_TYPE_TAG,\n  VALUE_TRANSFER_MEMO_TYPE_TAG,\n  FEE_DELEGATED_VALUE_TRANSFER_TYPE_TAG,\n  FEE_DELEGATED_VALUE_TRANSFER_MEMO_TYPE_TAG,\n  FEE_DELEGATED_VALUE_TRANSFER_MEMO_WITH_RATIO_TYPE_TAG,\n  FEE_DELEGATED_VALUE_TRANSFER_WITH_RATIO_TYPE_TAG\n} = helpers.constants;\n\nfunction rlpEncodeForValueTransfer(transaction) {\n  return RLP.encode([RLP.encode([VALUE_TRANFSER_TYPE_TAG, Bytes.fromNat(transaction.nonce), Bytes.fromNat(transaction.gasPrice), Bytes.fromNat(transaction.gas), transaction.to.toLowerCase(), Bytes.fromNat(transaction.value), transaction.from.toLowerCase()]), Bytes.fromNat(transaction.chainId || '0x1'), '0x', '0x']);\n} // TODO:\n\n\nfunction rlpEncodeForValueTransferMemo(transaction) {\n  return RLP.encode([RLP.encode([VALUE_TRANSFER_MEMO_TYPE_TAG, Bytes.fromNat(transaction.nonce), Bytes.fromNat(transaction.gasPrice), Bytes.fromNat(transaction.gas), transaction.to.toLowerCase(), Bytes.fromNat(transaction.value), transaction.from.toLowerCase(), transaction.data]), Bytes.fromNat(transaction.chainId || '0x1'), '0x', '0x']);\n}\n\nfunction rlpEncodeForFeeDelegatedValueTransfer(transaction) {\n  if (transaction.senderRawTransaction) {\n    // fee payer rlp encoding.\n    const typeDetacehdRawTransaction = `0x${transaction.senderRawTransaction.slice(4)}`; // eslint-disable-next-line no-unused-vars\n\n    const [nonce, gasPrice, gas, to, value, from, [[v, r, s]]] = utils.rlpDecode(typeDetacehdRawTransaction);\n    return RLP.encode([RLP.encode([FEE_DELEGATED_VALUE_TRANSFER_TYPE_TAG, Bytes.fromNat(nonce), Bytes.fromNat(gasPrice), Bytes.fromNat(gas), to.toLowerCase(), Bytes.fromNat(value), from.toLowerCase()]), transaction.feePayer.toLowerCase(), Bytes.fromNat(transaction.chainId || '0x1'), '0x', '0x']);\n  }\n\n  return RLP.encode([RLP.encode([FEE_DELEGATED_VALUE_TRANSFER_TYPE_TAG, Bytes.fromNat(transaction.nonce), Bytes.fromNat(transaction.gasPrice), Bytes.fromNat(transaction.gas), transaction.to.toLowerCase(), Bytes.fromNat(transaction.value), transaction.from.toLowerCase()]), Bytes.fromNat(transaction.chainId || '0x1'), '0x', '0x']);\n}\n\nfunction rlpEncodeForFeeDelegatedValueTransferWithRatio(transaction) {\n  if (transaction.senderRawTransaction) {\n    // fee payer rlp encoding.\n    const typeDetacehdRawTransaction = `0x${transaction.senderRawTransaction.slice(4)}`; // eslint-disable-next-line no-unused-vars\n\n    const [nonce, gasPrice, gas, to, value, from, feeRatio, [[v, r, s]]] = utils.rlpDecode(typeDetacehdRawTransaction);\n    return RLP.encode([RLP.encode([FEE_DELEGATED_VALUE_TRANSFER_WITH_RATIO_TYPE_TAG, Bytes.fromNat(nonce), Bytes.fromNat(gasPrice), Bytes.fromNat(gas), to.toLowerCase(), Bytes.fromNat(value), from.toLowerCase(), feeRatio]), transaction.feePayer.toLowerCase(), Bytes.fromNat(transaction.chainId || '0x1'), '0x', '0x']);\n  }\n\n  return RLP.encode([RLP.encode([FEE_DELEGATED_VALUE_TRANSFER_WITH_RATIO_TYPE_TAG, Bytes.fromNat(transaction.nonce), Bytes.fromNat(transaction.gasPrice), Bytes.fromNat(transaction.gas), transaction.to.toLowerCase(), Bytes.fromNat(transaction.value), transaction.from.toLowerCase(), Bytes.fromNat(transaction.feeRatio)]), Bytes.fromNat(transaction.chainId || '0x1'), '0x', '0x']);\n}\n\nfunction rlpEncodeForFeeDelegatedValueTransferMemo(transaction) {\n  if (transaction.senderRawTransaction) {\n    // fee payer rlp encoding.\n    const typeDetacehdRawTransaction = `0x${transaction.senderRawTransaction.slice(4)}`; // eslint-disable-next-line no-unused-vars\n\n    const [nonce, gasPrice, gas, to, value, from, data, [[v, r, s]]] = utils.rlpDecode(typeDetacehdRawTransaction);\n    return RLP.encode([RLP.encode([FEE_DELEGATED_VALUE_TRANSFER_MEMO_TYPE_TAG, Bytes.fromNat(nonce), Bytes.fromNat(gasPrice), Bytes.fromNat(gas), to.toLowerCase(), Bytes.fromNat(value), from.toLowerCase(), data]), transaction.feePayer.toLowerCase(), Bytes.fromNat(transaction.chainId || '0x1'), '0x', '0x']);\n  }\n\n  return RLP.encode([RLP.encode([FEE_DELEGATED_VALUE_TRANSFER_MEMO_TYPE_TAG, Bytes.fromNat(transaction.nonce), Bytes.fromNat(transaction.gasPrice), Bytes.fromNat(transaction.gas), transaction.to.toLowerCase(), Bytes.fromNat(transaction.value), transaction.from.toLowerCase(), transaction.data]), Bytes.fromNat(transaction.chainId || '0x1'), '0x', '0x']);\n}\n\nfunction rlpEncodeForFeeDelegatedValueTransferMemoWithRatio(transaction) {\n  if (transaction.senderRawTransaction) {\n    // fee payer rlp encoding.\n    const typeDetacehdRawTransaction = `0x${transaction.senderRawTransaction.slice(4)}`; // eslint-disable-next-line no-unused-vars\n\n    const [nonce, gasPrice, gas, to, value, from, data, feeRatio, [[v, r, s]]] = utils.rlpDecode(typeDetacehdRawTransaction);\n    return RLP.encode([RLP.encode([FEE_DELEGATED_VALUE_TRANSFER_MEMO_WITH_RATIO_TYPE_TAG, Bytes.fromNat(nonce), Bytes.fromNat(gasPrice), Bytes.fromNat(gas), to.toLowerCase(), Bytes.fromNat(value), from.toLowerCase(), data, Bytes.fromNat(feeRatio)]), transaction.feePayer.toLowerCase(), Bytes.fromNat(transaction.chainId || '0x1'), '0x', '0x']);\n  }\n\n  return RLP.encode([RLP.encode([FEE_DELEGATED_VALUE_TRANSFER_MEMO_WITH_RATIO_TYPE_TAG, Bytes.fromNat(transaction.nonce), Bytes.fromNat(transaction.gasPrice), Bytes.fromNat(transaction.gas), transaction.to.toLowerCase(), Bytes.fromNat(transaction.value), transaction.from.toLowerCase(), transaction.data, Bytes.fromNat(transaction.feeRatio)]), Bytes.fromNat(transaction.chainId || '0x1'), '0x', '0x']);\n}\n\nmodule.exports = {\n  rlpEncodeForValueTransfer,\n  rlpEncodeForValueTransferMemo,\n  rlpEncodeForFeeDelegatedValueTransfer,\n  rlpEncodeForFeeDelegatedValueTransferWithRatio,\n  rlpEncodeForFeeDelegatedValueTransferMemo,\n  rlpEncodeForFeeDelegatedValueTransferMemoWithRatio\n};","map":{"version":3,"names":["RLP","require","Bytes","utils","helpers","VALUE_TRANFSER_TYPE_TAG","VALUE_TRANSFER_MEMO_TYPE_TAG","FEE_DELEGATED_VALUE_TRANSFER_TYPE_TAG","FEE_DELEGATED_VALUE_TRANSFER_MEMO_TYPE_TAG","FEE_DELEGATED_VALUE_TRANSFER_MEMO_WITH_RATIO_TYPE_TAG","FEE_DELEGATED_VALUE_TRANSFER_WITH_RATIO_TYPE_TAG","constants","rlpEncodeForValueTransfer","transaction","encode","fromNat","nonce","gasPrice","gas","to","toLowerCase","value","from","chainId","rlpEncodeForValueTransferMemo","data","rlpEncodeForFeeDelegatedValueTransfer","senderRawTransaction","typeDetacehdRawTransaction","slice","v","r","s","rlpDecode","feePayer","rlpEncodeForFeeDelegatedValueTransferWithRatio","feeRatio","rlpEncodeForFeeDelegatedValueTransferMemo","rlpEncodeForFeeDelegatedValueTransferMemoWithRatio","module","exports"],"sources":["C:/Users/User/Documents/clone-starter-kit-08/node_modules/caver-js/packages/caver-klay/caver-klay-accounts/src/transactionType/valueTransfer.js"],"sourcesContent":["/*\r\n    Copyright 2018 The caver-js Authors\r\n    This file is part of the caver-js library.\r\n\r\n    The caver-js library is free software: you can redistribute it and/or modify\r\n    it under the terms of the GNU Lesser General Public License as published by\r\n    the Free Software Foundation, either version 3 of the License, or\r\n    (at your option) any later version.\r\n\r\n    The caver-js library is distributed in the hope that it will be useful,\r\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\r\n    GNU Lesser General Public License for more details.\r\n\r\n    You should have received a copy of the GNU Lesser General Public License\r\n    along with the caver-js. If not, see <http://www.gnu.org/licenses/>.\r\n*/\r\n\r\nconst RLP = require('eth-lib/lib/rlp')\r\nconst Bytes = require('eth-lib/lib/bytes')\r\nconst utils = require('../../../../caver-utils')\r\nconst helpers = require('../../../../caver-core-helpers')\r\n\r\nconst {\r\n    VALUE_TRANFSER_TYPE_TAG,\r\n    VALUE_TRANSFER_MEMO_TYPE_TAG,\r\n    FEE_DELEGATED_VALUE_TRANSFER_TYPE_TAG,\r\n    FEE_DELEGATED_VALUE_TRANSFER_MEMO_TYPE_TAG,\r\n    FEE_DELEGATED_VALUE_TRANSFER_MEMO_WITH_RATIO_TYPE_TAG,\r\n    FEE_DELEGATED_VALUE_TRANSFER_WITH_RATIO_TYPE_TAG,\r\n} = helpers.constants\r\n\r\nfunction rlpEncodeForValueTransfer(transaction) {\r\n    return RLP.encode([\r\n        RLP.encode([\r\n            VALUE_TRANFSER_TYPE_TAG,\r\n            Bytes.fromNat(transaction.nonce),\r\n            Bytes.fromNat(transaction.gasPrice),\r\n            Bytes.fromNat(transaction.gas),\r\n            transaction.to.toLowerCase(),\r\n            Bytes.fromNat(transaction.value),\r\n            transaction.from.toLowerCase(),\r\n        ]),\r\n        Bytes.fromNat(transaction.chainId || '0x1'),\r\n        '0x',\r\n        '0x',\r\n    ])\r\n}\r\n\r\n// TODO:\r\nfunction rlpEncodeForValueTransferMemo(transaction) {\r\n    return RLP.encode([\r\n        RLP.encode([\r\n            VALUE_TRANSFER_MEMO_TYPE_TAG,\r\n            Bytes.fromNat(transaction.nonce),\r\n            Bytes.fromNat(transaction.gasPrice),\r\n            Bytes.fromNat(transaction.gas),\r\n            transaction.to.toLowerCase(),\r\n            Bytes.fromNat(transaction.value),\r\n            transaction.from.toLowerCase(),\r\n            transaction.data,\r\n        ]),\r\n        Bytes.fromNat(transaction.chainId || '0x1'),\r\n        '0x',\r\n        '0x',\r\n    ])\r\n}\r\n\r\nfunction rlpEncodeForFeeDelegatedValueTransfer(transaction) {\r\n    if (transaction.senderRawTransaction) {\r\n        // fee payer rlp encoding.\r\n        const typeDetacehdRawTransaction = `0x${transaction.senderRawTransaction.slice(4)}`\r\n\r\n        // eslint-disable-next-line no-unused-vars\r\n        const [nonce, gasPrice, gas, to, value, from, [[v, r, s]]] = utils.rlpDecode(typeDetacehdRawTransaction)\r\n\r\n        return RLP.encode([\r\n            RLP.encode([\r\n                FEE_DELEGATED_VALUE_TRANSFER_TYPE_TAG,\r\n                Bytes.fromNat(nonce),\r\n                Bytes.fromNat(gasPrice),\r\n                Bytes.fromNat(gas),\r\n                to.toLowerCase(),\r\n                Bytes.fromNat(value),\r\n                from.toLowerCase(),\r\n            ]),\r\n            transaction.feePayer.toLowerCase(),\r\n            Bytes.fromNat(transaction.chainId || '0x1'),\r\n            '0x',\r\n            '0x',\r\n        ])\r\n    }\r\n    return RLP.encode([\r\n        RLP.encode([\r\n            FEE_DELEGATED_VALUE_TRANSFER_TYPE_TAG,\r\n            Bytes.fromNat(transaction.nonce),\r\n            Bytes.fromNat(transaction.gasPrice),\r\n            Bytes.fromNat(transaction.gas),\r\n            transaction.to.toLowerCase(),\r\n            Bytes.fromNat(transaction.value),\r\n            transaction.from.toLowerCase(),\r\n        ]),\r\n        Bytes.fromNat(transaction.chainId || '0x1'),\r\n        '0x',\r\n        '0x',\r\n    ])\r\n}\r\n\r\nfunction rlpEncodeForFeeDelegatedValueTransferWithRatio(transaction) {\r\n    if (transaction.senderRawTransaction) {\r\n        // fee payer rlp encoding.\r\n        const typeDetacehdRawTransaction = `0x${transaction.senderRawTransaction.slice(4)}`\r\n\r\n        // eslint-disable-next-line no-unused-vars\r\n        const [nonce, gasPrice, gas, to, value, from, feeRatio, [[v, r, s]]] = utils.rlpDecode(typeDetacehdRawTransaction)\r\n\r\n        return RLP.encode([\r\n            RLP.encode([\r\n                FEE_DELEGATED_VALUE_TRANSFER_WITH_RATIO_TYPE_TAG,\r\n                Bytes.fromNat(nonce),\r\n                Bytes.fromNat(gasPrice),\r\n                Bytes.fromNat(gas),\r\n                to.toLowerCase(),\r\n                Bytes.fromNat(value),\r\n                from.toLowerCase(),\r\n                feeRatio,\r\n            ]),\r\n            transaction.feePayer.toLowerCase(),\r\n            Bytes.fromNat(transaction.chainId || '0x1'),\r\n            '0x',\r\n            '0x',\r\n        ])\r\n    }\r\n    return RLP.encode([\r\n        RLP.encode([\r\n            FEE_DELEGATED_VALUE_TRANSFER_WITH_RATIO_TYPE_TAG,\r\n            Bytes.fromNat(transaction.nonce),\r\n            Bytes.fromNat(transaction.gasPrice),\r\n            Bytes.fromNat(transaction.gas),\r\n            transaction.to.toLowerCase(),\r\n            Bytes.fromNat(transaction.value),\r\n            transaction.from.toLowerCase(),\r\n            Bytes.fromNat(transaction.feeRatio),\r\n        ]),\r\n        Bytes.fromNat(transaction.chainId || '0x1'),\r\n        '0x',\r\n        '0x',\r\n    ])\r\n}\r\n\r\nfunction rlpEncodeForFeeDelegatedValueTransferMemo(transaction) {\r\n    if (transaction.senderRawTransaction) {\r\n        // fee payer rlp encoding.\r\n        const typeDetacehdRawTransaction = `0x${transaction.senderRawTransaction.slice(4)}`\r\n\r\n        // eslint-disable-next-line no-unused-vars\r\n        const [nonce, gasPrice, gas, to, value, from, data, [[v, r, s]]] = utils.rlpDecode(typeDetacehdRawTransaction)\r\n\r\n        return RLP.encode([\r\n            RLP.encode([\r\n                FEE_DELEGATED_VALUE_TRANSFER_MEMO_TYPE_TAG,\r\n                Bytes.fromNat(nonce),\r\n                Bytes.fromNat(gasPrice),\r\n                Bytes.fromNat(gas),\r\n                to.toLowerCase(),\r\n                Bytes.fromNat(value),\r\n                from.toLowerCase(),\r\n                data,\r\n            ]),\r\n            transaction.feePayer.toLowerCase(),\r\n            Bytes.fromNat(transaction.chainId || '0x1'),\r\n            '0x',\r\n            '0x',\r\n        ])\r\n    }\r\n    return RLP.encode([\r\n        RLP.encode([\r\n            FEE_DELEGATED_VALUE_TRANSFER_MEMO_TYPE_TAG,\r\n            Bytes.fromNat(transaction.nonce),\r\n            Bytes.fromNat(transaction.gasPrice),\r\n            Bytes.fromNat(transaction.gas),\r\n            transaction.to.toLowerCase(),\r\n            Bytes.fromNat(transaction.value),\r\n            transaction.from.toLowerCase(),\r\n            transaction.data,\r\n        ]),\r\n        Bytes.fromNat(transaction.chainId || '0x1'),\r\n        '0x',\r\n        '0x',\r\n    ])\r\n}\r\n\r\nfunction rlpEncodeForFeeDelegatedValueTransferMemoWithRatio(transaction) {\r\n    if (transaction.senderRawTransaction) {\r\n        // fee payer rlp encoding.\r\n        const typeDetacehdRawTransaction = `0x${transaction.senderRawTransaction.slice(4)}`\r\n\r\n        // eslint-disable-next-line no-unused-vars\r\n        const [nonce, gasPrice, gas, to, value, from, data, feeRatio, [[v, r, s]]] = utils.rlpDecode(typeDetacehdRawTransaction)\r\n\r\n        return RLP.encode([\r\n            RLP.encode([\r\n                FEE_DELEGATED_VALUE_TRANSFER_MEMO_WITH_RATIO_TYPE_TAG,\r\n                Bytes.fromNat(nonce),\r\n                Bytes.fromNat(gasPrice),\r\n                Bytes.fromNat(gas),\r\n                to.toLowerCase(),\r\n                Bytes.fromNat(value),\r\n                from.toLowerCase(),\r\n                data,\r\n                Bytes.fromNat(feeRatio),\r\n            ]),\r\n            transaction.feePayer.toLowerCase(),\r\n            Bytes.fromNat(transaction.chainId || '0x1'),\r\n            '0x',\r\n            '0x',\r\n        ])\r\n    }\r\n    return RLP.encode([\r\n        RLP.encode([\r\n            FEE_DELEGATED_VALUE_TRANSFER_MEMO_WITH_RATIO_TYPE_TAG,\r\n            Bytes.fromNat(transaction.nonce),\r\n            Bytes.fromNat(transaction.gasPrice),\r\n            Bytes.fromNat(transaction.gas),\r\n            transaction.to.toLowerCase(),\r\n            Bytes.fromNat(transaction.value),\r\n            transaction.from.toLowerCase(),\r\n            transaction.data,\r\n            Bytes.fromNat(transaction.feeRatio),\r\n        ]),\r\n        Bytes.fromNat(transaction.chainId || '0x1'),\r\n        '0x',\r\n        '0x',\r\n    ])\r\n}\r\n\r\nmodule.exports = {\r\n    rlpEncodeForValueTransfer,\r\n    rlpEncodeForValueTransferMemo,\r\n    rlpEncodeForFeeDelegatedValueTransfer,\r\n    rlpEncodeForFeeDelegatedValueTransferWithRatio,\r\n    rlpEncodeForFeeDelegatedValueTransferMemo,\r\n    rlpEncodeForFeeDelegatedValueTransferMemoWithRatio,\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}