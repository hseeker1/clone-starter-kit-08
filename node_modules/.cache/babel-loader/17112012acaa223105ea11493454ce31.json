{"ast":null,"code":"var _slicedToArray = require(\"C:\\\\Users\\\\User\\\\Documents\\\\clone-starter-kit-08\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/slicedToArray\");\n\n/*\r\n    Copyright 2018 The caver-js Authors\r\n    This file is part of the caver-js library.\r\n\r\n    The caver-js library is free software: you can redistribute it and/or modify\r\n    it under the terms of the GNU Lesser General Public License as published by\r\n    the Free Software Foundation, either version 3 of the License, or\r\n    (at your option) any later version.\r\n\r\n    The caver-js library is distributed in the hope that it will be useful,\r\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\r\n    GNU Lesser General Public License for more details.\r\n\r\n    You should have received a copy of the GNU Lesser General Public License\r\n    along with the caver-js. If not, see <http://www.gnu.org/licenses/>.\r\n*/\nvar _ = require('lodash');\n\nvar Method = require('../../caver-core-method');\n\nvar formatters = require('../../caver-core-helpers').formatters;\n\nvar payloadTransformer = require('../../caver-core-helpers').payloadTransformer; // For indexing\n\n\nvar rpcCallToMethodAsObject = {}; // Wrap rpc json through 'Method'\n\nvar rpcCallToMethod = require('../../../rpc.json').map(function (rpcCall) {\n  rpcCall.inputFormatter = rpcCall.inputFormatter && _.map(rpcCall.inputFormatter, function (formatterStr) {\n    return formatters[formatterStr];\n  });\n  rpcCall.outputFormatter = formatters[rpcCall.outputFormatter];\n  rpcCall.transformPayload = payloadTransformer[rpcCall.transformPayload];\n\n  var _rpcCall$call$split = rpcCall.call.split('_'),\n      _rpcCall$call$split2 = _slicedToArray(_rpcCall$call$split, 2),\n      callLabel = _rpcCall$call$split2[0],\n      callName = _rpcCall$call$split2[1];\n\n  if (callName) {\n    if (!rpcCallToMethodAsObject[callLabel]) {\n      rpcCallToMethodAsObject[callLabel] = {};\n    }\n\n    rpcCallToMethodAsObject[callLabel][rpcCall.name] = new Method(rpcCall);\n  }\n\n  if (!rpcCallToMethodAsObject[rpcCall.name]) {\n    return rpcCallToMethodAsObject[rpcCall.name] = new Method(rpcCall);\n  }\n}).filter(function (a) {\n  return !!a;\n});\n\nmodule.exports = rpcCallToMethod;\nmodule.exports.rpc = rpcCallToMethodAsObject;","map":{"version":3,"names":["_","require","Method","formatters","payloadTransformer","rpcCallToMethodAsObject","rpcCallToMethod","map","rpcCall","inputFormatter","formatterStr","outputFormatter","transformPayload","call","split","callLabel","callName","name","filter","a","module","exports","rpc"],"sources":["C:/Users/User/Documents/clone-starter-kit-08/node_modules/caver-js/packages/caver-rtm/src/index.js"],"sourcesContent":["/*\r\n    Copyright 2018 The caver-js Authors\r\n    This file is part of the caver-js library.\r\n\r\n    The caver-js library is free software: you can redistribute it and/or modify\r\n    it under the terms of the GNU Lesser General Public License as published by\r\n    the Free Software Foundation, either version 3 of the License, or\r\n    (at your option) any later version.\r\n\r\n    The caver-js library is distributed in the hope that it will be useful,\r\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\r\n    GNU Lesser General Public License for more details.\r\n\r\n    You should have received a copy of the GNU Lesser General Public License\r\n    along with the caver-js. If not, see <http://www.gnu.org/licenses/>.\r\n*/\r\n\r\nconst _ = require('lodash')\r\nconst Method = require('../../caver-core-method')\r\nconst formatters = require('../../caver-core-helpers').formatters\r\nconst payloadTransformer = require('../../caver-core-helpers').payloadTransformer\r\n\r\n// For indexing\r\nconst rpcCallToMethodAsObject = {}\r\n\r\n// Wrap rpc json through 'Method'\r\nconst rpcCallToMethod = require('../../../rpc.json')\r\n    .map(rpcCall => {\r\n        rpcCall.inputFormatter = rpcCall.inputFormatter && _.map(rpcCall.inputFormatter, formatterStr => formatters[formatterStr])\r\n        rpcCall.outputFormatter = formatters[rpcCall.outputFormatter]\r\n        rpcCall.transformPayload = payloadTransformer[rpcCall.transformPayload]\r\n\r\n        const [callLabel, callName] = rpcCall.call.split('_')\r\n\r\n        if (callName) {\r\n            if (!rpcCallToMethodAsObject[callLabel]) {\r\n                rpcCallToMethodAsObject[callLabel] = {}\r\n            }\r\n            rpcCallToMethodAsObject[callLabel][rpcCall.name] = new Method(rpcCall)\r\n        }\r\n\r\n        if (!rpcCallToMethodAsObject[rpcCall.name]) {\r\n            return (rpcCallToMethodAsObject[rpcCall.name] = new Method(rpcCall))\r\n        }\r\n    })\r\n    .filter(a => !!a)\r\n\r\nmodule.exports = rpcCallToMethod\r\nmodule.exports.rpc = rpcCallToMethodAsObject\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAMA,CAAC,GAAGC,OAAO,CAAC,QAAD,CAAjB;;AACA,IAAMC,MAAM,GAAGD,OAAO,CAAC,yBAAD,CAAtB;;AACA,IAAME,UAAU,GAAGF,OAAO,CAAC,0BAAD,CAAP,CAAoCE,UAAvD;;AACA,IAAMC,kBAAkB,GAAGH,OAAO,CAAC,0BAAD,CAAP,CAAoCG,kBAA/D,C,CAEA;;;AACA,IAAMC,uBAAuB,GAAG,EAAhC,C,CAEA;;AACA,IAAMC,eAAe,GAAGL,OAAO,CAAC,mBAAD,CAAP,CACnBM,GADmB,CACf,UAAAC,OAAO,EAAI;EACZA,OAAO,CAACC,cAAR,GAAyBD,OAAO,CAACC,cAAR,IAA0BT,CAAC,CAACO,GAAF,CAAMC,OAAO,CAACC,cAAd,EAA8B,UAAAC,YAAY;IAAA,OAAIP,UAAU,CAACO,YAAD,CAAd;EAAA,CAA1C,CAAnD;EACAF,OAAO,CAACG,eAAR,GAA0BR,UAAU,CAACK,OAAO,CAACG,eAAT,CAApC;EACAH,OAAO,CAACI,gBAAR,GAA2BR,kBAAkB,CAACI,OAAO,CAACI,gBAAT,CAA7C;;EAEA,0BAA8BJ,OAAO,CAACK,IAAR,CAAaC,KAAb,CAAmB,GAAnB,CAA9B;EAAA;EAAA,IAAOC,SAAP;EAAA,IAAkBC,QAAlB;;EAEA,IAAIA,QAAJ,EAAc;IACV,IAAI,CAACX,uBAAuB,CAACU,SAAD,CAA5B,EAAyC;MACrCV,uBAAuB,CAACU,SAAD,CAAvB,GAAqC,EAArC;IACH;;IACDV,uBAAuB,CAACU,SAAD,CAAvB,CAAmCP,OAAO,CAACS,IAA3C,IAAmD,IAAIf,MAAJ,CAAWM,OAAX,CAAnD;EACH;;EAED,IAAI,CAACH,uBAAuB,CAACG,OAAO,CAACS,IAAT,CAA5B,EAA4C;IACxC,OAAQZ,uBAAuB,CAACG,OAAO,CAACS,IAAT,CAAvB,GAAwC,IAAIf,MAAJ,CAAWM,OAAX,CAAhD;EACH;AACJ,CAlBmB,EAmBnBU,MAnBmB,CAmBZ,UAAAC,CAAC;EAAA,OAAI,CAAC,CAACA,CAAN;AAAA,CAnBW,CAAxB;;AAqBAC,MAAM,CAACC,OAAP,GAAiBf,eAAjB;AACAc,MAAM,CAACC,OAAP,CAAeC,GAAf,GAAqBjB,uBAArB"},"metadata":{},"sourceType":"script"}