{"ast":null,"code":"/*\r\n    Copyright 2020 The caver-js Authors\r\n    This file is part of the caver-js library.\r\n\r\n    The caver-js library is free software: you can redistribute it and/or modify\r\n    it under the terms of the GNU Lesser General Public License as published by\r\n    the Free Software Foundation, either version 3 of the License, or\r\n    (at your option) any later version.\r\n\r\n    The caver-js library is distributed in the hope that it will be useful,\r\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\r\n    GNU Lesser General Public License for more details.\r\n\r\n    You should have received a copy of the GNU Lesser General Public License\r\n    along with the caver-js. If not, see <http://www.gnu.org/licenses/>.\r\n*/\nconst Klay = require('./klay');\n\nconst Net = require('./net');\n\nconst Governance = require('./governance');\n\nconst core = require('../../caver-core');\n/**\r\n * A class that manages RPC call classes supported by caver.\r\n * @hideconstructor\r\n * @class\r\n */\n\n\nclass RPC {\n  constructor() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    const _this = this; // sets _requestmanager\n\n\n    core.packageInit(this, args); // overwrite package setRequestManager\n\n    const setRequestManager = this.setRequestManager;\n\n    this.setRequestManager = function (manager) {\n      setRequestManager(manager);\n\n      _this.klay.setRequestManager(manager);\n\n      _this.net.setRequestManager(manager);\n\n      _this.governance.setRequestManager(manager);\n\n      return true;\n    }; // overwrite setProvider\n\n\n    const setProvider = this.setProvider;\n\n    this.setProvider = function () {\n      setProvider.apply(_this, arguments);\n\n      _this.setRequestManager(_this._requestManager);\n    };\n    /** @type {Klay} */\n\n\n    this.klay = new Klay(this);\n    /** @type {Net} */\n\n    this.net = new Net(this);\n    /** @type {Governance} */\n\n    this.governance = new Governance(this);\n  }\n\n}\n\nmodule.exports = RPC;","map":{"version":3,"names":["Klay","require","Net","Governance","core","RPC","constructor","args","_this","packageInit","setRequestManager","manager","klay","net","governance","setProvider","apply","arguments","_requestManager","module","exports"],"sources":["C:/Users/User/Documents/clone-starter-kit-08/node_modules/caver-js/packages/caver-rpc/src/index.js"],"sourcesContent":["/*\r\n    Copyright 2020 The caver-js Authors\r\n    This file is part of the caver-js library.\r\n\r\n    The caver-js library is free software: you can redistribute it and/or modify\r\n    it under the terms of the GNU Lesser General Public License as published by\r\n    the Free Software Foundation, either version 3 of the License, or\r\n    (at your option) any later version.\r\n\r\n    The caver-js library is distributed in the hope that it will be useful,\r\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\r\n    GNU Lesser General Public License for more details.\r\n\r\n    You should have received a copy of the GNU Lesser General Public License\r\n    along with the caver-js. If not, see <http://www.gnu.org/licenses/>.\r\n*/\r\n\r\nconst Klay = require('./klay')\r\nconst Net = require('./net')\r\nconst Governance = require('./governance')\r\nconst core = require('../../caver-core')\r\n\r\n/**\r\n * A class that manages RPC call classes supported by caver.\r\n * @hideconstructor\r\n * @class\r\n */\r\nclass RPC {\r\n    constructor(...args) {\r\n        const _this = this\r\n\r\n        // sets _requestmanager\r\n        core.packageInit(this, args)\r\n\r\n        // overwrite package setRequestManager\r\n        const setRequestManager = this.setRequestManager\r\n        this.setRequestManager = function(manager) {\r\n            setRequestManager(manager)\r\n\r\n            _this.klay.setRequestManager(manager)\r\n            _this.net.setRequestManager(manager)\r\n            _this.governance.setRequestManager(manager)\r\n\r\n            return true\r\n        }\r\n\r\n        // overwrite setProvider\r\n        const setProvider = this.setProvider\r\n        this.setProvider = function() {\r\n            setProvider.apply(_this, arguments)\r\n            _this.setRequestManager(_this._requestManager)\r\n        }\r\n\r\n        /** @type {Klay} */\r\n        this.klay = new Klay(this)\r\n\r\n        /** @type {Net} */\r\n        this.net = new Net(this)\r\n\r\n        /** @type {Governance} */\r\n        this.governance = new Governance(this)\r\n    }\r\n}\r\n\r\nmodule.exports = RPC\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAMA,IAAI,GAAGC,OAAO,CAAC,QAAD,CAApB;;AACA,MAAMC,GAAG,GAAGD,OAAO,CAAC,OAAD,CAAnB;;AACA,MAAME,UAAU,GAAGF,OAAO,CAAC,cAAD,CAA1B;;AACA,MAAMG,IAAI,GAAGH,OAAO,CAAC,kBAAD,CAApB;AAEA;AACA;AACA;AACA;AACA;;;AACA,MAAMI,GAAN,CAAU;EACNC,WAAW,GAAU;IAAA,kCAANC,IAAM;MAANA,IAAM;IAAA;;IACjB,MAAMC,KAAK,GAAG,IAAd,CADiB,CAGjB;;;IACAJ,IAAI,CAACK,WAAL,CAAiB,IAAjB,EAAuBF,IAAvB,EAJiB,CAMjB;;IACA,MAAMG,iBAAiB,GAAG,KAAKA,iBAA/B;;IACA,KAAKA,iBAAL,GAAyB,UAASC,OAAT,EAAkB;MACvCD,iBAAiB,CAACC,OAAD,CAAjB;;MAEAH,KAAK,CAACI,IAAN,CAAWF,iBAAX,CAA6BC,OAA7B;;MACAH,KAAK,CAACK,GAAN,CAAUH,iBAAV,CAA4BC,OAA5B;;MACAH,KAAK,CAACM,UAAN,CAAiBJ,iBAAjB,CAAmCC,OAAnC;;MAEA,OAAO,IAAP;IACH,CARD,CARiB,CAkBjB;;;IACA,MAAMI,WAAW,GAAG,KAAKA,WAAzB;;IACA,KAAKA,WAAL,GAAmB,YAAW;MAC1BA,WAAW,CAACC,KAAZ,CAAkBR,KAAlB,EAAyBS,SAAzB;;MACAT,KAAK,CAACE,iBAAN,CAAwBF,KAAK,CAACU,eAA9B;IACH,CAHD;IAKA;;;IACA,KAAKN,IAAL,GAAY,IAAIZ,IAAJ,CAAS,IAAT,CAAZ;IAEA;;IACA,KAAKa,GAAL,GAAW,IAAIX,GAAJ,CAAQ,IAAR,CAAX;IAEA;;IACA,KAAKY,UAAL,GAAkB,IAAIX,UAAJ,CAAe,IAAf,CAAlB;EACH;;AAlCK;;AAqCVgB,MAAM,CAACC,OAAP,GAAiBf,GAAjB"},"metadata":{},"sourceType":"script"}