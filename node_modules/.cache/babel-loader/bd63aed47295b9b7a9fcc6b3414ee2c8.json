{"ast":null,"code":"/*\r\n    Modifications copyright 2018 The caver-js Authors\r\n    This file is part of web3.js.\r\n\r\n    web3.js is free software: you can redistribute it and/or modify\r\n    it under the terms of the GNU Lesser General Public License as published by\r\n    the Free Software Foundation, either version 3 of the License, or\r\n    (at your option) any later version.\r\n\r\n    web3.js is distributed in the hope that it will be useful,\r\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n    GNU Lesser General Public License for more details.\r\n\r\n    You should have received a copy of the GNU Lesser General Public License\r\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n    This file is derived from web3.js/packages/web3-core-requestmanager/src/jsonrpc.js (2019/06/12).\r\n    Modified and improved for the caver-js development.\r\n*/\n\n/** @file jsonrpc.js\r\n * @authors:\r\n *   Fabian Vogelsteller <fabian@ethereum.org>\r\n *   Marek Kotewicz <marek@ethdev.com>\r\n *   Aaron Kumavis <aaron@kumavis.me>\r\n * @date 2015\r\n */\n// Initialize Jsonrpc as a simple object with utility functions.\nvar Jsonrpc = {\n  messageId: 0\n};\n/**\r\n * Should be called to valid json create payload object\r\n *\r\n * @method toPayload\r\n * @param {Function} method of jsonrpc call, required\r\n * @param {Array} params, an array of method params, optional\r\n * @returns {Object} valid jsonrpc payload object\r\n */\n\nJsonrpc.toPayload = function (method, params) {\n  if (!method) {\n    throw new Error(\"JSONRPC method should be specified for params: \\\"\".concat(JSON.stringify(params), \"\\\"!\"));\n  }\n\n  Jsonrpc.messageId++;\n  return {\n    jsonrpc: '2.0',\n    id: Jsonrpc.messageId,\n    method: method,\n    params: params || []\n  };\n};\n\nJsonrpc.isValidResponse = function (response) {\n  return Array.isArray(response) ? response.every(validateSingleMessage) : validateSingleMessage(response);\n\n  function validateSingleMessage(message) {\n    return !!message && !message.error && message.jsonrpc === '2.0' && (typeof message.id === 'number' || typeof message.id === 'string') && message.result !== undefined; // only undefined is not valid json object\n  }\n};\n\nJsonrpc.toBatchPayload = function (messages) {\n  return messages.map(function (message) {\n    return Jsonrpc.toPayload(message.method, message.params);\n  });\n};\n\nmodule.exports = Jsonrpc;","map":{"version":3,"names":["Jsonrpc","messageId","toPayload","method","params","Error","JSON","stringify","jsonrpc","id","isValidResponse","response","Array","isArray","every","validateSingleMessage","message","error","result","undefined","toBatchPayload","messages","map","module","exports"],"sources":["C:/Users/User/Documents/clone-starter-kit-08/node_modules/caver-js/packages/caver-core-requestmanager/src/jsonrpc.js"],"sourcesContent":["/*\r\n    Modifications copyright 2018 The caver-js Authors\r\n    This file is part of web3.js.\r\n\r\n    web3.js is free software: you can redistribute it and/or modify\r\n    it under the terms of the GNU Lesser General Public License as published by\r\n    the Free Software Foundation, either version 3 of the License, or\r\n    (at your option) any later version.\r\n\r\n    web3.js is distributed in the hope that it will be useful,\r\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n    GNU Lesser General Public License for more details.\r\n\r\n    You should have received a copy of the GNU Lesser General Public License\r\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n    This file is derived from web3.js/packages/web3-core-requestmanager/src/jsonrpc.js (2019/06/12).\r\n    Modified and improved for the caver-js development.\r\n*/\r\n/** @file jsonrpc.js\r\n * @authors:\r\n *   Fabian Vogelsteller <fabian@ethereum.org>\r\n *   Marek Kotewicz <marek@ethdev.com>\r\n *   Aaron Kumavis <aaron@kumavis.me>\r\n * @date 2015\r\n */\r\n\r\n// Initialize Jsonrpc as a simple object with utility functions.\r\nconst Jsonrpc = {\r\n    messageId: 0,\r\n}\r\n\r\n/**\r\n * Should be called to valid json create payload object\r\n *\r\n * @method toPayload\r\n * @param {Function} method of jsonrpc call, required\r\n * @param {Array} params, an array of method params, optional\r\n * @returns {Object} valid jsonrpc payload object\r\n */\r\nJsonrpc.toPayload = function(method, params) {\r\n    if (!method) {\r\n        throw new Error(`JSONRPC method should be specified for params: \"${JSON.stringify(params)}\"!`)\r\n    }\r\n\r\n    Jsonrpc.messageId++\r\n\r\n    return {\r\n        jsonrpc: '2.0',\r\n        id: Jsonrpc.messageId,\r\n        method: method,\r\n        params: params || [],\r\n    }\r\n}\r\n\r\nJsonrpc.isValidResponse = function(response) {\r\n    return Array.isArray(response) ? response.every(validateSingleMessage) : validateSingleMessage(response)\r\n\r\n    function validateSingleMessage(message) {\r\n        return (\r\n            !!message &&\r\n            !message.error &&\r\n            message.jsonrpc === '2.0' &&\r\n            (typeof message.id === 'number' || typeof message.id === 'string') &&\r\n            message.result !== undefined\r\n        ) // only undefined is not valid json object\r\n    }\r\n}\r\n\r\nJsonrpc.toBatchPayload = function(messages) {\r\n    return messages.map(function(message) {\r\n        return Jsonrpc.toPayload(message.method, message.params)\r\n    })\r\n}\r\n\r\nmodule.exports = Jsonrpc\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,IAAMA,OAAO,GAAG;EACZC,SAAS,EAAE;AADC,CAAhB;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAD,OAAO,CAACE,SAAR,GAAoB,UAASC,MAAT,EAAiBC,MAAjB,EAAyB;EACzC,IAAI,CAACD,MAAL,EAAa;IACT,MAAM,IAAIE,KAAJ,4DAA6DC,IAAI,CAACC,SAAL,CAAeH,MAAf,CAA7D,SAAN;EACH;;EAEDJ,OAAO,CAACC,SAAR;EAEA,OAAO;IACHO,OAAO,EAAE,KADN;IAEHC,EAAE,EAAET,OAAO,CAACC,SAFT;IAGHE,MAAM,EAAEA,MAHL;IAIHC,MAAM,EAAEA,MAAM,IAAI;EAJf,CAAP;AAMH,CAbD;;AAeAJ,OAAO,CAACU,eAAR,GAA0B,UAASC,QAAT,EAAmB;EACzC,OAAOC,KAAK,CAACC,OAAN,CAAcF,QAAd,IAA0BA,QAAQ,CAACG,KAAT,CAAeC,qBAAf,CAA1B,GAAkEA,qBAAqB,CAACJ,QAAD,CAA9F;;EAEA,SAASI,qBAAT,CAA+BC,OAA/B,EAAwC;IACpC,OACI,CAAC,CAACA,OAAF,IACA,CAACA,OAAO,CAACC,KADT,IAEAD,OAAO,CAACR,OAAR,KAAoB,KAFpB,KAGC,OAAOQ,OAAO,CAACP,EAAf,KAAsB,QAAtB,IAAkC,OAAOO,OAAO,CAACP,EAAf,KAAsB,QAHzD,KAIAO,OAAO,CAACE,MAAR,KAAmBC,SALvB,CADoC,CAOlC;EACL;AACJ,CAZD;;AAcAnB,OAAO,CAACoB,cAAR,GAAyB,UAASC,QAAT,EAAmB;EACxC,OAAOA,QAAQ,CAACC,GAAT,CAAa,UAASN,OAAT,EAAkB;IAClC,OAAOhB,OAAO,CAACE,SAAR,CAAkBc,OAAO,CAACb,MAA1B,EAAkCa,OAAO,CAACZ,MAA1C,CAAP;EACH,CAFM,CAAP;AAGH,CAJD;;AAMAmB,MAAM,CAACC,OAAP,GAAiBxB,OAAjB"},"metadata":{},"sourceType":"script"}