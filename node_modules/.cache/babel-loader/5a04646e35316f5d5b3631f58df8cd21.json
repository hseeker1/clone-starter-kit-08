{"ast":null,"code":"/*\r\n    Copyright 2018 The caver-js Authors\r\n    This file is part of the caver-js library.\r\n\r\n    The caver-js library is free software: you can redistribute it and/or modify\r\n    it under the terms of the GNU Lesser General Public License as published by\r\n    the Free Software Foundation, either version 3 of the License, or\r\n    (at your option) any later version.\r\n\r\n    The caver-js library is distributed in the hope that it will be useful,\r\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\r\n    GNU Lesser General Public License for more details.\r\n\r\n    You should have received a copy of the GNU Lesser General Public License\r\n    along with the caver-js. If not, see <http://www.gnu.org/licenses/>.\r\n*/\nconst RLP = require('eth-lib/lib/rlp');\n\nconst Bytes = require('eth-lib/lib/bytes');\n\nconst utils = require('../../../../caver-utils');\n\nconst helpers = require('../../../../caver-core-helpers');\n\nconst {\n  SMART_CONTRACT_DEPLOY_TYPE_TAG,\n  SMART_CONTRACT_EXECUTION_TYPE_TAG,\n  FEE_DELEGATED_SMART_CONTRACT_EXECUTION_TYPE_TAG,\n  FEE_DELEGATED_SMART_CONTRACT_DEPLOY_TYPE_TAG,\n  FEE_DELEGATED_SMART_CONTRACT_DEPLOY_WITH_RATIO_TYPE_TAG,\n  FEE_DELEGATED_SMART_CONTRACT_EXECUTION_WITH_RATIO_TYPE_TAG,\n  CODE_FORMAT_EVM_TAG\n} = helpers.constants;\n\nfunction getCodeFormatTag(codeFormat) {\n  switch (codeFormat) {\n    case 0:\n    case 'EVM':\n      return CODE_FORMAT_EVM_TAG;\n  }\n\n  return CODE_FORMAT_EVM_TAG;\n}\n\nfunction rlpEncodeForContractDeploy(transaction) {\n  return RLP.encode([RLP.encode([SMART_CONTRACT_DEPLOY_TYPE_TAG, Bytes.fromNat(transaction.nonce), Bytes.fromNat(transaction.gasPrice), Bytes.fromNat(transaction.gas), transaction.to.toLowerCase(), Bytes.fromNat(transaction.value), transaction.from.toLowerCase(), transaction.data, Bytes.fromNat(transaction.humanReadable === true ? '0x1' : '0x0'), Bytes.fromNat(getCodeFormatTag(transaction.codeFormat))]), Bytes.fromNat(transaction.chainId || '0x1'), '0x', '0x']);\n}\n\nfunction rlpEncodeForContractExecution(transaction) {\n  return RLP.encode([RLP.encode([SMART_CONTRACT_EXECUTION_TYPE_TAG, Bytes.fromNat(transaction.nonce), Bytes.fromNat(transaction.gasPrice), Bytes.fromNat(transaction.gas), transaction.to.toLowerCase(), Bytes.fromNat(transaction.value || '0x0'), transaction.from.toLowerCase(), transaction.data]), Bytes.fromNat(transaction.chainId || '0x1'), '0x', '0x']);\n}\n\nfunction rlpEncodeForFeeDelegatedSmartContractDeploy(transaction) {\n  if (transaction.senderRawTransaction) {\n    const typeDetacehdRawTransaction = `0x${transaction.senderRawTransaction.slice(4)}`; // eslint-disable-next-line no-unused-vars\n\n    const [nonce, gasPrice, gas, to, value, from, data, humanReadable, codeFormat, [[v, r, s]]] = utils.rlpDecode(typeDetacehdRawTransaction);\n    return RLP.encode([RLP.encode([FEE_DELEGATED_SMART_CONTRACT_DEPLOY_TYPE_TAG, Bytes.fromNat(nonce), Bytes.fromNat(gasPrice), Bytes.fromNat(gas), to.toLowerCase(), Bytes.fromNat(value), from.toLowerCase(), data, humanReadable, codeFormat]), transaction.feePayer.toLowerCase(), Bytes.fromNat(transaction.chainId || '0x1'), '0x', '0x']);\n  }\n\n  return RLP.encode([RLP.encode([FEE_DELEGATED_SMART_CONTRACT_DEPLOY_TYPE_TAG, Bytes.fromNat(transaction.nonce), Bytes.fromNat(transaction.gasPrice), Bytes.fromNat(transaction.gas), transaction.to.toLowerCase(), Bytes.fromNat(transaction.value), transaction.from.toLowerCase(), transaction.data, Bytes.fromNat(transaction.humanReadable === true ? '0x1' : '0x0'), Bytes.fromNat(getCodeFormatTag(transaction.codeFormat))]), Bytes.fromNat(transaction.chainId || '0x1'), '0x', '0x']);\n}\n\nfunction rlpEncodeForFeeDelegatedSmartContractDeployWithRatio(transaction) {\n  if (transaction.senderRawTransaction) {\n    const typeDetacehdRawTransaction = `0x${transaction.senderRawTransaction.slice(4)}`; // eslint-disable-next-line no-unused-vars\n\n    const [nonce, gasPrice, gas, to, value, from, data, humanReadable, feeRatio, codeFormat, [[v, r, s]]] = utils.rlpDecode(typeDetacehdRawTransaction);\n    return RLP.encode([RLP.encode([FEE_DELEGATED_SMART_CONTRACT_DEPLOY_WITH_RATIO_TYPE_TAG, Bytes.fromNat(nonce), Bytes.fromNat(gasPrice), Bytes.fromNat(gas), to.toLowerCase(), Bytes.fromNat(value), from.toLowerCase(), data, humanReadable, feeRatio, codeFormat]), transaction.feePayer.toLowerCase(), Bytes.fromNat(transaction.chainId || '0x1'), '0x', '0x']);\n  }\n\n  return RLP.encode([RLP.encode([FEE_DELEGATED_SMART_CONTRACT_DEPLOY_WITH_RATIO_TYPE_TAG, Bytes.fromNat(transaction.nonce), Bytes.fromNat(transaction.gasPrice), Bytes.fromNat(transaction.gas), transaction.to.toLowerCase(), Bytes.fromNat(transaction.value), transaction.from.toLowerCase(), transaction.data, Bytes.fromNat(transaction.humanReadable === true ? '0x1' : '0x0'), Bytes.fromNat(transaction.feeRatio), Bytes.fromNat(getCodeFormatTag(transaction.codeFormat))]), Bytes.fromNat(transaction.chainId || '0x1'), '0x', '0x']);\n}\n\nfunction rlpEncodeForFeeDelegatedSmartContractExecution(transaction) {\n  if (transaction.senderRawTransaction) {\n    const typeDetacehdRawTransaction = `0x${transaction.senderRawTransaction.slice(4)}`; // eslint-disable-next-line no-unused-vars\n\n    const [nonce, gasPrice, gas, to, value, from, data, [[v, r, s]]] = utils.rlpDecode(typeDetacehdRawTransaction);\n    return RLP.encode([RLP.encode([FEE_DELEGATED_SMART_CONTRACT_EXECUTION_TYPE_TAG, Bytes.fromNat(nonce), Bytes.fromNat(gasPrice), Bytes.fromNat(gas), to.toLowerCase(), Bytes.fromNat(value), from.toLowerCase(), data]), transaction.feePayer.toLowerCase(), Bytes.fromNat(transaction.chainId || '0x1'), '0x', '0x']);\n  }\n\n  return RLP.encode([RLP.encode([FEE_DELEGATED_SMART_CONTRACT_EXECUTION_TYPE_TAG, Bytes.fromNat(transaction.nonce), Bytes.fromNat(transaction.gasPrice), Bytes.fromNat(transaction.gas), transaction.to.toLowerCase(), Bytes.fromNat(transaction.value || '0x0'), transaction.from.toLowerCase(), transaction.data]), Bytes.fromNat(transaction.chainId || '0x1'), '0x', '0x']);\n}\n\nfunction rlpEncodeForFeeDelegatedSmartContractExecutionWithRatio(transaction) {\n  if (transaction.senderRawTransaction) {\n    const typeDetacehdRawTransaction = `0x${transaction.senderRawTransaction.slice(4)}`; // eslint-disable-next-line no-unused-vars\n\n    const [nonce, gasPrice, gas, to, value, from, data, feeRatio, [[v, r, s]]] = utils.rlpDecode(typeDetacehdRawTransaction);\n    return RLP.encode([RLP.encode([FEE_DELEGATED_SMART_CONTRACT_EXECUTION_WITH_RATIO_TYPE_TAG, Bytes.fromNat(nonce), Bytes.fromNat(gasPrice), Bytes.fromNat(gas), to.toLowerCase(), Bytes.fromNat(value), from.toLowerCase(), data, Bytes.fromNat(feeRatio)]), transaction.feePayer.toLowerCase(), Bytes.fromNat(transaction.chainId || '0x1'), '0x', '0x']);\n  }\n\n  return RLP.encode([RLP.encode([FEE_DELEGATED_SMART_CONTRACT_EXECUTION_WITH_RATIO_TYPE_TAG, Bytes.fromNat(transaction.nonce), Bytes.fromNat(transaction.gasPrice), Bytes.fromNat(transaction.gas), transaction.to.toLowerCase(), Bytes.fromNat(transaction.value || '0x0'), transaction.from.toLowerCase(), transaction.data, Bytes.fromNat(transaction.feeRatio)]), Bytes.fromNat(transaction.chainId || '0x1'), '0x', '0x']);\n}\n\nmodule.exports = {\n  rlpEncodeForContractDeploy,\n  rlpEncodeForFeeDelegatedSmartContractDeploy,\n  rlpEncodeForFeeDelegatedSmartContractDeployWithRatio,\n  rlpEncodeForContractExecution,\n  rlpEncodeForFeeDelegatedSmartContractExecution,\n  rlpEncodeForFeeDelegatedSmartContractExecutionWithRatio\n};","map":{"version":3,"names":["RLP","require","Bytes","utils","helpers","SMART_CONTRACT_DEPLOY_TYPE_TAG","SMART_CONTRACT_EXECUTION_TYPE_TAG","FEE_DELEGATED_SMART_CONTRACT_EXECUTION_TYPE_TAG","FEE_DELEGATED_SMART_CONTRACT_DEPLOY_TYPE_TAG","FEE_DELEGATED_SMART_CONTRACT_DEPLOY_WITH_RATIO_TYPE_TAG","FEE_DELEGATED_SMART_CONTRACT_EXECUTION_WITH_RATIO_TYPE_TAG","CODE_FORMAT_EVM_TAG","constants","getCodeFormatTag","codeFormat","rlpEncodeForContractDeploy","transaction","encode","fromNat","nonce","gasPrice","gas","to","toLowerCase","value","from","data","humanReadable","chainId","rlpEncodeForContractExecution","rlpEncodeForFeeDelegatedSmartContractDeploy","senderRawTransaction","typeDetacehdRawTransaction","slice","v","r","s","rlpDecode","feePayer","rlpEncodeForFeeDelegatedSmartContractDeployWithRatio","feeRatio","rlpEncodeForFeeDelegatedSmartContractExecution","rlpEncodeForFeeDelegatedSmartContractExecutionWithRatio","module","exports"],"sources":["C:/Users/User/Documents/clone-starter-kit-08/node_modules/caver-js/packages/caver-klay/caver-klay-accounts/src/transactionType/contract.js"],"sourcesContent":["/*\r\n    Copyright 2018 The caver-js Authors\r\n    This file is part of the caver-js library.\r\n\r\n    The caver-js library is free software: you can redistribute it and/or modify\r\n    it under the terms of the GNU Lesser General Public License as published by\r\n    the Free Software Foundation, either version 3 of the License, or\r\n    (at your option) any later version.\r\n\r\n    The caver-js library is distributed in the hope that it will be useful,\r\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\r\n    GNU Lesser General Public License for more details.\r\n\r\n    You should have received a copy of the GNU Lesser General Public License\r\n    along with the caver-js. If not, see <http://www.gnu.org/licenses/>.\r\n*/\r\n\r\nconst RLP = require('eth-lib/lib/rlp')\r\nconst Bytes = require('eth-lib/lib/bytes')\r\nconst utils = require('../../../../caver-utils')\r\nconst helpers = require('../../../../caver-core-helpers')\r\n\r\nconst {\r\n    SMART_CONTRACT_DEPLOY_TYPE_TAG,\r\n    SMART_CONTRACT_EXECUTION_TYPE_TAG,\r\n    FEE_DELEGATED_SMART_CONTRACT_EXECUTION_TYPE_TAG,\r\n    FEE_DELEGATED_SMART_CONTRACT_DEPLOY_TYPE_TAG,\r\n    FEE_DELEGATED_SMART_CONTRACT_DEPLOY_WITH_RATIO_TYPE_TAG,\r\n    FEE_DELEGATED_SMART_CONTRACT_EXECUTION_WITH_RATIO_TYPE_TAG,\r\n    CODE_FORMAT_EVM_TAG,\r\n} = helpers.constants\r\n\r\nfunction getCodeFormatTag(codeFormat) {\r\n    switch (codeFormat) {\r\n        case 0:\r\n        case 'EVM':\r\n            return CODE_FORMAT_EVM_TAG\r\n    }\r\n    return CODE_FORMAT_EVM_TAG\r\n}\r\n\r\nfunction rlpEncodeForContractDeploy(transaction) {\r\n    return RLP.encode([\r\n        RLP.encode([\r\n            SMART_CONTRACT_DEPLOY_TYPE_TAG,\r\n            Bytes.fromNat(transaction.nonce),\r\n            Bytes.fromNat(transaction.gasPrice),\r\n            Bytes.fromNat(transaction.gas),\r\n            transaction.to.toLowerCase(),\r\n            Bytes.fromNat(transaction.value),\r\n            transaction.from.toLowerCase(),\r\n            transaction.data,\r\n            Bytes.fromNat(transaction.humanReadable === true ? '0x1' : '0x0'),\r\n            Bytes.fromNat(getCodeFormatTag(transaction.codeFormat)),\r\n        ]),\r\n        Bytes.fromNat(transaction.chainId || '0x1'),\r\n        '0x',\r\n        '0x',\r\n    ])\r\n}\r\n\r\nfunction rlpEncodeForContractExecution(transaction) {\r\n    return RLP.encode([\r\n        RLP.encode([\r\n            SMART_CONTRACT_EXECUTION_TYPE_TAG,\r\n            Bytes.fromNat(transaction.nonce),\r\n            Bytes.fromNat(transaction.gasPrice),\r\n            Bytes.fromNat(transaction.gas),\r\n            transaction.to.toLowerCase(),\r\n            Bytes.fromNat(transaction.value || '0x0'),\r\n            transaction.from.toLowerCase(),\r\n            transaction.data,\r\n        ]),\r\n        Bytes.fromNat(transaction.chainId || '0x1'),\r\n        '0x',\r\n        '0x',\r\n    ])\r\n}\r\n\r\nfunction rlpEncodeForFeeDelegatedSmartContractDeploy(transaction) {\r\n    if (transaction.senderRawTransaction) {\r\n        const typeDetacehdRawTransaction = `0x${transaction.senderRawTransaction.slice(4)}`\r\n\r\n        // eslint-disable-next-line no-unused-vars\r\n        const [nonce, gasPrice, gas, to, value, from, data, humanReadable, codeFormat, [[v, r, s]]] = utils.rlpDecode(\r\n            typeDetacehdRawTransaction\r\n        )\r\n\r\n        return RLP.encode([\r\n            RLP.encode([\r\n                FEE_DELEGATED_SMART_CONTRACT_DEPLOY_TYPE_TAG,\r\n                Bytes.fromNat(nonce),\r\n                Bytes.fromNat(gasPrice),\r\n                Bytes.fromNat(gas),\r\n                to.toLowerCase(),\r\n                Bytes.fromNat(value),\r\n                from.toLowerCase(),\r\n                data,\r\n                humanReadable,\r\n                codeFormat,\r\n            ]),\r\n            transaction.feePayer.toLowerCase(),\r\n            Bytes.fromNat(transaction.chainId || '0x1'),\r\n            '0x',\r\n            '0x',\r\n        ])\r\n    }\r\n    return RLP.encode([\r\n        RLP.encode([\r\n            FEE_DELEGATED_SMART_CONTRACT_DEPLOY_TYPE_TAG,\r\n            Bytes.fromNat(transaction.nonce),\r\n            Bytes.fromNat(transaction.gasPrice),\r\n            Bytes.fromNat(transaction.gas),\r\n            transaction.to.toLowerCase(),\r\n            Bytes.fromNat(transaction.value),\r\n            transaction.from.toLowerCase(),\r\n            transaction.data,\r\n            Bytes.fromNat(transaction.humanReadable === true ? '0x1' : '0x0'),\r\n            Bytes.fromNat(getCodeFormatTag(transaction.codeFormat)),\r\n        ]),\r\n        Bytes.fromNat(transaction.chainId || '0x1'),\r\n        '0x',\r\n        '0x',\r\n    ])\r\n}\r\n\r\nfunction rlpEncodeForFeeDelegatedSmartContractDeployWithRatio(transaction) {\r\n    if (transaction.senderRawTransaction) {\r\n        const typeDetacehdRawTransaction = `0x${transaction.senderRawTransaction.slice(4)}`\r\n\r\n        // eslint-disable-next-line no-unused-vars\r\n        const [nonce, gasPrice, gas, to, value, from, data, humanReadable, feeRatio, codeFormat, [[v, r, s]]] = utils.rlpDecode(\r\n            typeDetacehdRawTransaction\r\n        )\r\n\r\n        return RLP.encode([\r\n            RLP.encode([\r\n                FEE_DELEGATED_SMART_CONTRACT_DEPLOY_WITH_RATIO_TYPE_TAG,\r\n                Bytes.fromNat(nonce),\r\n                Bytes.fromNat(gasPrice),\r\n                Bytes.fromNat(gas),\r\n                to.toLowerCase(),\r\n                Bytes.fromNat(value),\r\n                from.toLowerCase(),\r\n                data,\r\n                humanReadable,\r\n                feeRatio,\r\n                codeFormat,\r\n            ]),\r\n            transaction.feePayer.toLowerCase(),\r\n            Bytes.fromNat(transaction.chainId || '0x1'),\r\n            '0x',\r\n            '0x',\r\n        ])\r\n    }\r\n    return RLP.encode([\r\n        RLP.encode([\r\n            FEE_DELEGATED_SMART_CONTRACT_DEPLOY_WITH_RATIO_TYPE_TAG,\r\n            Bytes.fromNat(transaction.nonce),\r\n            Bytes.fromNat(transaction.gasPrice),\r\n            Bytes.fromNat(transaction.gas),\r\n            transaction.to.toLowerCase(),\r\n            Bytes.fromNat(transaction.value),\r\n            transaction.from.toLowerCase(),\r\n            transaction.data,\r\n            Bytes.fromNat(transaction.humanReadable === true ? '0x1' : '0x0'),\r\n            Bytes.fromNat(transaction.feeRatio),\r\n            Bytes.fromNat(getCodeFormatTag(transaction.codeFormat)),\r\n        ]),\r\n        Bytes.fromNat(transaction.chainId || '0x1'),\r\n        '0x',\r\n        '0x',\r\n    ])\r\n}\r\n\r\nfunction rlpEncodeForFeeDelegatedSmartContractExecution(transaction) {\r\n    if (transaction.senderRawTransaction) {\r\n        const typeDetacehdRawTransaction = `0x${transaction.senderRawTransaction.slice(4)}`\r\n\r\n        // eslint-disable-next-line no-unused-vars\r\n        const [nonce, gasPrice, gas, to, value, from, data, [[v, r, s]]] = utils.rlpDecode(typeDetacehdRawTransaction)\r\n\r\n        return RLP.encode([\r\n            RLP.encode([\r\n                FEE_DELEGATED_SMART_CONTRACT_EXECUTION_TYPE_TAG,\r\n                Bytes.fromNat(nonce),\r\n                Bytes.fromNat(gasPrice),\r\n                Bytes.fromNat(gas),\r\n                to.toLowerCase(),\r\n                Bytes.fromNat(value),\r\n                from.toLowerCase(),\r\n                data,\r\n            ]),\r\n            transaction.feePayer.toLowerCase(),\r\n            Bytes.fromNat(transaction.chainId || '0x1'),\r\n            '0x',\r\n            '0x',\r\n        ])\r\n    }\r\n    return RLP.encode([\r\n        RLP.encode([\r\n            FEE_DELEGATED_SMART_CONTRACT_EXECUTION_TYPE_TAG,\r\n            Bytes.fromNat(transaction.nonce),\r\n            Bytes.fromNat(transaction.gasPrice),\r\n            Bytes.fromNat(transaction.gas),\r\n            transaction.to.toLowerCase(),\r\n            Bytes.fromNat(transaction.value || '0x0'),\r\n            transaction.from.toLowerCase(),\r\n            transaction.data,\r\n        ]),\r\n        Bytes.fromNat(transaction.chainId || '0x1'),\r\n        '0x',\r\n        '0x',\r\n    ])\r\n}\r\n\r\nfunction rlpEncodeForFeeDelegatedSmartContractExecutionWithRatio(transaction) {\r\n    if (transaction.senderRawTransaction) {\r\n        const typeDetacehdRawTransaction = `0x${transaction.senderRawTransaction.slice(4)}`\r\n\r\n        // eslint-disable-next-line no-unused-vars\r\n        const [nonce, gasPrice, gas, to, value, from, data, feeRatio, [[v, r, s]]] = utils.rlpDecode(typeDetacehdRawTransaction)\r\n\r\n        return RLP.encode([\r\n            RLP.encode([\r\n                FEE_DELEGATED_SMART_CONTRACT_EXECUTION_WITH_RATIO_TYPE_TAG,\r\n                Bytes.fromNat(nonce),\r\n                Bytes.fromNat(gasPrice),\r\n                Bytes.fromNat(gas),\r\n                to.toLowerCase(),\r\n                Bytes.fromNat(value),\r\n                from.toLowerCase(),\r\n                data,\r\n                Bytes.fromNat(feeRatio),\r\n            ]),\r\n            transaction.feePayer.toLowerCase(),\r\n            Bytes.fromNat(transaction.chainId || '0x1'),\r\n            '0x',\r\n            '0x',\r\n        ])\r\n    }\r\n    return RLP.encode([\r\n        RLP.encode([\r\n            FEE_DELEGATED_SMART_CONTRACT_EXECUTION_WITH_RATIO_TYPE_TAG,\r\n            Bytes.fromNat(transaction.nonce),\r\n            Bytes.fromNat(transaction.gasPrice),\r\n            Bytes.fromNat(transaction.gas),\r\n            transaction.to.toLowerCase(),\r\n            Bytes.fromNat(transaction.value || '0x0'),\r\n            transaction.from.toLowerCase(),\r\n            transaction.data,\r\n            Bytes.fromNat(transaction.feeRatio),\r\n        ]),\r\n        Bytes.fromNat(transaction.chainId || '0x1'),\r\n        '0x',\r\n        '0x',\r\n    ])\r\n}\r\n\r\nmodule.exports = {\r\n    rlpEncodeForContractDeploy,\r\n    rlpEncodeForFeeDelegatedSmartContractDeploy,\r\n    rlpEncodeForFeeDelegatedSmartContractDeployWithRatio,\r\n\r\n    rlpEncodeForContractExecution,\r\n    rlpEncodeForFeeDelegatedSmartContractExecution,\r\n    rlpEncodeForFeeDelegatedSmartContractExecutionWithRatio,\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAMA,GAAG,GAAGC,OAAO,CAAC,iBAAD,CAAnB;;AACA,MAAMC,KAAK,GAAGD,OAAO,CAAC,mBAAD,CAArB;;AACA,MAAME,KAAK,GAAGF,OAAO,CAAC,yBAAD,CAArB;;AACA,MAAMG,OAAO,GAAGH,OAAO,CAAC,gCAAD,CAAvB;;AAEA,MAAM;EACFI,8BADE;EAEFC,iCAFE;EAGFC,+CAHE;EAIFC,4CAJE;EAKFC,uDALE;EAMFC,0DANE;EAOFC;AAPE,IAQFP,OAAO,CAACQ,SARZ;;AAUA,SAASC,gBAAT,CAA0BC,UAA1B,EAAsC;EAClC,QAAQA,UAAR;IACI,KAAK,CAAL;IACA,KAAK,KAAL;MACI,OAAOH,mBAAP;EAHR;;EAKA,OAAOA,mBAAP;AACH;;AAED,SAASI,0BAAT,CAAoCC,WAApC,EAAiD;EAC7C,OAAOhB,GAAG,CAACiB,MAAJ,CAAW,CACdjB,GAAG,CAACiB,MAAJ,CAAW,CACPZ,8BADO,EAEPH,KAAK,CAACgB,OAAN,CAAcF,WAAW,CAACG,KAA1B,CAFO,EAGPjB,KAAK,CAACgB,OAAN,CAAcF,WAAW,CAACI,QAA1B,CAHO,EAIPlB,KAAK,CAACgB,OAAN,CAAcF,WAAW,CAACK,GAA1B,CAJO,EAKPL,WAAW,CAACM,EAAZ,CAAeC,WAAf,EALO,EAMPrB,KAAK,CAACgB,OAAN,CAAcF,WAAW,CAACQ,KAA1B,CANO,EAOPR,WAAW,CAACS,IAAZ,CAAiBF,WAAjB,EAPO,EAQPP,WAAW,CAACU,IARL,EASPxB,KAAK,CAACgB,OAAN,CAAcF,WAAW,CAACW,aAAZ,KAA8B,IAA9B,GAAqC,KAArC,GAA6C,KAA3D,CATO,EAUPzB,KAAK,CAACgB,OAAN,CAAcL,gBAAgB,CAACG,WAAW,CAACF,UAAb,CAA9B,CAVO,CAAX,CADc,EAadZ,KAAK,CAACgB,OAAN,CAAcF,WAAW,CAACY,OAAZ,IAAuB,KAArC,CAbc,EAcd,IAdc,EAed,IAfc,CAAX,CAAP;AAiBH;;AAED,SAASC,6BAAT,CAAuCb,WAAvC,EAAoD;EAChD,OAAOhB,GAAG,CAACiB,MAAJ,CAAW,CACdjB,GAAG,CAACiB,MAAJ,CAAW,CACPX,iCADO,EAEPJ,KAAK,CAACgB,OAAN,CAAcF,WAAW,CAACG,KAA1B,CAFO,EAGPjB,KAAK,CAACgB,OAAN,CAAcF,WAAW,CAACI,QAA1B,CAHO,EAIPlB,KAAK,CAACgB,OAAN,CAAcF,WAAW,CAACK,GAA1B,CAJO,EAKPL,WAAW,CAACM,EAAZ,CAAeC,WAAf,EALO,EAMPrB,KAAK,CAACgB,OAAN,CAAcF,WAAW,CAACQ,KAAZ,IAAqB,KAAnC,CANO,EAOPR,WAAW,CAACS,IAAZ,CAAiBF,WAAjB,EAPO,EAQPP,WAAW,CAACU,IARL,CAAX,CADc,EAWdxB,KAAK,CAACgB,OAAN,CAAcF,WAAW,CAACY,OAAZ,IAAuB,KAArC,CAXc,EAYd,IAZc,EAad,IAbc,CAAX,CAAP;AAeH;;AAED,SAASE,2CAAT,CAAqDd,WAArD,EAAkE;EAC9D,IAAIA,WAAW,CAACe,oBAAhB,EAAsC;IAClC,MAAMC,0BAA0B,GAAI,KAAIhB,WAAW,CAACe,oBAAZ,CAAiCE,KAAjC,CAAuC,CAAvC,CAA0C,EAAlF,CADkC,CAGlC;;IACA,MAAM,CAACd,KAAD,EAAQC,QAAR,EAAkBC,GAAlB,EAAuBC,EAAvB,EAA2BE,KAA3B,EAAkCC,IAAlC,EAAwCC,IAAxC,EAA8CC,aAA9C,EAA6Db,UAA7D,EAAyE,CAAC,CAACoB,CAAD,EAAIC,CAAJ,EAAOC,CAAP,CAAD,CAAzE,IAAwFjC,KAAK,CAACkC,SAAN,CAC1FL,0BAD0F,CAA9F;IAIA,OAAOhC,GAAG,CAACiB,MAAJ,CAAW,CACdjB,GAAG,CAACiB,MAAJ,CAAW,CACPT,4CADO,EAEPN,KAAK,CAACgB,OAAN,CAAcC,KAAd,CAFO,EAGPjB,KAAK,CAACgB,OAAN,CAAcE,QAAd,CAHO,EAIPlB,KAAK,CAACgB,OAAN,CAAcG,GAAd,CAJO,EAKPC,EAAE,CAACC,WAAH,EALO,EAMPrB,KAAK,CAACgB,OAAN,CAAcM,KAAd,CANO,EAOPC,IAAI,CAACF,WAAL,EAPO,EAQPG,IARO,EASPC,aATO,EAUPb,UAVO,CAAX,CADc,EAadE,WAAW,CAACsB,QAAZ,CAAqBf,WAArB,EAbc,EAcdrB,KAAK,CAACgB,OAAN,CAAcF,WAAW,CAACY,OAAZ,IAAuB,KAArC,CAdc,EAed,IAfc,EAgBd,IAhBc,CAAX,CAAP;EAkBH;;EACD,OAAO5B,GAAG,CAACiB,MAAJ,CAAW,CACdjB,GAAG,CAACiB,MAAJ,CAAW,CACPT,4CADO,EAEPN,KAAK,CAACgB,OAAN,CAAcF,WAAW,CAACG,KAA1B,CAFO,EAGPjB,KAAK,CAACgB,OAAN,CAAcF,WAAW,CAACI,QAA1B,CAHO,EAIPlB,KAAK,CAACgB,OAAN,CAAcF,WAAW,CAACK,GAA1B,CAJO,EAKPL,WAAW,CAACM,EAAZ,CAAeC,WAAf,EALO,EAMPrB,KAAK,CAACgB,OAAN,CAAcF,WAAW,CAACQ,KAA1B,CANO,EAOPR,WAAW,CAACS,IAAZ,CAAiBF,WAAjB,EAPO,EAQPP,WAAW,CAACU,IARL,EASPxB,KAAK,CAACgB,OAAN,CAAcF,WAAW,CAACW,aAAZ,KAA8B,IAA9B,GAAqC,KAArC,GAA6C,KAA3D,CATO,EAUPzB,KAAK,CAACgB,OAAN,CAAcL,gBAAgB,CAACG,WAAW,CAACF,UAAb,CAA9B,CAVO,CAAX,CADc,EAadZ,KAAK,CAACgB,OAAN,CAAcF,WAAW,CAACY,OAAZ,IAAuB,KAArC,CAbc,EAcd,IAdc,EAed,IAfc,CAAX,CAAP;AAiBH;;AAED,SAASW,oDAAT,CAA8DvB,WAA9D,EAA2E;EACvE,IAAIA,WAAW,CAACe,oBAAhB,EAAsC;IAClC,MAAMC,0BAA0B,GAAI,KAAIhB,WAAW,CAACe,oBAAZ,CAAiCE,KAAjC,CAAuC,CAAvC,CAA0C,EAAlF,CADkC,CAGlC;;IACA,MAAM,CAACd,KAAD,EAAQC,QAAR,EAAkBC,GAAlB,EAAuBC,EAAvB,EAA2BE,KAA3B,EAAkCC,IAAlC,EAAwCC,IAAxC,EAA8CC,aAA9C,EAA6Da,QAA7D,EAAuE1B,UAAvE,EAAmF,CAAC,CAACoB,CAAD,EAAIC,CAAJ,EAAOC,CAAP,CAAD,CAAnF,IAAkGjC,KAAK,CAACkC,SAAN,CACpGL,0BADoG,CAAxG;IAIA,OAAOhC,GAAG,CAACiB,MAAJ,CAAW,CACdjB,GAAG,CAACiB,MAAJ,CAAW,CACPR,uDADO,EAEPP,KAAK,CAACgB,OAAN,CAAcC,KAAd,CAFO,EAGPjB,KAAK,CAACgB,OAAN,CAAcE,QAAd,CAHO,EAIPlB,KAAK,CAACgB,OAAN,CAAcG,GAAd,CAJO,EAKPC,EAAE,CAACC,WAAH,EALO,EAMPrB,KAAK,CAACgB,OAAN,CAAcM,KAAd,CANO,EAOPC,IAAI,CAACF,WAAL,EAPO,EAQPG,IARO,EASPC,aATO,EAUPa,QAVO,EAWP1B,UAXO,CAAX,CADc,EAcdE,WAAW,CAACsB,QAAZ,CAAqBf,WAArB,EAdc,EAedrB,KAAK,CAACgB,OAAN,CAAcF,WAAW,CAACY,OAAZ,IAAuB,KAArC,CAfc,EAgBd,IAhBc,EAiBd,IAjBc,CAAX,CAAP;EAmBH;;EACD,OAAO5B,GAAG,CAACiB,MAAJ,CAAW,CACdjB,GAAG,CAACiB,MAAJ,CAAW,CACPR,uDADO,EAEPP,KAAK,CAACgB,OAAN,CAAcF,WAAW,CAACG,KAA1B,CAFO,EAGPjB,KAAK,CAACgB,OAAN,CAAcF,WAAW,CAACI,QAA1B,CAHO,EAIPlB,KAAK,CAACgB,OAAN,CAAcF,WAAW,CAACK,GAA1B,CAJO,EAKPL,WAAW,CAACM,EAAZ,CAAeC,WAAf,EALO,EAMPrB,KAAK,CAACgB,OAAN,CAAcF,WAAW,CAACQ,KAA1B,CANO,EAOPR,WAAW,CAACS,IAAZ,CAAiBF,WAAjB,EAPO,EAQPP,WAAW,CAACU,IARL,EASPxB,KAAK,CAACgB,OAAN,CAAcF,WAAW,CAACW,aAAZ,KAA8B,IAA9B,GAAqC,KAArC,GAA6C,KAA3D,CATO,EAUPzB,KAAK,CAACgB,OAAN,CAAcF,WAAW,CAACwB,QAA1B,CAVO,EAWPtC,KAAK,CAACgB,OAAN,CAAcL,gBAAgB,CAACG,WAAW,CAACF,UAAb,CAA9B,CAXO,CAAX,CADc,EAcdZ,KAAK,CAACgB,OAAN,CAAcF,WAAW,CAACY,OAAZ,IAAuB,KAArC,CAdc,EAed,IAfc,EAgBd,IAhBc,CAAX,CAAP;AAkBH;;AAED,SAASa,8CAAT,CAAwDzB,WAAxD,EAAqE;EACjE,IAAIA,WAAW,CAACe,oBAAhB,EAAsC;IAClC,MAAMC,0BAA0B,GAAI,KAAIhB,WAAW,CAACe,oBAAZ,CAAiCE,KAAjC,CAAuC,CAAvC,CAA0C,EAAlF,CADkC,CAGlC;;IACA,MAAM,CAACd,KAAD,EAAQC,QAAR,EAAkBC,GAAlB,EAAuBC,EAAvB,EAA2BE,KAA3B,EAAkCC,IAAlC,EAAwCC,IAAxC,EAA8C,CAAC,CAACQ,CAAD,EAAIC,CAAJ,EAAOC,CAAP,CAAD,CAA9C,IAA6DjC,KAAK,CAACkC,SAAN,CAAgBL,0BAAhB,CAAnE;IAEA,OAAOhC,GAAG,CAACiB,MAAJ,CAAW,CACdjB,GAAG,CAACiB,MAAJ,CAAW,CACPV,+CADO,EAEPL,KAAK,CAACgB,OAAN,CAAcC,KAAd,CAFO,EAGPjB,KAAK,CAACgB,OAAN,CAAcE,QAAd,CAHO,EAIPlB,KAAK,CAACgB,OAAN,CAAcG,GAAd,CAJO,EAKPC,EAAE,CAACC,WAAH,EALO,EAMPrB,KAAK,CAACgB,OAAN,CAAcM,KAAd,CANO,EAOPC,IAAI,CAACF,WAAL,EAPO,EAQPG,IARO,CAAX,CADc,EAWdV,WAAW,CAACsB,QAAZ,CAAqBf,WAArB,EAXc,EAYdrB,KAAK,CAACgB,OAAN,CAAcF,WAAW,CAACY,OAAZ,IAAuB,KAArC,CAZc,EAad,IAbc,EAcd,IAdc,CAAX,CAAP;EAgBH;;EACD,OAAO5B,GAAG,CAACiB,MAAJ,CAAW,CACdjB,GAAG,CAACiB,MAAJ,CAAW,CACPV,+CADO,EAEPL,KAAK,CAACgB,OAAN,CAAcF,WAAW,CAACG,KAA1B,CAFO,EAGPjB,KAAK,CAACgB,OAAN,CAAcF,WAAW,CAACI,QAA1B,CAHO,EAIPlB,KAAK,CAACgB,OAAN,CAAcF,WAAW,CAACK,GAA1B,CAJO,EAKPL,WAAW,CAACM,EAAZ,CAAeC,WAAf,EALO,EAMPrB,KAAK,CAACgB,OAAN,CAAcF,WAAW,CAACQ,KAAZ,IAAqB,KAAnC,CANO,EAOPR,WAAW,CAACS,IAAZ,CAAiBF,WAAjB,EAPO,EAQPP,WAAW,CAACU,IARL,CAAX,CADc,EAWdxB,KAAK,CAACgB,OAAN,CAAcF,WAAW,CAACY,OAAZ,IAAuB,KAArC,CAXc,EAYd,IAZc,EAad,IAbc,CAAX,CAAP;AAeH;;AAED,SAASc,uDAAT,CAAiE1B,WAAjE,EAA8E;EAC1E,IAAIA,WAAW,CAACe,oBAAhB,EAAsC;IAClC,MAAMC,0BAA0B,GAAI,KAAIhB,WAAW,CAACe,oBAAZ,CAAiCE,KAAjC,CAAuC,CAAvC,CAA0C,EAAlF,CADkC,CAGlC;;IACA,MAAM,CAACd,KAAD,EAAQC,QAAR,EAAkBC,GAAlB,EAAuBC,EAAvB,EAA2BE,KAA3B,EAAkCC,IAAlC,EAAwCC,IAAxC,EAA8Cc,QAA9C,EAAwD,CAAC,CAACN,CAAD,EAAIC,CAAJ,EAAOC,CAAP,CAAD,CAAxD,IAAuEjC,KAAK,CAACkC,SAAN,CAAgBL,0BAAhB,CAA7E;IAEA,OAAOhC,GAAG,CAACiB,MAAJ,CAAW,CACdjB,GAAG,CAACiB,MAAJ,CAAW,CACPP,0DADO,EAEPR,KAAK,CAACgB,OAAN,CAAcC,KAAd,CAFO,EAGPjB,KAAK,CAACgB,OAAN,CAAcE,QAAd,CAHO,EAIPlB,KAAK,CAACgB,OAAN,CAAcG,GAAd,CAJO,EAKPC,EAAE,CAACC,WAAH,EALO,EAMPrB,KAAK,CAACgB,OAAN,CAAcM,KAAd,CANO,EAOPC,IAAI,CAACF,WAAL,EAPO,EAQPG,IARO,EASPxB,KAAK,CAACgB,OAAN,CAAcsB,QAAd,CATO,CAAX,CADc,EAYdxB,WAAW,CAACsB,QAAZ,CAAqBf,WAArB,EAZc,EAadrB,KAAK,CAACgB,OAAN,CAAcF,WAAW,CAACY,OAAZ,IAAuB,KAArC,CAbc,EAcd,IAdc,EAed,IAfc,CAAX,CAAP;EAiBH;;EACD,OAAO5B,GAAG,CAACiB,MAAJ,CAAW,CACdjB,GAAG,CAACiB,MAAJ,CAAW,CACPP,0DADO,EAEPR,KAAK,CAACgB,OAAN,CAAcF,WAAW,CAACG,KAA1B,CAFO,EAGPjB,KAAK,CAACgB,OAAN,CAAcF,WAAW,CAACI,QAA1B,CAHO,EAIPlB,KAAK,CAACgB,OAAN,CAAcF,WAAW,CAACK,GAA1B,CAJO,EAKPL,WAAW,CAACM,EAAZ,CAAeC,WAAf,EALO,EAMPrB,KAAK,CAACgB,OAAN,CAAcF,WAAW,CAACQ,KAAZ,IAAqB,KAAnC,CANO,EAOPR,WAAW,CAACS,IAAZ,CAAiBF,WAAjB,EAPO,EAQPP,WAAW,CAACU,IARL,EASPxB,KAAK,CAACgB,OAAN,CAAcF,WAAW,CAACwB,QAA1B,CATO,CAAX,CADc,EAYdtC,KAAK,CAACgB,OAAN,CAAcF,WAAW,CAACY,OAAZ,IAAuB,KAArC,CAZc,EAad,IAbc,EAcd,IAdc,CAAX,CAAP;AAgBH;;AAEDe,MAAM,CAACC,OAAP,GAAiB;EACb7B,0BADa;EAEbe,2CAFa;EAGbS,oDAHa;EAKbV,6BALa;EAMbY,8CANa;EAObC;AAPa,CAAjB"},"metadata":{},"sourceType":"script"}