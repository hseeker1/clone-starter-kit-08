{"ast":null,"code":"'use strict';\n/**\r\n * @param {number} number\r\n * @returns {Uint8Array}\r\n */\n\nvar fromNumberTo32BitBuf = function fromNumberTo32BitBuf(number) {\n  var bytes = new Uint8Array(4);\n\n  for (var i = 0; i < 4; i++) {\n    bytes[i] = number & 0xff;\n    number = number >> 8;\n  }\n\n  return bytes;\n};\n\nmodule.exports = {\n  fromNumberTo32BitBuf: fromNumberTo32BitBuf\n};","map":{"version":3,"names":["fromNumberTo32BitBuf","number","bytes","Uint8Array","i","module","exports"],"sources":["C:/Users/User/Documents/clone-starter-kit-08/node_modules/multihashing-async/src/utils.js"],"sourcesContent":["'use strict'\r\n\r\n/**\r\n * @param {number} number\r\n * @returns {Uint8Array}\r\n */\r\nconst fromNumberTo32BitBuf = (number) => {\r\n  const bytes = new Uint8Array(4)\r\n\r\n  for (let i = 0; i < 4; i++) {\r\n    bytes[i] = number & 0xff\r\n    number = number >> 8\r\n  }\r\n\r\n  return bytes\r\n}\r\n\r\nmodule.exports = {\r\n  fromNumberTo32BitBuf\r\n}\r\n"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;;AACA,IAAMA,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,MAAD,EAAY;EACvC,IAAMC,KAAK,GAAG,IAAIC,UAAJ,CAAe,CAAf,CAAd;;EAEA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;IAC1BF,KAAK,CAACE,CAAD,CAAL,GAAWH,MAAM,GAAG,IAApB;IACAA,MAAM,GAAGA,MAAM,IAAI,CAAnB;EACD;;EAED,OAAOC,KAAP;AACD,CATD;;AAWAG,MAAM,CAACC,OAAP,GAAiB;EACfN,oBAAoB,EAApBA;AADe,CAAjB"},"metadata":{},"sourceType":"script"}