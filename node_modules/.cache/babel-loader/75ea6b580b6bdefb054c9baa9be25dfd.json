{"ast":null,"code":"/*\r\n    Modifications copyright 2018 The caver-js Authors\r\n    This file is part of web3.js.\r\n\r\n    web3.js is free software: you can redistribute it and/or modify\r\n    it under the terms of the GNU Lesser General Public License as published by\r\n    the Free Software Foundation, either version 3 of the License, or\r\n    (at your option) any later version.\r\n\r\n    web3.js is distributed in the hope that it will be useful,\r\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n    GNU Lesser General Public License for more details.\r\n\r\n    You should have received a copy of the GNU Lesser General Public License\r\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n    This file is derived from web3.js/packages/web3-eth/src/index.js (2019/06/12).\r\n    Modified and improved for the caver-js development.\r\n*/\n\n/**\r\n * @file index.js\r\n * @author Fabian Vogelsteller <fabian@ethereum.org>\r\n * @date 2017\r\n */\nconst _ = require('lodash');\n\nconst core = require('../../caver-core');\n\nconst {\n  formatters\n} = require('../../caver-core-helpers');\n\nconst Subscriptions = require('../../caver-core-subscriptions').subscriptions;\n\nconst Method = require('../../caver-core-method');\n\nconst utils = require('../../caver-utils');\n\nconst Net = require('../../caver-net');\n\nconst Personal = require('../caver-klay-personal');\n\nconst BaseContract = require('../../caver-contract');\n\nconst KIP7 = require('../../caver-kct/src/kip7');\n\nconst KIP17 = require('../../caver-kct/src/kip17');\n\nconst Accounts = require('../caver-klay-accounts');\n\nconst abi = require('../../caver-abi');\n\nconst getNetworkType = require('./getNetworkType');\n\nconst rpcCalls = require('../../caver-rtm');\n\nconst {\n  decodeFromRawTransaction\n} = require('../caver-klay-accounts/src/makeRawTransaction');\n\nconst Klay = function Klay() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  const _this = this; // sets _requestmanager\n\n\n  core.packageInit(this, args); // overwrite package setRequestManager\n\n  const setRequestManager = this.setRequestManager;\n\n  this.setRequestManager = function (manager) {\n    setRequestManager(manager);\n\n    _this.net.setRequestManager(manager);\n\n    _this.personal.setRequestManager(manager);\n\n    _this.accounts.setRequestManager(manager);\n\n    _this.Contract._requestManager = _this._requestManager;\n    _this.Contract.currentProvider = _this._provider;\n    return true;\n  }; // overwrite setProvider\n\n\n  const setProvider = this.setProvider;\n\n  this.setProvider = function () {\n    for (var _len2 = arguments.length, arg = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      arg[_key2] = arguments[_key2];\n    }\n\n    setProvider.apply(_this, arg);\n\n    _this.setRequestManager(_this._requestManager);\n  };\n\n  let defaultAccount = null;\n  let defaultBlock = 'latest';\n  Object.defineProperty(this, 'defaultAccount', {\n    get: function () {\n      return defaultAccount;\n    },\n    set: function (val) {\n      if (val) {\n        defaultAccount = utils.toChecksumAddress(formatters.inputAddressFormatter(val));\n      } // also set on the Contract object\n\n\n      _this.Contract.defaultAccount = defaultAccount;\n      _this.personal.defaultAccount = defaultAccount; // update defaultBlock\n\n      methods.forEach(function (method) {\n        method.defaultAccount = defaultAccount;\n      });\n    },\n    enumerable: true\n  });\n  Object.defineProperty(this, 'defaultBlock', {\n    get: function () {\n      return defaultBlock;\n    },\n    set: function (val) {\n      if (!utils.isValidBlockNumberCandidate(val)) {\n        throw new Error('Invalid default block number.');\n      }\n\n      defaultBlock = val; // also set on the Contract object\n\n      _this.Contract.defaultBlock = defaultBlock;\n      _this.personal.defaultBlock = defaultBlock; // update defaultBlock\n\n      methods.forEach(function (method) {\n        method.defaultBlock = defaultBlock;\n      });\n    },\n    enumerable: true\n  });\n  this.clearSubscriptions = _this._requestManager.clearSubscriptions;\n  this.decodeTransaction = decodeFromRawTransaction; // add net\n\n  this.net = new Net(this); // add chain detection\n\n  this.net.getNetworkType = getNetworkType.bind(this); // add accounts\n\n  this.accounts = new Accounts(this); // add personal\n\n  this.personal = new Personal(this);\n  this.personal.defaultAccount = this.defaultAccount; // create a proxy Contract type for this instance, as a Contract's provider\n  // is stored as a class member rather than an instance variable. If we do\n  // not create this proxy type, changing the provider in one instance of\n  // caver-klay would subsequently change the provider for _all_ contract\n  // instances!\n\n  const self = this;\n\n  const Contract = function Contract() {\n    BaseContract.apply(this, arguments);\n    core.packageInit(this, [self]);\n  };\n\n  Contract.setProvider = function () {\n    BaseContract.setProvider.apply(this, arguments);\n  }; // make our proxy Contract inherit from caver-contract so that it has all\n  // the right functionality and so that instanceof and friends work properly\n\n\n  Contract.prototype = Object.create(BaseContract.prototype);\n  Contract.prototype.constructor = Contract; // add contract\n\n  this.Contract = Contract;\n  this.Contract.defaultAccount = this.defaultAccount;\n  this.Contract.defaultBlock = this.defaultBlock;\n  this.Contract._requestManager = this._requestManager;\n  this.Contract._klayAccounts = this.accounts;\n  this.Contract.currentProvider = this._requestManager.provider;\n  this.KIP7 = KIP7;\n  this.KIP7.defaultAccount = this.defaultAccount;\n  this.KIP7.defaultBlock = this.defaultBlock;\n  this.KIP7._requestManager = this._requestManager;\n  this.KIP7._klayAccounts = this.accounts;\n  this.KIP7.currentProvider = this._requestManager.provider; // const kip7Deprecated =\n  //     '`caver.klay.KIP7` has been deprecated. `caver.klay.KIP7` works using only `caver.klay.accounts.wallet`. If you are using `caver.wallet` then use `caver.kct.kip7`.'\n  // // Overwrite constructor with deprecate warning\n  // this.KIP7 = util.deprecate(this.KIP7, kip7Deprecated)\n  // // Overwrite static deloy method with deprecate warning\n  // this.KIP7.deploy = util.deprecate(this.KIP7.deploy, kip7Deprecated)\n\n  this.KIP17 = KIP17;\n  this.KIP17.defaultAccount = this.defaultAccount;\n  this.KIP17.defaultBlock = this.defaultBlock;\n  this.KIP17._requestManager = this._requestManager;\n  this.KIP17._klayAccounts = this.accounts;\n  this.KIP17.currentProvider = this._requestManager.provider; // const kip17Deprecated =\n  //     '`caver.klay.KIP17` has been deprecated. `caver.klay.KIP17` works using only `caver.klay.accounts.wallet`. If you are using `caver.wallet` then use `caver.kct.kip17`.'\n  // // Overwrite constructor with deprecate warning\n  // this.KIP17 = util.deprecate(KIP17, kip17Deprecated)\n  // // Overwrite static deloy method with deprecate warning\n  // this.KIP17.deploy = util.deprecate(this.KIP17.deploy, kip17Deprecated)\n  // add IBAN\n\n  this.Iban = utils.Iban; // add ABI\n\n  this.abi = abi;\n  const methods = [...rpcCalls.map(item => new Method(item)), // subscriptions\n  new Subscriptions({\n    name: 'subscribe',\n    type: 'klay',\n    subscriptions: {\n      newBlockHeaders: {\n        // TODO rename on RPC side?\n        subscriptionName: 'newHeads',\n        // replace subscription with this name\n        params: 0,\n        outputFormatter: formatters.outputBlockFormatter\n      },\n      pendingTransactions: {\n        subscriptionName: 'newPendingTransactions',\n        // replace subscription with this name\n        params: 0\n      },\n      logs: {\n        params: 1,\n        inputFormatter: [formatters.inputLogFormatter],\n        outputFormatter: formatters.outputLogFormatter,\n        // DUBLICATE, also in caver-contract\n        subscriptionHandler: function (output) {\n          this.emit('data', output);\n\n          if (_.isFunction(this.callback)) {\n            this.callback(null, output, this);\n          }\n        }\n      },\n      syncing: {\n        params: 0,\n        outputFormatter: formatters.outputSyncingFormatter,\n        subscriptionHandler: function (output) {\n          const _this = this;\n          /* eslint-disable-line no-shadow */\n          // fire TRUE at start\n\n\n          if (this._isSyncing !== true) {\n            this._isSyncing = true;\n            this.emit('changed', _this._isSyncing);\n\n            if (_.isFunction(this.callback)) {\n              this.callback(null, _this._isSyncing, this);\n            }\n\n            setTimeout(function () {\n              _this.emit('data', output);\n\n              if (_.isFunction(_this.callback)) {\n                _this.callback(null, output, _this);\n              }\n            }, 0); // fire sync status\n          } else {\n            this.emit('data', output);\n\n            if (_.isFunction(_this.callback)) {\n              this.callback(null, output, this);\n            } // wait for some time before fireing the FALSE\n\n\n            clearTimeout(this._isSyncingTimeout);\n            this._isSyncingTimeout = setTimeout(function () {\n              if (output.currentBlock > output.highestBlock - 200) {\n                _this._isSyncing = false;\n\n                _this.emit('changed', _this._isSyncing);\n\n                if (_.isFunction(_this.callback)) {\n                  _this.callback(null, _this._isSyncing, _this);\n                }\n              }\n            }, 500);\n          }\n        }\n      }\n    }\n  })];\n  methods.forEach(function (method) {\n    method.attachToObject(_this); // second param is the klay.accounts module (necessary for signing transactions locally)\n\n    method.setRequestManager(_this._requestManager, _this.accounts);\n    method.defaultBlock = _this.defaultBlock;\n    method.defaultAccount = _this.defaultAccount;\n  });\n};\n\nmodule.exports = Klay;","map":{"version":3,"names":["_","require","core","formatters","Subscriptions","subscriptions","Method","utils","Net","Personal","BaseContract","KIP7","KIP17","Accounts","abi","getNetworkType","rpcCalls","decodeFromRawTransaction","Klay","args","_this","packageInit","setRequestManager","manager","net","personal","accounts","Contract","_requestManager","currentProvider","_provider","setProvider","arg","apply","defaultAccount","defaultBlock","Object","defineProperty","get","set","val","toChecksumAddress","inputAddressFormatter","methods","forEach","method","enumerable","isValidBlockNumberCandidate","Error","clearSubscriptions","decodeTransaction","bind","self","arguments","prototype","create","constructor","_klayAccounts","provider","Iban","map","item","name","type","newBlockHeaders","subscriptionName","params","outputFormatter","outputBlockFormatter","pendingTransactions","logs","inputFormatter","inputLogFormatter","outputLogFormatter","subscriptionHandler","output","emit","isFunction","callback","syncing","outputSyncingFormatter","_isSyncing","setTimeout","clearTimeout","_isSyncingTimeout","currentBlock","highestBlock","attachToObject","module","exports"],"sources":["C:/Users/User/Documents/clone-starter-kit-08/node_modules/caver-js/packages/caver-klay/src/index.js"],"sourcesContent":["/*\r\n    Modifications copyright 2018 The caver-js Authors\r\n    This file is part of web3.js.\r\n\r\n    web3.js is free software: you can redistribute it and/or modify\r\n    it under the terms of the GNU Lesser General Public License as published by\r\n    the Free Software Foundation, either version 3 of the License, or\r\n    (at your option) any later version.\r\n\r\n    web3.js is distributed in the hope that it will be useful,\r\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n    GNU Lesser General Public License for more details.\r\n\r\n    You should have received a copy of the GNU Lesser General Public License\r\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n    This file is derived from web3.js/packages/web3-eth/src/index.js (2019/06/12).\r\n    Modified and improved for the caver-js development.\r\n*/\r\n/**\r\n * @file index.js\r\n * @author Fabian Vogelsteller <fabian@ethereum.org>\r\n * @date 2017\r\n */\r\n\r\nconst _ = require('lodash')\r\n\r\nconst core = require('../../caver-core')\r\nconst { formatters } = require('../../caver-core-helpers')\r\nconst Subscriptions = require('../../caver-core-subscriptions').subscriptions\r\nconst Method = require('../../caver-core-method')\r\nconst utils = require('../../caver-utils')\r\nconst Net = require('../../caver-net')\r\n\r\nconst Personal = require('../caver-klay-personal')\r\nconst BaseContract = require('../../caver-contract')\r\nconst KIP7 = require('../../caver-kct/src/kip7')\r\nconst KIP17 = require('../../caver-kct/src/kip17')\r\nconst Accounts = require('../caver-klay-accounts')\r\nconst abi = require('../../caver-abi')\r\nconst getNetworkType = require('./getNetworkType')\r\n\r\nconst rpcCalls = require('../../caver-rtm')\r\n\r\nconst { decodeFromRawTransaction } = require('../caver-klay-accounts/src/makeRawTransaction')\r\n\r\nconst Klay = function Klay(...args) {\r\n    const _this = this\r\n\r\n    // sets _requestmanager\r\n    core.packageInit(this, args)\r\n\r\n    // overwrite package setRequestManager\r\n    const setRequestManager = this.setRequestManager\r\n    this.setRequestManager = function(manager) {\r\n        setRequestManager(manager)\r\n\r\n        _this.net.setRequestManager(manager)\r\n        _this.personal.setRequestManager(manager)\r\n        _this.accounts.setRequestManager(manager)\r\n        _this.Contract._requestManager = _this._requestManager\r\n        _this.Contract.currentProvider = _this._provider\r\n\r\n        return true\r\n    }\r\n\r\n    // overwrite setProvider\r\n    const setProvider = this.setProvider\r\n    this.setProvider = function(...arg) {\r\n        setProvider.apply(_this, arg)\r\n        _this.setRequestManager(_this._requestManager)\r\n    }\r\n\r\n    let defaultAccount = null\r\n    let defaultBlock = 'latest'\r\n\r\n    Object.defineProperty(this, 'defaultAccount', {\r\n        get: function() {\r\n            return defaultAccount\r\n        },\r\n        set: function(val) {\r\n            if (val) {\r\n                defaultAccount = utils.toChecksumAddress(formatters.inputAddressFormatter(val))\r\n            }\r\n\r\n            // also set on the Contract object\r\n            _this.Contract.defaultAccount = defaultAccount\r\n            _this.personal.defaultAccount = defaultAccount\r\n\r\n            // update defaultBlock\r\n            methods.forEach(function(method) {\r\n                method.defaultAccount = defaultAccount\r\n            })\r\n        },\r\n        enumerable: true,\r\n    })\r\n    Object.defineProperty(this, 'defaultBlock', {\r\n        get: function() {\r\n            return defaultBlock\r\n        },\r\n        set: function(val) {\r\n            if (!utils.isValidBlockNumberCandidate(val)) {\r\n                throw new Error('Invalid default block number.')\r\n            }\r\n            defaultBlock = val\r\n            // also set on the Contract object\r\n            _this.Contract.defaultBlock = defaultBlock\r\n            _this.personal.defaultBlock = defaultBlock\r\n\r\n            // update defaultBlock\r\n            methods.forEach(function(method) {\r\n                method.defaultBlock = defaultBlock\r\n            })\r\n        },\r\n        enumerable: true,\r\n    })\r\n\r\n    this.clearSubscriptions = _this._requestManager.clearSubscriptions\r\n\r\n    this.decodeTransaction = decodeFromRawTransaction\r\n\r\n    // add net\r\n    this.net = new Net(this)\r\n    // add chain detection\r\n    this.net.getNetworkType = getNetworkType.bind(this)\r\n\r\n    // add accounts\r\n    this.accounts = new Accounts(this)\r\n\r\n    // add personal\r\n    this.personal = new Personal(this)\r\n    this.personal.defaultAccount = this.defaultAccount\r\n\r\n    // create a proxy Contract type for this instance, as a Contract's provider\r\n    // is stored as a class member rather than an instance variable. If we do\r\n    // not create this proxy type, changing the provider in one instance of\r\n    // caver-klay would subsequently change the provider for _all_ contract\r\n    // instances!\r\n    const self = this\r\n    const Contract = function Contract() {\r\n        BaseContract.apply(this, arguments)\r\n        core.packageInit(this, [self])\r\n    }\r\n\r\n    Contract.setProvider = function() {\r\n        BaseContract.setProvider.apply(this, arguments)\r\n    }\r\n\r\n    // make our proxy Contract inherit from caver-contract so that it has all\r\n    // the right functionality and so that instanceof and friends work properly\r\n    Contract.prototype = Object.create(BaseContract.prototype)\r\n    Contract.prototype.constructor = Contract\r\n\r\n    // add contract\r\n    this.Contract = Contract\r\n    this.Contract.defaultAccount = this.defaultAccount\r\n    this.Contract.defaultBlock = this.defaultBlock\r\n    this.Contract._requestManager = this._requestManager\r\n    this.Contract._klayAccounts = this.accounts\r\n    this.Contract.currentProvider = this._requestManager.provider\r\n\r\n    this.KIP7 = KIP7\r\n    this.KIP7.defaultAccount = this.defaultAccount\r\n    this.KIP7.defaultBlock = this.defaultBlock\r\n    this.KIP7._requestManager = this._requestManager\r\n    this.KIP7._klayAccounts = this.accounts\r\n    this.KIP7.currentProvider = this._requestManager.provider\r\n\r\n    // const kip7Deprecated =\r\n    //     '`caver.klay.KIP7` has been deprecated. `caver.klay.KIP7` works using only `caver.klay.accounts.wallet`. If you are using `caver.wallet` then use `caver.kct.kip7`.'\r\n    // // Overwrite constructor with deprecate warning\r\n    // this.KIP7 = util.deprecate(this.KIP7, kip7Deprecated)\r\n\r\n    // // Overwrite static deloy method with deprecate warning\r\n    // this.KIP7.deploy = util.deprecate(this.KIP7.deploy, kip7Deprecated)\r\n\r\n    this.KIP17 = KIP17\r\n    this.KIP17.defaultAccount = this.defaultAccount\r\n    this.KIP17.defaultBlock = this.defaultBlock\r\n    this.KIP17._requestManager = this._requestManager\r\n    this.KIP17._klayAccounts = this.accounts\r\n    this.KIP17.currentProvider = this._requestManager.provider\r\n\r\n    // const kip17Deprecated =\r\n    //     '`caver.klay.KIP17` has been deprecated. `caver.klay.KIP17` works using only `caver.klay.accounts.wallet`. If you are using `caver.wallet` then use `caver.kct.kip17`.'\r\n    // // Overwrite constructor with deprecate warning\r\n    // this.KIP17 = util.deprecate(KIP17, kip17Deprecated)\r\n\r\n    // // Overwrite static deloy method with deprecate warning\r\n    // this.KIP17.deploy = util.deprecate(this.KIP17.deploy, kip17Deprecated)\r\n\r\n    // add IBAN\r\n    this.Iban = utils.Iban\r\n\r\n    // add ABI\r\n    this.abi = abi\r\n\r\n    const methods = [\r\n        ...rpcCalls.map(item => new Method(item)),\r\n        // subscriptions\r\n        new Subscriptions({\r\n            name: 'subscribe',\r\n            type: 'klay',\r\n            subscriptions: {\r\n                newBlockHeaders: {\r\n                    // TODO rename on RPC side?\r\n                    subscriptionName: 'newHeads', // replace subscription with this name\r\n                    params: 0,\r\n                    outputFormatter: formatters.outputBlockFormatter,\r\n                },\r\n                pendingTransactions: {\r\n                    subscriptionName: 'newPendingTransactions', // replace subscription with this name\r\n                    params: 0,\r\n                },\r\n                logs: {\r\n                    params: 1,\r\n                    inputFormatter: [formatters.inputLogFormatter],\r\n                    outputFormatter: formatters.outputLogFormatter,\r\n                    // DUBLICATE, also in caver-contract\r\n                    subscriptionHandler: function(output) {\r\n                        this.emit('data', output)\r\n\r\n                        if (_.isFunction(this.callback)) {\r\n                            this.callback(null, output, this)\r\n                        }\r\n                    },\r\n                },\r\n                syncing: {\r\n                    params: 0,\r\n                    outputFormatter: formatters.outputSyncingFormatter,\r\n                    subscriptionHandler: function(output) {\r\n                        const _this = this /* eslint-disable-line no-shadow */\r\n\r\n                        // fire TRUE at start\r\n                        if (this._isSyncing !== true) {\r\n                            this._isSyncing = true\r\n                            this.emit('changed', _this._isSyncing)\r\n\r\n                            if (_.isFunction(this.callback)) {\r\n                                this.callback(null, _this._isSyncing, this)\r\n                            }\r\n\r\n                            setTimeout(function() {\r\n                                _this.emit('data', output)\r\n\r\n                                if (_.isFunction(_this.callback)) {\r\n                                    _this.callback(null, output, _this)\r\n                                }\r\n                            }, 0)\r\n\r\n                            // fire sync status\r\n                        } else {\r\n                            this.emit('data', output)\r\n                            if (_.isFunction(_this.callback)) {\r\n                                this.callback(null, output, this)\r\n                            }\r\n\r\n                            // wait for some time before fireing the FALSE\r\n                            clearTimeout(this._isSyncingTimeout)\r\n                            this._isSyncingTimeout = setTimeout(function() {\r\n                                if (output.currentBlock > output.highestBlock - 200) {\r\n                                    _this._isSyncing = false\r\n                                    _this.emit('changed', _this._isSyncing)\r\n\r\n                                    if (_.isFunction(_this.callback)) {\r\n                                        _this.callback(null, _this._isSyncing, _this)\r\n                                    }\r\n                                }\r\n                            }, 500)\r\n                        }\r\n                    },\r\n                },\r\n            },\r\n        }),\r\n    ]\r\n\r\n    methods.forEach(function(method) {\r\n        method.attachToObject(_this)\r\n        // second param is the klay.accounts module (necessary for signing transactions locally)\r\n        method.setRequestManager(_this._requestManager, _this.accounts)\r\n        method.defaultBlock = _this.defaultBlock\r\n        method.defaultAccount = _this.defaultAccount\r\n    })\r\n}\r\n\r\nmodule.exports = Klay\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AAEA,MAAMA,CAAC,GAAGC,OAAO,CAAC,QAAD,CAAjB;;AAEA,MAAMC,IAAI,GAAGD,OAAO,CAAC,kBAAD,CAApB;;AACA,MAAM;EAAEE;AAAF,IAAiBF,OAAO,CAAC,0BAAD,CAA9B;;AACA,MAAMG,aAAa,GAAGH,OAAO,CAAC,gCAAD,CAAP,CAA0CI,aAAhE;;AACA,MAAMC,MAAM,GAAGL,OAAO,CAAC,yBAAD,CAAtB;;AACA,MAAMM,KAAK,GAAGN,OAAO,CAAC,mBAAD,CAArB;;AACA,MAAMO,GAAG,GAAGP,OAAO,CAAC,iBAAD,CAAnB;;AAEA,MAAMQ,QAAQ,GAAGR,OAAO,CAAC,wBAAD,CAAxB;;AACA,MAAMS,YAAY,GAAGT,OAAO,CAAC,sBAAD,CAA5B;;AACA,MAAMU,IAAI,GAAGV,OAAO,CAAC,0BAAD,CAApB;;AACA,MAAMW,KAAK,GAAGX,OAAO,CAAC,2BAAD,CAArB;;AACA,MAAMY,QAAQ,GAAGZ,OAAO,CAAC,wBAAD,CAAxB;;AACA,MAAMa,GAAG,GAAGb,OAAO,CAAC,iBAAD,CAAnB;;AACA,MAAMc,cAAc,GAAGd,OAAO,CAAC,kBAAD,CAA9B;;AAEA,MAAMe,QAAQ,GAAGf,OAAO,CAAC,iBAAD,CAAxB;;AAEA,MAAM;EAAEgB;AAAF,IAA+BhB,OAAO,CAAC,+CAAD,CAA5C;;AAEA,MAAMiB,IAAI,GAAG,SAASA,IAAT,GAAuB;EAAA,kCAANC,IAAM;IAANA,IAAM;EAAA;;EAChC,MAAMC,KAAK,GAAG,IAAd,CADgC,CAGhC;;;EACAlB,IAAI,CAACmB,WAAL,CAAiB,IAAjB,EAAuBF,IAAvB,EAJgC,CAMhC;;EACA,MAAMG,iBAAiB,GAAG,KAAKA,iBAA/B;;EACA,KAAKA,iBAAL,GAAyB,UAASC,OAAT,EAAkB;IACvCD,iBAAiB,CAACC,OAAD,CAAjB;;IAEAH,KAAK,CAACI,GAAN,CAAUF,iBAAV,CAA4BC,OAA5B;;IACAH,KAAK,CAACK,QAAN,CAAeH,iBAAf,CAAiCC,OAAjC;;IACAH,KAAK,CAACM,QAAN,CAAeJ,iBAAf,CAAiCC,OAAjC;;IACAH,KAAK,CAACO,QAAN,CAAeC,eAAf,GAAiCR,KAAK,CAACQ,eAAvC;IACAR,KAAK,CAACO,QAAN,CAAeE,eAAf,GAAiCT,KAAK,CAACU,SAAvC;IAEA,OAAO,IAAP;EACH,CAVD,CARgC,CAoBhC;;;EACA,MAAMC,WAAW,GAAG,KAAKA,WAAzB;;EACA,KAAKA,WAAL,GAAmB,YAAiB;IAAA,mCAALC,GAAK;MAALA,GAAK;IAAA;;IAChCD,WAAW,CAACE,KAAZ,CAAkBb,KAAlB,EAAyBY,GAAzB;;IACAZ,KAAK,CAACE,iBAAN,CAAwBF,KAAK,CAACQ,eAA9B;EACH,CAHD;;EAKA,IAAIM,cAAc,GAAG,IAArB;EACA,IAAIC,YAAY,GAAG,QAAnB;EAEAC,MAAM,CAACC,cAAP,CAAsB,IAAtB,EAA4B,gBAA5B,EAA8C;IAC1CC,GAAG,EAAE,YAAW;MACZ,OAAOJ,cAAP;IACH,CAHyC;IAI1CK,GAAG,EAAE,UAASC,GAAT,EAAc;MACf,IAAIA,GAAJ,EAAS;QACLN,cAAc,GAAG3B,KAAK,CAACkC,iBAAN,CAAwBtC,UAAU,CAACuC,qBAAX,CAAiCF,GAAjC,CAAxB,CAAjB;MACH,CAHc,CAKf;;;MACApB,KAAK,CAACO,QAAN,CAAeO,cAAf,GAAgCA,cAAhC;MACAd,KAAK,CAACK,QAAN,CAAeS,cAAf,GAAgCA,cAAhC,CAPe,CASf;;MACAS,OAAO,CAACC,OAAR,CAAgB,UAASC,MAAT,EAAiB;QAC7BA,MAAM,CAACX,cAAP,GAAwBA,cAAxB;MACH,CAFD;IAGH,CAjByC;IAkB1CY,UAAU,EAAE;EAlB8B,CAA9C;EAoBAV,MAAM,CAACC,cAAP,CAAsB,IAAtB,EAA4B,cAA5B,EAA4C;IACxCC,GAAG,EAAE,YAAW;MACZ,OAAOH,YAAP;IACH,CAHuC;IAIxCI,GAAG,EAAE,UAASC,GAAT,EAAc;MACf,IAAI,CAACjC,KAAK,CAACwC,2BAAN,CAAkCP,GAAlC,CAAL,EAA6C;QACzC,MAAM,IAAIQ,KAAJ,CAAU,+BAAV,CAAN;MACH;;MACDb,YAAY,GAAGK,GAAf,CAJe,CAKf;;MACApB,KAAK,CAACO,QAAN,CAAeQ,YAAf,GAA8BA,YAA9B;MACAf,KAAK,CAACK,QAAN,CAAeU,YAAf,GAA8BA,YAA9B,CAPe,CASf;;MACAQ,OAAO,CAACC,OAAR,CAAgB,UAASC,MAAT,EAAiB;QAC7BA,MAAM,CAACV,YAAP,GAAsBA,YAAtB;MACH,CAFD;IAGH,CAjBuC;IAkBxCW,UAAU,EAAE;EAlB4B,CAA5C;EAqBA,KAAKG,kBAAL,GAA0B7B,KAAK,CAACQ,eAAN,CAAsBqB,kBAAhD;EAEA,KAAKC,iBAAL,GAAyBjC,wBAAzB,CAzEgC,CA2EhC;;EACA,KAAKO,GAAL,GAAW,IAAIhB,GAAJ,CAAQ,IAAR,CAAX,CA5EgC,CA6EhC;;EACA,KAAKgB,GAAL,CAAST,cAAT,GAA0BA,cAAc,CAACoC,IAAf,CAAoB,IAApB,CAA1B,CA9EgC,CAgFhC;;EACA,KAAKzB,QAAL,GAAgB,IAAIb,QAAJ,CAAa,IAAb,CAAhB,CAjFgC,CAmFhC;;EACA,KAAKY,QAAL,GAAgB,IAAIhB,QAAJ,CAAa,IAAb,CAAhB;EACA,KAAKgB,QAAL,CAAcS,cAAd,GAA+B,KAAKA,cAApC,CArFgC,CAuFhC;EACA;EACA;EACA;EACA;;EACA,MAAMkB,IAAI,GAAG,IAAb;;EACA,MAAMzB,QAAQ,GAAG,SAASA,QAAT,GAAoB;IACjCjB,YAAY,CAACuB,KAAb,CAAmB,IAAnB,EAAyBoB,SAAzB;IACAnD,IAAI,CAACmB,WAAL,CAAiB,IAAjB,EAAuB,CAAC+B,IAAD,CAAvB;EACH,CAHD;;EAKAzB,QAAQ,CAACI,WAAT,GAAuB,YAAW;IAC9BrB,YAAY,CAACqB,WAAb,CAAyBE,KAAzB,CAA+B,IAA/B,EAAqCoB,SAArC;EACH,CAFD,CAlGgC,CAsGhC;EACA;;;EACA1B,QAAQ,CAAC2B,SAAT,GAAqBlB,MAAM,CAACmB,MAAP,CAAc7C,YAAY,CAAC4C,SAA3B,CAArB;EACA3B,QAAQ,CAAC2B,SAAT,CAAmBE,WAAnB,GAAiC7B,QAAjC,CAzGgC,CA2GhC;;EACA,KAAKA,QAAL,GAAgBA,QAAhB;EACA,KAAKA,QAAL,CAAcO,cAAd,GAA+B,KAAKA,cAApC;EACA,KAAKP,QAAL,CAAcQ,YAAd,GAA6B,KAAKA,YAAlC;EACA,KAAKR,QAAL,CAAcC,eAAd,GAAgC,KAAKA,eAArC;EACA,KAAKD,QAAL,CAAc8B,aAAd,GAA8B,KAAK/B,QAAnC;EACA,KAAKC,QAAL,CAAcE,eAAd,GAAgC,KAAKD,eAAL,CAAqB8B,QAArD;EAEA,KAAK/C,IAAL,GAAYA,IAAZ;EACA,KAAKA,IAAL,CAAUuB,cAAV,GAA2B,KAAKA,cAAhC;EACA,KAAKvB,IAAL,CAAUwB,YAAV,GAAyB,KAAKA,YAA9B;EACA,KAAKxB,IAAL,CAAUiB,eAAV,GAA4B,KAAKA,eAAjC;EACA,KAAKjB,IAAL,CAAU8C,aAAV,GAA0B,KAAK/B,QAA/B;EACA,KAAKf,IAAL,CAAUkB,eAAV,GAA4B,KAAKD,eAAL,CAAqB8B,QAAjD,CAxHgC,CA0HhC;EACA;EACA;EACA;EAEA;EACA;;EAEA,KAAK9C,KAAL,GAAaA,KAAb;EACA,KAAKA,KAAL,CAAWsB,cAAX,GAA4B,KAAKA,cAAjC;EACA,KAAKtB,KAAL,CAAWuB,YAAX,GAA0B,KAAKA,YAA/B;EACA,KAAKvB,KAAL,CAAWgB,eAAX,GAA6B,KAAKA,eAAlC;EACA,KAAKhB,KAAL,CAAW6C,aAAX,GAA2B,KAAK/B,QAAhC;EACA,KAAKd,KAAL,CAAWiB,eAAX,GAA6B,KAAKD,eAAL,CAAqB8B,QAAlD,CAvIgC,CAyIhC;EACA;EACA;EACA;EAEA;EACA;EAEA;;EACA,KAAKC,IAAL,GAAYpD,KAAK,CAACoD,IAAlB,CAlJgC,CAoJhC;;EACA,KAAK7C,GAAL,GAAWA,GAAX;EAEA,MAAM6B,OAAO,GAAG,CACZ,GAAG3B,QAAQ,CAAC4C,GAAT,CAAaC,IAAI,IAAI,IAAIvD,MAAJ,CAAWuD,IAAX,CAArB,CADS,EAEZ;EACA,IAAIzD,aAAJ,CAAkB;IACd0D,IAAI,EAAE,WADQ;IAEdC,IAAI,EAAE,MAFQ;IAGd1D,aAAa,EAAE;MACX2D,eAAe,EAAE;QACb;QACAC,gBAAgB,EAAE,UAFL;QAEiB;QAC9BC,MAAM,EAAE,CAHK;QAIbC,eAAe,EAAEhE,UAAU,CAACiE;MAJf,CADN;MAOXC,mBAAmB,EAAE;QACjBJ,gBAAgB,EAAE,wBADD;QAC2B;QAC5CC,MAAM,EAAE;MAFS,CAPV;MAWXI,IAAI,EAAE;QACFJ,MAAM,EAAE,CADN;QAEFK,cAAc,EAAE,CAACpE,UAAU,CAACqE,iBAAZ,CAFd;QAGFL,eAAe,EAAEhE,UAAU,CAACsE,kBAH1B;QAIF;QACAC,mBAAmB,EAAE,UAASC,MAAT,EAAiB;UAClC,KAAKC,IAAL,CAAU,MAAV,EAAkBD,MAAlB;;UAEA,IAAI3E,CAAC,CAAC6E,UAAF,CAAa,KAAKC,QAAlB,CAAJ,EAAiC;YAC7B,KAAKA,QAAL,CAAc,IAAd,EAAoBH,MAApB,EAA4B,IAA5B;UACH;QACJ;MAXC,CAXK;MAwBXI,OAAO,EAAE;QACLb,MAAM,EAAE,CADH;QAELC,eAAe,EAAEhE,UAAU,CAAC6E,sBAFvB;QAGLN,mBAAmB,EAAE,UAASC,MAAT,EAAiB;UAClC,MAAMvD,KAAK,GAAG,IAAd;UAAmB;UAEnB;;;UACA,IAAI,KAAK6D,UAAL,KAAoB,IAAxB,EAA8B;YAC1B,KAAKA,UAAL,GAAkB,IAAlB;YACA,KAAKL,IAAL,CAAU,SAAV,EAAqBxD,KAAK,CAAC6D,UAA3B;;YAEA,IAAIjF,CAAC,CAAC6E,UAAF,CAAa,KAAKC,QAAlB,CAAJ,EAAiC;cAC7B,KAAKA,QAAL,CAAc,IAAd,EAAoB1D,KAAK,CAAC6D,UAA1B,EAAsC,IAAtC;YACH;;YAEDC,UAAU,CAAC,YAAW;cAClB9D,KAAK,CAACwD,IAAN,CAAW,MAAX,EAAmBD,MAAnB;;cAEA,IAAI3E,CAAC,CAAC6E,UAAF,CAAazD,KAAK,CAAC0D,QAAnB,CAAJ,EAAkC;gBAC9B1D,KAAK,CAAC0D,QAAN,CAAe,IAAf,EAAqBH,MAArB,EAA6BvD,KAA7B;cACH;YACJ,CANS,EAMP,CANO,CAAV,CAR0B,CAgB1B;UACH,CAjBD,MAiBO;YACH,KAAKwD,IAAL,CAAU,MAAV,EAAkBD,MAAlB;;YACA,IAAI3E,CAAC,CAAC6E,UAAF,CAAazD,KAAK,CAAC0D,QAAnB,CAAJ,EAAkC;cAC9B,KAAKA,QAAL,CAAc,IAAd,EAAoBH,MAApB,EAA4B,IAA5B;YACH,CAJE,CAMH;;;YACAQ,YAAY,CAAC,KAAKC,iBAAN,CAAZ;YACA,KAAKA,iBAAL,GAAyBF,UAAU,CAAC,YAAW;cAC3C,IAAIP,MAAM,CAACU,YAAP,GAAsBV,MAAM,CAACW,YAAP,GAAsB,GAAhD,EAAqD;gBACjDlE,KAAK,CAAC6D,UAAN,GAAmB,KAAnB;;gBACA7D,KAAK,CAACwD,IAAN,CAAW,SAAX,EAAsBxD,KAAK,CAAC6D,UAA5B;;gBAEA,IAAIjF,CAAC,CAAC6E,UAAF,CAAazD,KAAK,CAAC0D,QAAnB,CAAJ,EAAkC;kBAC9B1D,KAAK,CAAC0D,QAAN,CAAe,IAAf,EAAqB1D,KAAK,CAAC6D,UAA3B,EAAuC7D,KAAvC;gBACH;cACJ;YACJ,CATkC,EAShC,GATgC,CAAnC;UAUH;QACJ;MA3CI;IAxBE;EAHD,CAAlB,CAHY,CAAhB;EA+EAuB,OAAO,CAACC,OAAR,CAAgB,UAASC,MAAT,EAAiB;IAC7BA,MAAM,CAAC0C,cAAP,CAAsBnE,KAAtB,EAD6B,CAE7B;;IACAyB,MAAM,CAACvB,iBAAP,CAAyBF,KAAK,CAACQ,eAA/B,EAAgDR,KAAK,CAACM,QAAtD;IACAmB,MAAM,CAACV,YAAP,GAAsBf,KAAK,CAACe,YAA5B;IACAU,MAAM,CAACX,cAAP,GAAwBd,KAAK,CAACc,cAA9B;EACH,CAND;AAOH,CA7OD;;AA+OAsD,MAAM,CAACC,OAAP,GAAiBvE,IAAjB"},"metadata":{},"sourceType":"script"}