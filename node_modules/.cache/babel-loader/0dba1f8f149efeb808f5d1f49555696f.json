{"ast":null,"code":"var _objectSpread = require(\"C:\\\\Users\\\\User\\\\Documents\\\\clone-starter-kit-08\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/objectSpread2\");\n\nvar _asyncToGenerator = require(\"C:\\\\Users\\\\User\\\\Documents\\\\clone-starter-kit-08\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/asyncToGenerator\");\n\nvar _awaitAsyncGenerator = require(\"C:\\\\Users\\\\User\\\\Documents\\\\clone-starter-kit-08\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/awaitAsyncGenerator\");\n\nvar _wrapAsyncGenerator = require(\"C:\\\\Users\\\\User\\\\Documents\\\\clone-starter-kit-08\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/wrapAsyncGenerator\");\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nfunction _asyncIterator(iterable) { var method, async, sync, retry = 2; for (\"undefined\" != typeof Symbol && (async = Symbol.asyncIterator, sync = Symbol.iterator); retry--;) { if (async && null != (method = iterable[async])) return method.call(iterable); if (sync && null != (method = iterable[sync])) return new AsyncFromSyncIterator(method.call(iterable)); async = \"@@asyncIterator\", sync = \"@@iterator\"; } throw new TypeError(\"Object is not async iterable\"); }\n\nfunction AsyncFromSyncIterator(s) { function AsyncFromSyncIteratorContinuation(r) { if (Object(r) !== r) return Promise.reject(new TypeError(r + \" is not an object.\")); var done = r.done; return Promise.resolve(r.value).then(function (value) { return { value: value, done: done }; }); } return AsyncFromSyncIterator = function AsyncFromSyncIterator(s) { this.s = s, this.n = s.next; }, AsyncFromSyncIterator.prototype = { s: null, n: null, next: function next() { return AsyncFromSyncIteratorContinuation(this.n.apply(this.s, arguments)); }, return: function _return(value) { var ret = this.s.return; return void 0 === ret ? Promise.resolve({ value: value, done: !0 }) : AsyncFromSyncIteratorContinuation(ret.apply(this.s, arguments)); }, throw: function _throw(value) { var thr = this.s.return; return void 0 === thr ? Promise.reject(value) : AsyncFromSyncIteratorContinuation(thr.apply(this.s, arguments)); } }, new AsyncFromSyncIterator(s); }\n\nvar defer = require('p-defer');\n\nvar Headers = require('./extract-headers');\n\nvar LteReader = require('./lte-reader');\n\nfunction getPadding(size) {\n  size &= 511;\n  return size && 512 - size;\n}\n\nfunction discardPadding(_x, _x2) {\n  return _discardPadding.apply(this, arguments);\n}\n\nfunction _discardPadding() {\n  _discardPadding = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(reader, size) {\n    var overflow;\n    return _regeneratorRuntime().wrap(function _callee4$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            overflow = getPadding(size);\n\n            if (!overflow) {\n              _context5.next = 4;\n              break;\n            }\n\n            _context5.next = 4;\n            return reader.next(overflow);\n\n          case 4:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _discardPadding.apply(this, arguments);\n}\n\nmodule.exports = function (options) {\n  options = options || {};\n  options.highWaterMark = options.highWaterMark || 1024 * 16;\n  return function (source) {\n    return _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n      var reader, gnuLongPath, gnuLongLinkPath, paxGlobal, pax, _loop, _iteratorAbruptCompletion, _didIteratorError, _iteratorError, _iterator, _step, _ret;\n\n      return _regeneratorRuntime().wrap(function _callee3$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              reader = LteReader(source);\n              _context4.prev = 1;\n              _loop = /*#__PURE__*/_regeneratorRuntime().mark(function _loop() {\n                var headerBytes, _yield$_awaitAsyncGen, done, value, header, _yield$_awaitAsyncGen2, _done, gnuLongPathBytes, _yield$_awaitAsyncGen3, _done2, gnuLongLinkPathBytes, _yield$_awaitAsyncGen4, _done3, paxGlobalBytes, _yield$_awaitAsyncGen5, _done4, paxBytes, bytesRemaining, bodyConsumed, firstChunk, body, _;\n\n                return _regeneratorRuntime().wrap(function _loop$(_context3) {\n                  while (1) {\n                    switch (_context3.prev = _context3.next) {\n                      case 0:\n                        headerBytes = void 0;\n                        _context3.prev = 1;\n                        _context3.next = 4;\n                        return _awaitAsyncGenerator(reader.next(512));\n\n                      case 4:\n                        _yield$_awaitAsyncGen = _context3.sent;\n                        done = _yield$_awaitAsyncGen.done;\n                        value = _yield$_awaitAsyncGen.value;\n\n                        if (!done) {\n                          _context3.next = 9;\n                          break;\n                        }\n\n                        return _context3.abrupt(\"return\", {\n                          v: void 0\n                        });\n\n                      case 9:\n                        headerBytes = value;\n                        _context3.next = 17;\n                        break;\n\n                      case 12:\n                        _context3.prev = 12;\n                        _context3.t0 = _context3[\"catch\"](1);\n\n                        if (!(_context3.t0.code === 'ERR_UNDER_READ')) {\n                          _context3.next = 16;\n                          break;\n                        }\n\n                        return _context3.abrupt(\"return\", {\n                          v: void 0\n                        });\n\n                      case 16:\n                        throw _context3.t0;\n\n                      case 17:\n                        header = Headers.decode(headerBytes, options.filenameEncoding);\n\n                        if (header) {\n                          _context3.next = 20;\n                          break;\n                        }\n\n                        return _context3.abrupt(\"return\", \"continue\");\n\n                      case 20:\n                        if (!(header.type === 'gnu-long-path')) {\n                          _context3.next = 32;\n                          break;\n                        }\n\n                        _context3.next = 23;\n                        return _awaitAsyncGenerator(reader.next(header.size));\n\n                      case 23:\n                        _yield$_awaitAsyncGen2 = _context3.sent;\n                        _done = _yield$_awaitAsyncGen2.done;\n                        gnuLongPathBytes = _yield$_awaitAsyncGen2.value;\n\n                        if (!_done) {\n                          _context3.next = 28;\n                          break;\n                        }\n\n                        return _context3.abrupt(\"return\", {\n                          v: void 0\n                        });\n\n                      case 28:\n                        gnuLongPath = Headers.decodeLongPath(gnuLongPathBytes, options.filenameEncoding);\n                        _context3.next = 31;\n                        return _awaitAsyncGenerator(discardPadding(reader, header.size));\n\n                      case 31:\n                        return _context3.abrupt(\"return\", \"continue\");\n\n                      case 32:\n                        if (!(header.type === 'gnu-long-link-path')) {\n                          _context3.next = 44;\n                          break;\n                        }\n\n                        _context3.next = 35;\n                        return _awaitAsyncGenerator(reader.next(header.size));\n\n                      case 35:\n                        _yield$_awaitAsyncGen3 = _context3.sent;\n                        _done2 = _yield$_awaitAsyncGen3.done;\n                        gnuLongLinkPathBytes = _yield$_awaitAsyncGen3.value;\n\n                        if (!_done2) {\n                          _context3.next = 40;\n                          break;\n                        }\n\n                        return _context3.abrupt(\"return\", {\n                          v: void 0\n                        });\n\n                      case 40:\n                        gnuLongLinkPath = Headers.decodeLongPath(gnuLongLinkPathBytes, options.filenameEncoding);\n                        _context3.next = 43;\n                        return _awaitAsyncGenerator(discardPadding(reader, header.size));\n\n                      case 43:\n                        return _context3.abrupt(\"return\", \"continue\");\n\n                      case 44:\n                        if (!(header.type === 'pax-global-header')) {\n                          _context3.next = 56;\n                          break;\n                        }\n\n                        _context3.next = 47;\n                        return _awaitAsyncGenerator(reader.next(header.size));\n\n                      case 47:\n                        _yield$_awaitAsyncGen4 = _context3.sent;\n                        _done3 = _yield$_awaitAsyncGen4.done;\n                        paxGlobalBytes = _yield$_awaitAsyncGen4.value;\n\n                        if (!_done3) {\n                          _context3.next = 52;\n                          break;\n                        }\n\n                        return _context3.abrupt(\"return\", {\n                          v: void 0\n                        });\n\n                      case 52:\n                        paxGlobal = Headers.decodePax(paxGlobalBytes, options.filenameEncoding);\n                        _context3.next = 55;\n                        return _awaitAsyncGenerator(discardPadding(reader, header.size));\n\n                      case 55:\n                        return _context3.abrupt(\"return\", \"continue\");\n\n                      case 56:\n                        if (!(header.type === 'pax-header')) {\n                          _context3.next = 69;\n                          break;\n                        }\n\n                        _context3.next = 59;\n                        return _awaitAsyncGenerator(reader.next(header.size));\n\n                      case 59:\n                        _yield$_awaitAsyncGen5 = _context3.sent;\n                        _done4 = _yield$_awaitAsyncGen5.done;\n                        paxBytes = _yield$_awaitAsyncGen5.value;\n\n                        if (!_done4) {\n                          _context3.next = 64;\n                          break;\n                        }\n\n                        return _context3.abrupt(\"return\", {\n                          v: void 0\n                        });\n\n                      case 64:\n                        pax = Headers.decodePax(paxBytes, options.filenameEncoding);\n                        if (paxGlobal) pax = _objectSpread(_objectSpread({}, paxGlobal), pax);\n                        _context3.next = 68;\n                        return _awaitAsyncGenerator(discardPadding(reader, header.size));\n\n                      case 68:\n                        return _context3.abrupt(\"return\", \"continue\");\n\n                      case 69:\n                        if (gnuLongPath) {\n                          header.name = gnuLongPath;\n                          gnuLongPath = null;\n                        }\n\n                        if (gnuLongLinkPath) {\n                          header.linkname = gnuLongLinkPath;\n                          gnuLongLinkPath = null;\n                        }\n\n                        if (pax) {\n                          if (pax.path) header.name = pax.path;\n                          if (pax.linkpath) header.linkname = pax.linkpath;\n                          if (pax.size) header.size = parseInt(pax.size, 10);\n                          header.pax = pax;\n                          pax = null;\n                        }\n\n                        if (!(!header.size || header.type === 'directory')) {\n                          _context3.next = 76;\n                          break;\n                        }\n\n                        _context3.next = 75;\n                        return {\n                          header: header,\n                          body: _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n                            return _regeneratorRuntime().wrap(function _callee$(_context) {\n                              while (1) {\n                                switch (_context.prev = _context.next) {\n                                  case 0:\n                                  case \"end\":\n                                    return _context.stop();\n                                }\n                              }\n                            }, _callee);\n                          }))()\n                        };\n\n                      case 75:\n                        return _context3.abrupt(\"return\", \"continue\");\n\n                      case 76:\n                        bytesRemaining = header.size;\n                        bodyConsumed = defer(); // Prefetch the first chunk.\n                        // This allows us to stream entries for small files from the tar without\n                        // explicitly streaming the body of each.\n\n                        _context3.next = 80;\n                        return _awaitAsyncGenerator(reader.nextLte(Math.min(bytesRemaining, options.highWaterMark)));\n\n                      case 80:\n                        firstChunk = _context3.sent;\n                        bytesRemaining -= firstChunk.value.length;\n                        if (!bytesRemaining) bodyConsumed.resolve();\n                        body = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n                          var _yield$_awaitAsyncGen6, _done5, _value;\n\n                          return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n                            while (1) {\n                              switch (_context2.prev = _context2.next) {\n                                case 0:\n                                  _context2.prev = 0;\n                                  _context2.next = 3;\n                                  return firstChunk.value;\n\n                                case 3:\n                                  if (!bytesRemaining) {\n                                    _context2.next = 17;\n                                    break;\n                                  }\n\n                                  _context2.next = 6;\n                                  return _awaitAsyncGenerator(reader.nextLte(bytesRemaining));\n\n                                case 6:\n                                  _yield$_awaitAsyncGen6 = _context2.sent;\n                                  _done5 = _yield$_awaitAsyncGen6.done;\n                                  _value = _yield$_awaitAsyncGen6.value;\n\n                                  if (!_done5) {\n                                    _context2.next = 12;\n                                    break;\n                                  }\n\n                                  bytesRemaining = 0;\n                                  return _context2.abrupt(\"return\");\n\n                                case 12:\n                                  bytesRemaining -= _value.length;\n                                  _context2.next = 15;\n                                  return _value;\n\n                                case 15:\n                                  _context2.next = 3;\n                                  break;\n\n                                case 17:\n                                  _context2.prev = 17;\n                                  bodyConsumed.resolve();\n                                  return _context2.finish(17);\n\n                                case 20:\n                                case \"end\":\n                                  return _context2.stop();\n                              }\n                            }\n                          }, _callee2, null, [[0,, 17, 20]]);\n                        }))();\n                        _context3.next = 86;\n                        return {\n                          header: header,\n                          body: body\n                        };\n\n                      case 86:\n                        _context3.next = 88;\n                        return _awaitAsyncGenerator(bodyConsumed.promise);\n\n                      case 88:\n                        if (!bytesRemaining) {\n                          _context3.next = 116;\n                          break;\n                        }\n\n                        _iteratorAbruptCompletion = false;\n                        _didIteratorError = false;\n                        _context3.prev = 91;\n                        _iterator = _asyncIterator(body);\n\n                      case 93:\n                        _context3.next = 95;\n                        return _awaitAsyncGenerator(_iterator.next());\n\n                      case 95:\n                        if (!(_iteratorAbruptCompletion = !(_step = _context3.sent).done)) {\n                          _context3.next = 100;\n                          break;\n                        }\n\n                        _ = _step.value;\n\n                      case 97:\n                        _iteratorAbruptCompletion = false;\n                        _context3.next = 93;\n                        break;\n\n                      case 100:\n                        _context3.next = 106;\n                        break;\n\n                      case 102:\n                        _context3.prev = 102;\n                        _context3.t1 = _context3[\"catch\"](91);\n                        _didIteratorError = true;\n                        _iteratorError = _context3.t1;\n\n                      case 106:\n                        _context3.prev = 106;\n                        _context3.prev = 107;\n\n                        if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n                          _context3.next = 111;\n                          break;\n                        }\n\n                        _context3.next = 111;\n                        return _awaitAsyncGenerator(_iterator.return());\n\n                      case 111:\n                        _context3.prev = 111;\n\n                        if (!_didIteratorError) {\n                          _context3.next = 114;\n                          break;\n                        }\n\n                        throw _iteratorError;\n\n                      case 114:\n                        return _context3.finish(111);\n\n                      case 115:\n                        return _context3.finish(106);\n\n                      case 116:\n                        _context3.next = 118;\n                        return _awaitAsyncGenerator(discardPadding(reader, header.size));\n\n                      case 118:\n                      case \"end\":\n                        return _context3.stop();\n                    }\n                  }\n                }, _loop, null, [[1, 12], [91, 102, 106, 116], [107,, 111, 115]]);\n              });\n\n            case 3:\n              if (!true) {\n                _context4.next = 12;\n                break;\n              }\n\n              return _context4.delegateYield(_loop(), \"t0\", 5);\n\n            case 5:\n              _ret = _context4.t0;\n\n              if (!(_ret === \"continue\")) {\n                _context4.next = 8;\n                break;\n              }\n\n              return _context4.abrupt(\"continue\", 3);\n\n            case 8:\n              if (!(typeof _ret === \"object\")) {\n                _context4.next = 10;\n                break;\n              }\n\n              return _context4.abrupt(\"return\", _ret.v);\n\n            case 10:\n              _context4.next = 3;\n              break;\n\n            case 12:\n              _context4.prev = 12;\n              _context4.next = 15;\n              return _awaitAsyncGenerator(reader.return());\n\n            case 15:\n              return _context4.finish(12);\n\n            case 16:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee3, null, [[1,, 12, 16]]);\n    }))();\n  };\n};","map":{"version":3,"names":["defer","require","Headers","LteReader","getPadding","size","discardPadding","reader","overflow","next","module","exports","options","highWaterMark","source","headerBytes","done","value","code","header","decode","filenameEncoding","type","gnuLongPathBytes","gnuLongPath","decodeLongPath","gnuLongLinkPathBytes","gnuLongLinkPath","paxGlobalBytes","paxGlobal","decodePax","paxBytes","pax","name","linkname","path","linkpath","parseInt","body","bytesRemaining","bodyConsumed","nextLte","Math","min","firstChunk","length","resolve","promise","_","return"],"sources":["C:/Users/User/Documents/clone-starter-kit-08/node_modules/it-tar/extract.js"],"sourcesContent":["const defer = require('p-defer')\r\nconst Headers = require('./extract-headers')\r\nconst LteReader = require('./lte-reader')\r\n\r\nfunction getPadding (size) {\r\n  size &= 511\r\n  return size && 512 - size\r\n}\r\n\r\nasync function discardPadding (reader, size) {\r\n  const overflow = getPadding(size)\r\n  if (overflow) await reader.next(overflow)\r\n}\r\n\r\nmodule.exports = options => {\r\n  options = options || {}\r\n  options.highWaterMark = options.highWaterMark || 1024 * 16\r\n\r\n  return source => (async function * () {\r\n    const reader = LteReader(source)\r\n    let gnuLongPath, gnuLongLinkPath, paxGlobal, pax\r\n\r\n    try {\r\n      while (true) {\r\n        let headerBytes\r\n        try {\r\n          const { done, value } = await reader.next(512)\r\n          if (done) return\r\n          headerBytes = value\r\n        } catch (err) {\r\n          // Is ok, this is the end of the stream!\r\n          if (err.code === 'ERR_UNDER_READ') return\r\n          throw err\r\n        }\r\n\r\n        const header = Headers.decode(headerBytes, options.filenameEncoding)\r\n        if (!header) continue\r\n\r\n        if (header.type === 'gnu-long-path') {\r\n          const { done, value: gnuLongPathBytes } = await reader.next(header.size)\r\n          if (done) return\r\n          gnuLongPath = Headers.decodeLongPath(gnuLongPathBytes, options.filenameEncoding)\r\n          await discardPadding(reader, header.size)\r\n          continue\r\n        }\r\n\r\n        if (header.type === 'gnu-long-link-path') {\r\n          const { done, value: gnuLongLinkPathBytes } = await reader.next(header.size)\r\n          if (done) return\r\n          gnuLongLinkPath = Headers.decodeLongPath(gnuLongLinkPathBytes, options.filenameEncoding)\r\n          await discardPadding(reader, header.size)\r\n          continue\r\n        }\r\n\r\n        if (header.type === 'pax-global-header') {\r\n          const { done, value: paxGlobalBytes } = await reader.next(header.size)\r\n          if (done) return\r\n          paxGlobal = Headers.decodePax(paxGlobalBytes, options.filenameEncoding)\r\n          await discardPadding(reader, header.size)\r\n          continue\r\n        }\r\n\r\n        if (header.type === 'pax-header') {\r\n          const { done, value: paxBytes } = await reader.next(header.size)\r\n          if (done) return\r\n          pax = Headers.decodePax(paxBytes, options.filenameEncoding)\r\n          if (paxGlobal) pax = { ...paxGlobal, ...pax }\r\n          await discardPadding(reader, header.size)\r\n          continue\r\n        }\r\n\r\n        if (gnuLongPath) {\r\n          header.name = gnuLongPath\r\n          gnuLongPath = null\r\n        }\r\n\r\n        if (gnuLongLinkPath) {\r\n          header.linkname = gnuLongLinkPath\r\n          gnuLongLinkPath = null\r\n        }\r\n\r\n        if (pax) {\r\n          if (pax.path) header.name = pax.path\r\n          if (pax.linkpath) header.linkname = pax.linkpath\r\n          if (pax.size) header.size = parseInt(pax.size, 10)\r\n          header.pax = pax\r\n          pax = null\r\n        }\r\n\r\n        if (!header.size || header.type === 'directory') {\r\n          yield { header, body: (async function * () {})() }\r\n          continue\r\n        }\r\n\r\n        let bytesRemaining = header.size\r\n        const bodyConsumed = defer()\r\n\r\n        // Prefetch the first chunk.\r\n        // This allows us to stream entries for small files from the tar without\r\n        // explicitly streaming the body of each.\r\n        const firstChunk = await reader.nextLte(Math.min(bytesRemaining, options.highWaterMark))\r\n        bytesRemaining -= firstChunk.value.length\r\n\r\n        if (!bytesRemaining) bodyConsumed.resolve()\r\n\r\n        const body = (async function * () {\r\n          try {\r\n            yield firstChunk.value\r\n\r\n            while (bytesRemaining) {\r\n              const { done, value } = await reader.nextLte(bytesRemaining)\r\n              if (done) {\r\n                bytesRemaining = 0\r\n                return\r\n              }\r\n              bytesRemaining -= value.length\r\n              yield value\r\n            }\r\n          } finally {\r\n            bodyConsumed.resolve()\r\n          }\r\n        })()\r\n\r\n        yield { header, body }\r\n\r\n        // Wait for the body to be consumed\r\n        await bodyConsumed.promise\r\n\r\n        // Incase the body was not consumed entirely...\r\n        if (bytesRemaining) {\r\n          for await (const _ of body) {} // eslint-disable-line no-unused-vars\r\n        }\r\n\r\n        await discardPadding(reader, header.size)\r\n      }\r\n    } finally {\r\n      await reader.return()\r\n    }\r\n  })()\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}