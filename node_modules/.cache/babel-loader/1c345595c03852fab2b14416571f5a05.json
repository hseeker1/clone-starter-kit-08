{"ast":null,"code":"var _createForOfIteratorHelper = require(\"C:\\\\Users\\\\User\\\\Documents\\\\clone-starter-kit-08\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createForOfIteratorHelper\");\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\User\\\\Documents\\\\clone-starter-kit-08\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\User\\\\Documents\\\\clone-starter-kit-08\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\n/*\r\n    Copyright 2022 The caver-js Authors\r\n    This file is part of the caver-js library.\r\n\r\n    The caver-js library is free software: you can redistribute it and/or modify\r\n    it under the terms of the GNU Lesser General Public License as published by\r\n    the Free Software Foundation, either version 3 of the License, or\r\n    (at your option) any later version.\r\n\r\n    The caver-js library is distributed in the hope that it will be useful,\r\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\r\n    GNU Lesser General Public License for more details.\r\n\r\n    You should have received a copy of the GNU Lesser General Public License\r\n    along with the caver-js. If not, see <http://www.gnu.org/licenses/>.\r\n*/\nvar _ = require('lodash');\n\nvar utils = require('../../../caver-utils/src');\n/**\r\n * An object defines the access tuple.\r\n *\r\n * @typedef {object} module:Transaction.AccessTupleObject\r\n * @property {string} address - The address string.\r\n * @property {Array.<string>} storageKeys - An array of the storage keys.\r\n */\n\n/**\r\n * Represents an access tuple that has an address and storage keys.\r\n * AccessTuple is the element type of the access list.\r\n * @class\r\n */\n\n\nvar AccessTuple = /*#__PURE__*/function () {\n  \"use strict\";\n\n  /**\r\n   * Creates an access tuple.\r\n   * @constructor\r\n   * @param {string} address - The address string.\r\n   * @param {Array.<string>} storageKeys - An array of the storage keys.\r\n   */\n  function AccessTuple(address, storageKeys) {\n    _classCallCheck(this, AccessTuple);\n\n    this.address = address;\n    this.storageKeys = storageKeys;\n  }\n  /**\r\n   * @type {string}\r\n   */\n\n\n  _createClass(AccessTuple, [{\n    key: \"address\",\n    get: function get() {\n      return this._address;\n    },\n    set: function set(addr) {\n      if (!_.isString(addr)) throw new Error(\"Invalid address type: Address should be string type \".concat(typeof addr));\n      if (!utils.isAddress(addr)) throw new Error(\"Invalid address: \".concat(addr));\n      addr = utils.addHexPrefix(addr);\n      this._address = addr;\n    }\n    /**\r\n     * @type {Array.<string>}\r\n     */\n\n  }, {\n    key: \"storageKeys\",\n    get: function get() {\n      return this._storageKeys;\n    },\n    set: function set(keys) {\n      if (!_.isArray(keys)) keys = [keys];\n\n      var _iterator = _createForOfIteratorHelper(keys),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var k = _step.value;\n          if (!_.isString(k)) throw new Error(\"Invalid storageKey type: Storage key should be string type \".concat(typeof k));\n          if (!utils.isHex(k)) throw new Error(\"Invalid storageKey: The storage key must be a hexadecimal string \".concat(k));\n          k = utils.addHexPrefix(k);\n          if (k.length !== 66) throw new Error(\"Invalid storageKey length: The storage key must be a 32-byte\");\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      keys.sort();\n      this._storageKeys = keys;\n    }\n    /**\r\n     * Returns an encoded access tuple.\r\n     *\r\n     * @example\r\n     * const result = accessTuple.encodeToBytes()\r\n     *\r\n     * @return {Array.<string|Array.<string>>} An encoded access tuple.\r\n     */\n\n  }, {\n    key: \"encodeToBytes\",\n    value: function encodeToBytes() {\n      var storageItems = [];\n\n      var _iterator2 = _createForOfIteratorHelper(this.storageKeys),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var key = _step2.value;\n          storageItems.push(key.toLowerCase());\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      return [this.address.toLowerCase(), storageItems];\n    }\n    /**\r\n     * Returns whether the AccessTuple object is the same as the accessTuple passed as a parameter.\r\n     *\r\n     * @example\r\n     * const result = accessTuple.isEqual(at)\r\n     *\r\n     * @return {boolean} Returns `true` is accessTuple has value with a param.\r\n     */\n\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(at) {\n      if (this.storageKeys.length !== at.storageKeys.length) return false;\n      if (this.address.toLowerCase() !== at.address.toLowerCase()) return false;\n\n      for (var i = 0; i < this.storageKeys.length; i++) {\n        if (this.storageKeys[i].toLowerCase() !== at.storageKeys[i].toLowerCase()) return false;\n      }\n\n      return true;\n    }\n    /**\r\n     * Returns a JSON object without _ prefix variable name.\r\n     *\r\n     * @example\r\n     * const result = accessTuple.toObject()\r\n     *\r\n     * @return {module:Transaction.AccessTupleObject} An access tuple object.\r\n     */\n\n  }, {\n    key: \"toObject\",\n    value: function toObject() {\n      var accessTupleObject = {\n        address: this.address,\n        storageKeys: []\n      };\n\n      var _iterator3 = _createForOfIteratorHelper(this.storageKeys),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var sk = _step3.value;\n          accessTupleObject.storageKeys.push(sk);\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n\n      return accessTupleObject;\n    }\n  }], [{\n    key: \"create\",\n    value:\n    /**\r\n     * Creates an access tuple.\r\n     *\r\n     * @example\r\n     * const result = caver.transaction.utils.accessTuple.create('0x{address in hex}', [ '0x{storage key}' ])\r\n     *\r\n     * @param {string} address - The address string.\r\n     * @param {Array.<string>} storageKeys - An array of the storage keys.\r\n     * @return {AccessTuple} An access tuple.\r\n     */\n    function create(address, storageKeys) {\n      return new AccessTuple(address, storageKeys);\n    }\n  }]);\n\n  return AccessTuple;\n}();\n\nmodule.exports = AccessTuple;","map":{"version":3,"names":["_","require","utils","AccessTuple","address","storageKeys","_address","addr","isString","Error","isAddress","addHexPrefix","_storageKeys","keys","isArray","k","isHex","length","sort","storageItems","key","push","toLowerCase","at","i","accessTupleObject","sk","module","exports"],"sources":["C:/Users/User/Documents/clone-starter-kit-08/node_modules/caver-js/packages/caver-transaction/src/utils/accessTuple.js"],"sourcesContent":["/*\r\n    Copyright 2022 The caver-js Authors\r\n    This file is part of the caver-js library.\r\n\r\n    The caver-js library is free software: you can redistribute it and/or modify\r\n    it under the terms of the GNU Lesser General Public License as published by\r\n    the Free Software Foundation, either version 3 of the License, or\r\n    (at your option) any later version.\r\n\r\n    The caver-js library is distributed in the hope that it will be useful,\r\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\r\n    GNU Lesser General Public License for more details.\r\n\r\n    You should have received a copy of the GNU Lesser General Public License\r\n    along with the caver-js. If not, see <http://www.gnu.org/licenses/>.\r\n*/\r\n\r\nconst _ = require('lodash')\r\nconst utils = require('../../../caver-utils/src')\r\n\r\n/**\r\n * An object defines the access tuple.\r\n *\r\n * @typedef {object} module:Transaction.AccessTupleObject\r\n * @property {string} address - The address string.\r\n * @property {Array.<string>} storageKeys - An array of the storage keys.\r\n */\r\n/**\r\n * Represents an access tuple that has an address and storage keys.\r\n * AccessTuple is the element type of the access list.\r\n * @class\r\n */\r\nclass AccessTuple {\r\n    /**\r\n     * Creates an access tuple.\r\n     *\r\n     * @example\r\n     * const result = caver.transaction.utils.accessTuple.create('0x{address in hex}', [ '0x{storage key}' ])\r\n     *\r\n     * @param {string} address - The address string.\r\n     * @param {Array.<string>} storageKeys - An array of the storage keys.\r\n     * @return {AccessTuple} An access tuple.\r\n     */\r\n    static create(address, storageKeys) {\r\n        return new AccessTuple(address, storageKeys)\r\n    }\r\n\r\n    /**\r\n     * Creates an access tuple.\r\n     * @constructor\r\n     * @param {string} address - The address string.\r\n     * @param {Array.<string>} storageKeys - An array of the storage keys.\r\n     */\r\n    constructor(address, storageKeys) {\r\n        this.address = address\r\n        this.storageKeys = storageKeys\r\n    }\r\n\r\n    /**\r\n     * @type {string}\r\n     */\r\n    get address() {\r\n        return this._address\r\n    }\r\n\r\n    set address(addr) {\r\n        if (!_.isString(addr)) throw new Error(`Invalid address type: Address should be string type ${typeof addr}`)\r\n        if (!utils.isAddress(addr)) throw new Error(`Invalid address: ${addr}`)\r\n        addr = utils.addHexPrefix(addr)\r\n        this._address = addr\r\n    }\r\n\r\n    /**\r\n     * @type {Array.<string>}\r\n     */\r\n    get storageKeys() {\r\n        return this._storageKeys\r\n    }\r\n\r\n    set storageKeys(keys) {\r\n        if (!_.isArray(keys)) keys = [keys]\r\n        for (let k of keys) {\r\n            if (!_.isString(k)) throw new Error(`Invalid storageKey type: Storage key should be string type ${typeof k}`)\r\n            if (!utils.isHex(k)) throw new Error(`Invalid storageKey: The storage key must be a hexadecimal string ${k}`)\r\n            k = utils.addHexPrefix(k)\r\n            if (k.length !== 66) throw new Error(`Invalid storageKey length: The storage key must be a 32-byte`)\r\n        }\r\n        keys.sort()\r\n        this._storageKeys = keys\r\n    }\r\n\r\n    /**\r\n     * Returns an encoded access tuple.\r\n     *\r\n     * @example\r\n     * const result = accessTuple.encodeToBytes()\r\n     *\r\n     * @return {Array.<string|Array.<string>>} An encoded access tuple.\r\n     */\r\n    encodeToBytes() {\r\n        const storageItems = []\r\n        for (const key of this.storageKeys) {\r\n            storageItems.push(key.toLowerCase())\r\n        }\r\n        return [this.address.toLowerCase(), storageItems]\r\n    }\r\n\r\n    /**\r\n     * Returns whether the AccessTuple object is the same as the accessTuple passed as a parameter.\r\n     *\r\n     * @example\r\n     * const result = accessTuple.isEqual(at)\r\n     *\r\n     * @return {boolean} Returns `true` is accessTuple has value with a param.\r\n     */\r\n    isEqual(at) {\r\n        if (this.storageKeys.length !== at.storageKeys.length) return false\r\n        if (this.address.toLowerCase() !== at.address.toLowerCase()) return false\r\n\r\n        for (let i = 0; i < this.storageKeys.length; i++) {\r\n            if (this.storageKeys[i].toLowerCase() !== at.storageKeys[i].toLowerCase()) return false\r\n        }\r\n        return true\r\n    }\r\n\r\n    /**\r\n     * Returns a JSON object without _ prefix variable name.\r\n     *\r\n     * @example\r\n     * const result = accessTuple.toObject()\r\n     *\r\n     * @return {module:Transaction.AccessTupleObject} An access tuple object.\r\n     */\r\n    toObject() {\r\n        const accessTupleObject = { address: this.address, storageKeys: [] }\r\n        for (const sk of this.storageKeys) {\r\n            accessTupleObject.storageKeys.push(sk)\r\n        }\r\n        return accessTupleObject\r\n    }\r\n}\r\n\r\nmodule.exports = AccessTuple\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}