{"ast":null,"code":"'use strict';\n\nconst sortLinks = require('./sortLinks');\n\nconst DAGLink = require('../dag-link');\n\nconst asDAGLink = link => {\n  if (DAGLink.isDAGLink(link)) {\n    // It's a DAGLink instance\n    // no need to do anything\n    return link;\n  } // DAGNode.isDagNode() would be more appropriate here, but it can't be used\n  // as it would lead to circular dependencies as `addLink` is called from\n  // within the DAGNode object.\n\n\n  if (!('cid' in link || 'hash' in link || 'Hash' in link || 'multihash' in link)) {\n    throw new Error('Link must be a DAGLink or DAGLink-like. Convert the DAGNode into a DAGLink via `node.toDAGLink()`.');\n  } // It's a Object with name, multihash/hash/cid and size\n\n\n  return new DAGLink(link.Name || link.name, link.Tsize || link.size, link.Hash || link.multihash || link.hash || link.cid);\n};\n\nconst addLink = (node, link) => {\n  const dagLink = asDAGLink(link);\n  node.Links.push(dagLink);\n  sortLinks(node.Links);\n};\n\nmodule.exports = addLink;","map":{"version":3,"names":["sortLinks","require","DAGLink","asDAGLink","link","isDAGLink","Error","Name","name","Tsize","size","Hash","multihash","hash","cid","addLink","node","dagLink","Links","push","module","exports"],"sources":["C:/Users/User/Documents/clone-starter-kit-08/node_modules/ipld-dag-pb/src/dag-node/addLink.js"],"sourcesContent":["'use strict'\r\n\r\nconst sortLinks = require('./sortLinks')\r\nconst DAGLink = require('../dag-link')\r\n\r\nconst asDAGLink = (link) => {\r\n  if (DAGLink.isDAGLink(link)) {\r\n    // It's a DAGLink instance\r\n    // no need to do anything\r\n    return link\r\n  }\r\n\r\n  // DAGNode.isDagNode() would be more appropriate here, but it can't be used\r\n  // as it would lead to circular dependencies as `addLink` is called from\r\n  // within the DAGNode object.\r\n  if (!('cid' in link ||\r\n        'hash' in link ||\r\n        'Hash' in link ||\r\n        'multihash' in link)) {\r\n    throw new Error('Link must be a DAGLink or DAGLink-like. Convert the DAGNode into a DAGLink via `node.toDAGLink()`.')\r\n  }\r\n\r\n  // It's a Object with name, multihash/hash/cid and size\r\n  return new DAGLink(link.Name || link.name, link.Tsize || link.size, link.Hash || link.multihash || link.hash || link.cid)\r\n}\r\n\r\nconst addLink = (node, link) => {\r\n  const dagLink = asDAGLink(link)\r\n  node.Links.push(dagLink)\r\n  sortLinks(node.Links)\r\n}\r\n\r\nmodule.exports = addLink\r\n"],"mappings":"AAAA;;AAEA,MAAMA,SAAS,GAAGC,OAAO,CAAC,aAAD,CAAzB;;AACA,MAAMC,OAAO,GAAGD,OAAO,CAAC,aAAD,CAAvB;;AAEA,MAAME,SAAS,GAAIC,IAAD,IAAU;EAC1B,IAAIF,OAAO,CAACG,SAAR,CAAkBD,IAAlB,CAAJ,EAA6B;IAC3B;IACA;IACA,OAAOA,IAAP;EACD,CALyB,CAO1B;EACA;EACA;;;EACA,IAAI,EAAE,SAASA,IAAT,IACA,UAAUA,IADV,IAEA,UAAUA,IAFV,IAGA,eAAeA,IAHjB,CAAJ,EAG4B;IAC1B,MAAM,IAAIE,KAAJ,CAAU,oGAAV,CAAN;EACD,CAfyB,CAiB1B;;;EACA,OAAO,IAAIJ,OAAJ,CAAYE,IAAI,CAACG,IAAL,IAAaH,IAAI,CAACI,IAA9B,EAAoCJ,IAAI,CAACK,KAAL,IAAcL,IAAI,CAACM,IAAvD,EAA6DN,IAAI,CAACO,IAAL,IAAaP,IAAI,CAACQ,SAAlB,IAA+BR,IAAI,CAACS,IAApC,IAA4CT,IAAI,CAACU,GAA9G,CAAP;AACD,CAnBD;;AAqBA,MAAMC,OAAO,GAAG,CAACC,IAAD,EAAOZ,IAAP,KAAgB;EAC9B,MAAMa,OAAO,GAAGd,SAAS,CAACC,IAAD,CAAzB;EACAY,IAAI,CAACE,KAAL,CAAWC,IAAX,CAAgBF,OAAhB;EACAjB,SAAS,CAACgB,IAAI,CAACE,KAAN,CAAT;AACD,CAJD;;AAMAE,MAAM,CAACC,OAAP,GAAiBN,OAAjB"},"metadata":{},"sourceType":"script"}