{"ast":null,"code":"var _classCallCheck = require(\"C:\\\\Users\\\\User\\\\Documents\\\\clone-starter-kit-08\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\User\\\\Documents\\\\clone-starter-kit-08\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar _inherits = require(\"C:\\\\Users\\\\User\\\\Documents\\\\clone-starter-kit-08\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\n\nvar _createSuper = require(\"C:\\\\Users\\\\User\\\\Documents\\\\clone-starter-kit-08\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createSuper\");\n\n/*\r\n    Copyright 2020 The caver-js Authors\r\n    This file is part of the caver-js library.\r\n\r\n    The caver-js library is free software: you can redistribute it and/or modify\r\n    it under the terms of the GNU Lesser General Public License as published by\r\n    the Free Software Foundation, either version 3 of the License, or\r\n    (at your option) any later version.\r\n\r\n    The caver-js library is distributed in the hope that it will be useful,\r\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\r\n    GNU Lesser General Public License for more details.\r\n\r\n    You should have received a copy of the GNU Lesser General Public License\r\n    along with the caver-js. If not, see <http://www.gnu.org/licenses/>.\r\n*/\nvar _ = require('lodash');\n\nvar AbstractFeeDelegatedTransaction = require('./abstractFeeDelegatedTransaction');\n\nvar utils = require('../../../caver-utils/src');\n/**\r\n * Abstract class that implements common logic for each fee delegated with ratio transaction type.\r\n * @class\r\n * @hideconstructor\r\n * @abstract\r\n * @augments AbstractFeeDelegatedTransaction\r\n */\n\n\nvar AbstractFeeDelegatedWithRatioTransaction = /*#__PURE__*/function (_AbstractFeeDelegated) {\n  \"use strict\";\n\n  _inherits(AbstractFeeDelegatedWithRatioTransaction, _AbstractFeeDelegated);\n\n  var _super = _createSuper(AbstractFeeDelegatedWithRatioTransaction);\n\n  /**\r\n   * Abstract class that implements common logic for each fee-delegated with ratio transaction type.\r\n   * In this constructor, feeRatio is set as transaction member variables.\r\n   *\r\n   * @constructor\r\n   * @param {string} typeString - The type string of transaction.\r\n   * @param {object} createTxObj - The parameters to create an instance of transaction.\r\n   * @param {object} [klaytnCall] - An object includes klay rpc calls.\r\n   */\n  function AbstractFeeDelegatedWithRatioTransaction(typeString, createTxObj, klaytnCall) {\n    var _this;\n\n    _classCallCheck(this, AbstractFeeDelegatedWithRatioTransaction);\n\n    _this = _super.call(this, typeString, createTxObj, klaytnCall);\n    _this.feeRatio = createTxObj.feeRatio;\n    return _this;\n  }\n  /**\r\n   * @type {string}\r\n   */\n\n\n  _createClass(AbstractFeeDelegatedWithRatioTransaction, [{\n    key: \"feeRatio\",\n    get: function get() {\n      return this._feeRatio;\n    },\n    set: function set(fr) {\n      if (!_.isNumber(fr) && !utils.isHex(fr)) throw new Error(\"Invalid type fo feeRatio: feeRatio should be number type or hex number string.\");\n      if (utils.hexToNumber(fr) <= 0 || utils.hexToNumber(fr) >= 100) throw new Error(\"Invalid feeRatio: feeRatio is out of range. [1, 99]\");\n      this._feeRatio = utils.numberToHex(fr);\n    }\n  }]);\n\n  return AbstractFeeDelegatedWithRatioTransaction;\n}(AbstractFeeDelegatedTransaction);\n\nmodule.exports = AbstractFeeDelegatedWithRatioTransaction;","map":{"version":3,"names":["_","require","AbstractFeeDelegatedTransaction","utils","AbstractFeeDelegatedWithRatioTransaction","typeString","createTxObj","klaytnCall","feeRatio","_feeRatio","fr","isNumber","isHex","Error","hexToNumber","numberToHex","module","exports"],"sources":["C:/Users/User/Documents/clone-starter-kit-08/node_modules/caver-js/packages/caver-transaction/src/transactionTypes/abstractFeeDelegatedWithRatioTransaction.js"],"sourcesContent":["/*\r\n    Copyright 2020 The caver-js Authors\r\n    This file is part of the caver-js library.\r\n\r\n    The caver-js library is free software: you can redistribute it and/or modify\r\n    it under the terms of the GNU Lesser General Public License as published by\r\n    the Free Software Foundation, either version 3 of the License, or\r\n    (at your option) any later version.\r\n\r\n    The caver-js library is distributed in the hope that it will be useful,\r\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\r\n    GNU Lesser General Public License for more details.\r\n\r\n    You should have received a copy of the GNU Lesser General Public License\r\n    along with the caver-js. If not, see <http://www.gnu.org/licenses/>.\r\n*/\r\n\r\nconst _ = require('lodash')\r\nconst AbstractFeeDelegatedTransaction = require('./abstractFeeDelegatedTransaction')\r\nconst utils = require('../../../caver-utils/src')\r\n\r\n/**\r\n * Abstract class that implements common logic for each fee delegated with ratio transaction type.\r\n * @class\r\n * @hideconstructor\r\n * @abstract\r\n * @augments AbstractFeeDelegatedTransaction\r\n */\r\nclass AbstractFeeDelegatedWithRatioTransaction extends AbstractFeeDelegatedTransaction {\r\n    /**\r\n     * Abstract class that implements common logic for each fee-delegated with ratio transaction type.\r\n     * In this constructor, feeRatio is set as transaction member variables.\r\n     *\r\n     * @constructor\r\n     * @param {string} typeString - The type string of transaction.\r\n     * @param {object} createTxObj - The parameters to create an instance of transaction.\r\n     * @param {object} [klaytnCall] - An object includes klay rpc calls.\r\n     */\r\n    constructor(typeString, createTxObj, klaytnCall) {\r\n        super(typeString, createTxObj, klaytnCall)\r\n        this.feeRatio = createTxObj.feeRatio\r\n    }\r\n\r\n    /**\r\n     * @type {string}\r\n     */\r\n    get feeRatio() {\r\n        return this._feeRatio\r\n    }\r\n\r\n    set feeRatio(fr) {\r\n        if (!_.isNumber(fr) && !utils.isHex(fr))\r\n            throw new Error(`Invalid type fo feeRatio: feeRatio should be number type or hex number string.`)\r\n        if (utils.hexToNumber(fr) <= 0 || utils.hexToNumber(fr) >= 100)\r\n            throw new Error(`Invalid feeRatio: feeRatio is out of range. [1, 99]`)\r\n\r\n        this._feeRatio = utils.numberToHex(fr)\r\n    }\r\n}\r\n\r\nmodule.exports = AbstractFeeDelegatedWithRatioTransaction\r\n"],"mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAMA,CAAC,GAAGC,OAAO,CAAC,QAAD,CAAjB;;AACA,IAAMC,+BAA+B,GAAGD,OAAO,CAAC,mCAAD,CAA/C;;AACA,IAAME,KAAK,GAAGF,OAAO,CAAC,0BAAD,CAArB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;IACMG,wC;;;;;;;EACF;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,kDAAYC,UAAZ,EAAwBC,WAAxB,EAAqCC,UAArC,EAAiD;IAAA;;IAAA;;IAC7C,0BAAMF,UAAN,EAAkBC,WAAlB,EAA+BC,UAA/B;IACA,MAAKC,QAAL,GAAgBF,WAAW,CAACE,QAA5B;IAF6C;EAGhD;EAED;AACJ;AACA;;;;;SACI,eAAe;MACX,OAAO,KAAKC,SAAZ;IACH,C;SAED,aAAaC,EAAb,EAAiB;MACb,IAAI,CAACV,CAAC,CAACW,QAAF,CAAWD,EAAX,CAAD,IAAmB,CAACP,KAAK,CAACS,KAAN,CAAYF,EAAZ,CAAxB,EACI,MAAM,IAAIG,KAAJ,kFAAN;MACJ,IAAIV,KAAK,CAACW,WAAN,CAAkBJ,EAAlB,KAAyB,CAAzB,IAA8BP,KAAK,CAACW,WAAN,CAAkBJ,EAAlB,KAAyB,GAA3D,EACI,MAAM,IAAIG,KAAJ,uDAAN;MAEJ,KAAKJ,SAAL,GAAiBN,KAAK,CAACY,WAAN,CAAkBL,EAAlB,CAAjB;IACH;;;;EA7BkDR,+B;;AAgCvDc,MAAM,CAACC,OAAP,GAAiBb,wCAAjB"},"metadata":{},"sourceType":"script"}