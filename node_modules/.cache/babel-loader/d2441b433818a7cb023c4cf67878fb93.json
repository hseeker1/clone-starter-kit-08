{"ast":null,"code":"/* eslint-disable require-await */\n'use strict';\n\nvar _asyncToGenerator = require(\"C:\\\\Users\\\\User\\\\Documents\\\\clone-starter-kit-08\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/asyncToGenerator\");\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nvar multihash = require('multihashes');\n/**\r\n * @typedef {import('multihashes').HashName} HashName\r\n * @typedef {import('./types').Digest} Digest\r\n */\n\n/**\r\n * @type {Crypto}\r\n */\n\n\nvar crypto = self.crypto ||\n/** @type {typeof window.crypto} */\n// @ts-ignore - unknown property\nself.msCrypto;\n/**\r\n *\r\n * @param {Uint8Array} data\r\n * @param {HashName} alg\r\n * @returns {Promise<Uint8Array>}\r\n */\n\nvar digest = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(data, alg) {\n    var d;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(typeof self === 'undefined' || !crypto)) {\n              _context.next = 2;\n              break;\n            }\n\n            throw new Error('Please use a browser with webcrypto support and ensure the code has been delivered securely via HTTPS/TLS and run within a Secure Context');\n\n          case 2:\n            _context.t0 = alg;\n            _context.next = _context.t0 === 'sha1' ? 5 : _context.t0 === 'sha2-256' ? 10 : _context.t0 === 'sha2-512' ? 15 : _context.t0 === 'dbl-sha2-256' ? 20 : 28;\n            break;\n\n          case 5:\n            _context.t1 = Uint8Array;\n            _context.next = 8;\n            return crypto.subtle.digest({\n              name: 'SHA-1'\n            }, data);\n\n          case 8:\n            _context.t2 = _context.sent;\n            return _context.abrupt(\"return\", new _context.t1(_context.t2));\n\n          case 10:\n            _context.t3 = Uint8Array;\n            _context.next = 13;\n            return crypto.subtle.digest({\n              name: 'SHA-256'\n            }, data);\n\n          case 13:\n            _context.t4 = _context.sent;\n            return _context.abrupt(\"return\", new _context.t3(_context.t4));\n\n          case 15:\n            _context.t5 = Uint8Array;\n            _context.next = 18;\n            return crypto.subtle.digest({\n              name: 'SHA-512'\n            }, data);\n\n          case 18:\n            _context.t6 = _context.sent;\n            return _context.abrupt(\"return\", new _context.t5(_context.t6));\n\n          case 20:\n            _context.next = 22;\n            return crypto.subtle.digest({\n              name: 'SHA-256'\n            }, data);\n\n          case 22:\n            d = _context.sent;\n            _context.t7 = Uint8Array;\n            _context.next = 26;\n            return crypto.subtle.digest({\n              name: 'SHA-256'\n            }, d);\n\n          case 26:\n            _context.t8 = _context.sent;\n            return _context.abrupt(\"return\", new _context.t7(_context.t8));\n\n          case 28:\n            throw new Error(\"\".concat(alg, \" is not a supported algorithm\"));\n\n          case 29:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function digest(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nmodule.exports = {\n  /**\r\n   * @param {HashName} alg\r\n   * @returns {Digest}\r\n   */\n  factory: function factory(alg) {\n    return /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(data) {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                return _context2.abrupt(\"return\", digest(data, alg));\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x3) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n  },\n  digest: digest,\n\n  /**\r\n   * @param {Uint8Array} buf\r\n   * @param {HashName} alg\r\n   * @param {number} [length]\r\n   */\n  multihashing: function () {\n    var _multihashing = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(buf, alg, length) {\n      var h;\n      return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return digest(buf, alg);\n\n            case 2:\n              h = _context3.sent;\n              return _context3.abrupt(\"return\", multihash.encode(h, alg, length));\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    function multihashing(_x4, _x5, _x6) {\n      return _multihashing.apply(this, arguments);\n    }\n\n    return multihashing;\n  }()\n};","map":{"version":3,"names":["multihash","require","crypto","self","msCrypto","digest","data","alg","Error","Uint8Array","subtle","name","d","module","exports","factory","multihashing","buf","length","h","encode"],"sources":["C:/Users/User/Documents/clone-starter-kit-08/node_modules/multihashing-async/src/sha.browser.js"],"sourcesContent":["/* eslint-disable require-await */\r\n'use strict'\r\n\r\nconst multihash = require('multihashes')\r\n/**\r\n * @typedef {import('multihashes').HashName} HashName\r\n * @typedef {import('./types').Digest} Digest\r\n */\r\n\r\n/**\r\n * @type {Crypto}\r\n */\r\nconst crypto =\r\n  self.crypto ||\r\n  /** @type {typeof window.crypto} */\r\n  // @ts-ignore - unknown property\r\n  (self.msCrypto)\r\n\r\n/**\r\n *\r\n * @param {Uint8Array} data\r\n * @param {HashName} alg\r\n * @returns {Promise<Uint8Array>}\r\n */\r\nconst digest = async (data, alg) => {\r\n  if (typeof self === 'undefined' || !crypto) {\r\n    throw new Error(\r\n      'Please use a browser with webcrypto support and ensure the code has been delivered securely via HTTPS/TLS and run within a Secure Context'\r\n    )\r\n  }\r\n  switch (alg) {\r\n    case 'sha1':\r\n      return new Uint8Array(await crypto.subtle.digest({ name: 'SHA-1' }, data))\r\n    case 'sha2-256':\r\n      return new Uint8Array(await crypto.subtle.digest({ name: 'SHA-256' }, data))\r\n    case 'sha2-512':\r\n      return new Uint8Array(await crypto.subtle.digest({ name: 'SHA-512' }, data))\r\n    case 'dbl-sha2-256': {\r\n      const d = await crypto.subtle.digest({ name: 'SHA-256' }, data)\r\n      return new Uint8Array(await crypto.subtle.digest({ name: 'SHA-256' }, d))\r\n    }\r\n    default:\r\n      throw new Error(`${alg} is not a supported algorithm`)\r\n  }\r\n}\r\n\r\nmodule.exports = {\r\n  /**\r\n   * @param {HashName} alg\r\n   * @returns {Digest}\r\n   */\r\n  factory: (alg) => async (data) => {\r\n    return digest(data, alg)\r\n  },\r\n  digest,\r\n  /**\r\n   * @param {Uint8Array} buf\r\n   * @param {HashName} alg\r\n   * @param {number} [length]\r\n   */\r\n  multihashing: async (buf, alg, length) => {\r\n    const h = await digest(buf, alg)\r\n    return multihash.encode(h, alg, length)\r\n  }\r\n}\r\n"],"mappings":"AAAA;AACA;;;;+CAAA,oJ;;AAEA,IAAMA,SAAS,GAAGC,OAAO,CAAC,aAAD,CAAzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AACA,IAAMC,MAAM,GACVC,IAAI,CAACD,MAAL;AACA;AACA;AACCC,IAAI,CAACC,QAJR;AAMA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAMC,MAAM;EAAA,sEAAG,iBAAOC,IAAP,EAAaC,GAAb;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA,MACT,OAAOJ,IAAP,KAAgB,WAAhB,IAA+B,CAACD,MADvB;cAAA;cAAA;YAAA;;YAAA,MAEL,IAAIM,KAAJ,CACJ,2IADI,CAFK;;UAAA;YAAA,cAMLD,GANK;YAAA,gCAON,MAPM,uBASN,UATM,wBAWN,UAXM,wBAaN,cAbM;YAAA;;UAAA;YAAA,cAQEE,UARF;YAAA;YAAA,OAQmBP,MAAM,CAACQ,MAAP,CAAcL,MAAd,CAAqB;cAAEM,IAAI,EAAE;YAAR,CAArB,EAAwCL,IAAxC,CARnB;;UAAA;YAAA;YAAA;;UAAA;YAAA,cAUEG,UAVF;YAAA;YAAA,OAUmBP,MAAM,CAACQ,MAAP,CAAcL,MAAd,CAAqB;cAAEM,IAAI,EAAE;YAAR,CAArB,EAA0CL,IAA1C,CAVnB;;UAAA;YAAA;YAAA;;UAAA;YAAA,cAYEG,UAZF;YAAA;YAAA,OAYmBP,MAAM,CAACQ,MAAP,CAAcL,MAAd,CAAqB;cAAEM,IAAI,EAAE;YAAR,CAArB,EAA0CL,IAA1C,CAZnB;;UAAA;YAAA;YAAA;;UAAA;YAAA;YAAA,OAcOJ,MAAM,CAACQ,MAAP,CAAcL,MAAd,CAAqB;cAAEM,IAAI,EAAE;YAAR,CAArB,EAA0CL,IAA1C,CAdP;;UAAA;YAcHM,CAdG;YAAA,cAeEH,UAfF;YAAA;YAAA,OAemBP,MAAM,CAACQ,MAAP,CAAcL,MAAd,CAAqB;cAAEM,IAAI,EAAE;YAAR,CAArB,EAA0CC,CAA1C,CAfnB;;UAAA;YAAA;YAAA;;UAAA;YAAA,MAkBH,IAAIJ,KAAJ,WAAaD,GAAb,mCAlBG;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAH;;EAAA,gBAANF,MAAM;IAAA;EAAA;AAAA,GAAZ;;AAsBAQ,MAAM,CAACC,OAAP,GAAiB;EACf;AACF;AACA;AACA;EACEC,OAAO,EAAE,iBAACR,GAAD;IAAA;MAAA,uEAAS,kBAAOD,IAAP;QAAA;UAAA;YAAA;cAAA;gBAAA,kCACTD,MAAM,CAACC,IAAD,EAAOC,GAAP,CADG;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,CAAT;;MAAA;QAAA;MAAA;IAAA;EAAA,CALM;EAQfF,MAAM,EAANA,MARe;;EASf;AACF;AACA;AACA;AACA;EACEW,YAAY;IAAA,+EAAE,kBAAOC,GAAP,EAAYV,GAAZ,EAAiBW,MAAjB;MAAA;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA,OACIb,MAAM,CAACY,GAAD,EAAMV,GAAN,CADV;;YAAA;cACNY,CADM;cAAA,kCAELnB,SAAS,CAACoB,MAAV,CAAiBD,CAAjB,EAAoBZ,GAApB,EAAyBW,MAAzB,CAFK;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAAF;;IAAA;MAAA;IAAA;;IAAA;EAAA;AAdG,CAAjB"},"metadata":{},"sourceType":"script"}