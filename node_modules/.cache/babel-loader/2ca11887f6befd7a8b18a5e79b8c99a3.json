{"ast":null,"code":"/*\r\n    Copyright 2018 The caver-js Authors\r\n    This file is part of the caver-js library.\r\n\r\n    The caver-js library is free software: you can redistribute it and/or modify\r\n    it under the terms of the GNU Lesser General Public License as published by\r\n    the Free Software Foundation, either version 3 of the License, or\r\n    (at your option) any later version.\r\n\r\n    The caver-js library is distributed in the hope that it will be useful,\r\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\r\n    GNU Lesser General Public License for more details.\r\n\r\n    You should have received a copy of the GNU Lesser General Public License\r\n    along with the caver-js. If not, see <http://www.gnu.org/licenses/>.\r\n*/\nconst timeMeasure = (memoize => () => (data, next, bypass) => {\n  if (!memoize[data.id]) {\n    memoize[data.id] = new Date().getTime();\n    bypass();\n    return;\n  }\n\n  memoize[data.id] = new Date().getTime() - memoize[data.id];\n  console.log(`request '${data.id}' takes an ${memoize[data.id]} milliseconds for responding. : ${data.method}`);\n  next(Object.assign(data, {\n    timeTakes: memoize[data.id]\n  }));\n})({});\n\nmodule.exports = timeMeasure;","map":{"version":3,"names":["timeMeasure","memoize","data","next","bypass","id","Date","getTime","console","log","method","Object","assign","timeTakes","module","exports"],"sources":["C:/Users/User/Documents/clone-starter-kit-08/node_modules/caver-js/packages/caver-middleware/src/builtins/timeMeasure.js"],"sourcesContent":["/*\r\n    Copyright 2018 The caver-js Authors\r\n    This file is part of the caver-js library.\r\n\r\n    The caver-js library is free software: you can redistribute it and/or modify\r\n    it under the terms of the GNU Lesser General Public License as published by\r\n    the Free Software Foundation, either version 3 of the License, or\r\n    (at your option) any later version.\r\n\r\n    The caver-js library is distributed in the hope that it will be useful,\r\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\r\n    GNU Lesser General Public License for more details.\r\n\r\n    You should have received a copy of the GNU Lesser General Public License\r\n    along with the caver-js. If not, see <http://www.gnu.org/licenses/>.\r\n*/\r\n\r\nconst timeMeasure = (memoize => () => (data, next, bypass) => {\r\n    if (!memoize[data.id]) {\r\n        memoize[data.id] = new Date().getTime()\r\n        bypass()\r\n        return\r\n    }\r\n\r\n    memoize[data.id] = new Date().getTime() - memoize[data.id]\r\n    console.log(`request '${data.id}' takes an ${memoize[data.id]} milliseconds for responding. : ${data.method}`)\r\n    next(\r\n        Object.assign(data, {\r\n            timeTakes: memoize[data.id],\r\n        })\r\n    )\r\n})({})\r\n\r\nmodule.exports = timeMeasure\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAMA,WAAW,GAAG,CAACC,OAAO,IAAI,MAAM,CAACC,IAAD,EAAOC,IAAP,EAAaC,MAAb,KAAwB;EAC1D,IAAI,CAACH,OAAO,CAACC,IAAI,CAACG,EAAN,CAAZ,EAAuB;IACnBJ,OAAO,CAACC,IAAI,CAACG,EAAN,CAAP,GAAmB,IAAIC,IAAJ,GAAWC,OAAX,EAAnB;IACAH,MAAM;IACN;EACH;;EAEDH,OAAO,CAACC,IAAI,CAACG,EAAN,CAAP,GAAmB,IAAIC,IAAJ,GAAWC,OAAX,KAAuBN,OAAO,CAACC,IAAI,CAACG,EAAN,CAAjD;EACAG,OAAO,CAACC,GAAR,CAAa,YAAWP,IAAI,CAACG,EAAG,cAAaJ,OAAO,CAACC,IAAI,CAACG,EAAN,CAAU,mCAAkCH,IAAI,CAACQ,MAAO,EAA5G;EACAP,IAAI,CACAQ,MAAM,CAACC,MAAP,CAAcV,IAAd,EAAoB;IAChBW,SAAS,EAAEZ,OAAO,CAACC,IAAI,CAACG,EAAN;EADF,CAApB,CADA,CAAJ;AAKH,CAdmB,EAcjB,EAdiB,CAApB;;AAgBAS,MAAM,CAACC,OAAP,GAAiBf,WAAjB"},"metadata":{},"sourceType":"script"}