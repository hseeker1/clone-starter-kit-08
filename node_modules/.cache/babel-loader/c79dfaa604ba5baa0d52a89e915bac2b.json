{"ast":null,"code":"'use strict';\n\nvar _objectSpread = require(\"C:\\\\Users\\\\User\\\\Documents\\\\clone-starter-kit-08\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/objectSpread2\");\n\nvar _asyncToGenerator = require(\"C:\\\\Users\\\\User\\\\Documents\\\\clone-starter-kit-08\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/asyncToGenerator\");\n\nvar _wrapAsyncGenerator = require(\"C:\\\\Users\\\\User\\\\Documents\\\\clone-starter-kit-08\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/wrapAsyncGenerator\");\n\nvar _awaitAsyncGenerator = require(\"C:\\\\Users\\\\User\\\\Documents\\\\clone-starter-kit-08\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/awaitAsyncGenerator\");\n\nvar _asyncGeneratorDelegate = require(\"C:\\\\Users\\\\User\\\\Documents\\\\clone-starter-kit-08\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/asyncGeneratorDelegate\");\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nfunction _asyncIterator(iterable) { var method, async, sync, retry = 2; for (\"undefined\" != typeof Symbol && (async = Symbol.asyncIterator, sync = Symbol.iterator); retry--;) { if (async && null != (method = iterable[async])) return method.call(iterable); if (sync && null != (method = iterable[sync])) return new AsyncFromSyncIterator(method.call(iterable)); async = \"@@asyncIterator\", sync = \"@@iterator\"; } throw new TypeError(\"Object is not async iterable\"); }\n\nfunction AsyncFromSyncIterator(s) { function AsyncFromSyncIteratorContinuation(r) { if (Object(r) !== r) return Promise.reject(new TypeError(r + \" is not an object.\")); var done = r.done; return Promise.resolve(r.value).then(function (value) { return { value: value, done: done }; }); } return AsyncFromSyncIterator = function AsyncFromSyncIterator(s) { this.s = s, this.n = s.next; }, AsyncFromSyncIterator.prototype = { s: null, n: null, next: function next() { return AsyncFromSyncIteratorContinuation(this.n.apply(this.s, arguments)); }, return: function _return(value) { var ret = this.s.return; return void 0 === ret ? Promise.resolve({ value: value, done: !0 }) : AsyncFromSyncIteratorContinuation(ret.apply(this.s, arguments)); }, throw: function _throw(value) { var thr = this.s.return; return void 0 === thr ? Promise.reject(value) : AsyncFromSyncIteratorContinuation(thr.apply(this.s, arguments)); } }, new AsyncFromSyncIterator(s); }\n\nvar CID = require('cids');\n\nvar configure = require('./lib/configure');\n\nvar toUrlSearchParams = require('./lib/to-url-search-params');\n\nvar stat = require('./files/stat');\n\nmodule.exports = configure(function (api, opts) {\n  return /*#__PURE__*/function () {\n    var _ls = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(path) {\n      var options,\n          pathStr,\n          mapLink,\n          _mapLink,\n          res,\n          _iteratorAbruptCompletion,\n          _didIteratorError,\n          _iteratorError,\n          _iterator,\n          _step,\n          result,\n          links,\n          _args2 = arguments;\n\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _mapLink = function _mapLink3() {\n                _mapLink = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(link) {\n                  var hash, ipfsPath, stats, entry;\n                  return _regeneratorRuntime().wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          hash = link.Hash;\n\n                          if (!hash.includes('/')) {\n                            _context.next = 7;\n                            break;\n                          }\n\n                          // the hash is a path, but we need the CID\n                          ipfsPath = hash.startsWith('/ipfs/') ? hash : \"/ipfs/\".concat(hash);\n                          _context.next = 5;\n                          return stat(opts)(ipfsPath);\n\n                        case 5:\n                          stats = _context.sent;\n                          hash = stats.cid;\n\n                        case 7:\n                          entry = {\n                            name: link.Name,\n                            path: pathStr + (link.Name ? \"/\".concat(link.Name) : ''),\n                            size: link.Size,\n                            cid: new CID(hash),\n                            type: typeOf(link),\n                            depth: link.Depth || 1\n                          };\n\n                          if (link.Mode) {\n                            entry.mode = parseInt(link.Mode, 8);\n                          }\n\n                          if (link.Mtime !== undefined && link.Mtime !== null) {\n                            entry.mtime = {\n                              secs: link.Mtime\n                            };\n\n                            if (link.MtimeNsecs !== undefined && link.MtimeNsecs !== null) {\n                              entry.mtime.nsecs = link.MtimeNsecs;\n                            }\n                          }\n\n                          return _context.abrupt(\"return\", entry);\n\n                        case 11:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                }));\n                return _mapLink.apply(this, arguments);\n              };\n\n              mapLink = function _mapLink2(_x2) {\n                return _mapLink.apply(this, arguments);\n              };\n\n              options = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : {};\n              pathStr = \"\".concat(path instanceof Uint8Array ? new CID(path) : path);\n              _context2.next = 6;\n              return _awaitAsyncGenerator(api.post('ls', {\n                timeout: options.timeout,\n                signal: options.signal,\n                searchParams: toUrlSearchParams(_objectSpread({\n                  arg: pathStr\n                }, options)),\n                headers: options.headers\n              }));\n\n            case 6:\n              res = _context2.sent;\n              _iteratorAbruptCompletion = false;\n              _didIteratorError = false;\n              _context2.prev = 9;\n              _iterator = _asyncIterator(res.ndjson());\n\n            case 11:\n              _context2.next = 13;\n              return _awaitAsyncGenerator(_iterator.next());\n\n            case 13:\n              if (!(_iteratorAbruptCompletion = !(_step = _context2.sent).done)) {\n                _context2.next = 32;\n                break;\n              }\n\n              result = _step.value;\n              result = result.Objects;\n\n              if (result) {\n                _context2.next = 18;\n                break;\n              }\n\n              throw new Error('expected .Objects in results');\n\n            case 18:\n              result = result[0];\n\n              if (result) {\n                _context2.next = 21;\n                break;\n              }\n\n              throw new Error('expected one array in results.Objects');\n\n            case 21:\n              links = result.Links;\n\n              if (Array.isArray(links)) {\n                _context2.next = 24;\n                break;\n              }\n\n              throw new Error('expected one array in results.Objects[0].Links');\n\n            case 24:\n              if (links.length) {\n                _context2.next = 28;\n                break;\n              }\n\n              _context2.next = 27;\n              return mapLink(result);\n\n            case 27:\n              return _context2.abrupt(\"return\");\n\n            case 28:\n              return _context2.delegateYield(_asyncGeneratorDelegate(_asyncIterator(links.map(mapLink)), _awaitAsyncGenerator), \"t0\", 29);\n\n            case 29:\n              _iteratorAbruptCompletion = false;\n              _context2.next = 11;\n              break;\n\n            case 32:\n              _context2.next = 38;\n              break;\n\n            case 34:\n              _context2.prev = 34;\n              _context2.t1 = _context2[\"catch\"](9);\n              _didIteratorError = true;\n              _iteratorError = _context2.t1;\n\n            case 38:\n              _context2.prev = 38;\n              _context2.prev = 39;\n\n              if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n                _context2.next = 43;\n                break;\n              }\n\n              _context2.next = 43;\n              return _awaitAsyncGenerator(_iterator.return());\n\n            case 43:\n              _context2.prev = 43;\n\n              if (!_didIteratorError) {\n                _context2.next = 46;\n                break;\n              }\n\n              throw _iteratorError;\n\n            case 46:\n              return _context2.finish(43);\n\n            case 47:\n              return _context2.finish(38);\n\n            case 48:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[9, 34, 38, 48], [39,, 43, 47]]);\n    }));\n\n    function ls(_x) {\n      return _ls.apply(this, arguments);\n    }\n\n    return ls;\n  }();\n});\n\nfunction typeOf(link) {\n  switch (link.Type) {\n    case 1:\n    case 5:\n      return 'dir';\n\n    case 2:\n      return 'file';\n\n    default:\n      return 'unknown';\n  }\n}","map":{"version":3,"names":["CID","require","configure","toUrlSearchParams","stat","module","exports","api","opts","path","mapLink","link","hash","Hash","includes","ipfsPath","startsWith","stats","cid","entry","name","Name","pathStr","size","Size","type","typeOf","depth","Depth","Mode","mode","parseInt","Mtime","undefined","mtime","secs","MtimeNsecs","nsecs","options","Uint8Array","post","timeout","signal","searchParams","arg","headers","res","ndjson","result","Objects","Error","links","Links","Array","isArray","length","map","ls","Type"],"sources":["C:/Users/User/Documents/clone-starter-kit-08/node_modules/ipfs-http-client/src/ls.js"],"sourcesContent":["'use strict'\r\n\r\nconst CID = require('cids')\r\nconst configure = require('./lib/configure')\r\nconst toUrlSearchParams = require('./lib/to-url-search-params')\r\nconst stat = require('./files/stat')\r\n\r\nmodule.exports = configure((api, opts) => {\r\n  return async function * ls (path, options = {}) {\r\n    const pathStr = `${path instanceof Uint8Array ? new CID(path) : path}`\r\n\r\n    async function mapLink (link) {\r\n      let hash = link.Hash\r\n\r\n      if (hash.includes('/')) {\r\n        // the hash is a path, but we need the CID\r\n        const ipfsPath = hash.startsWith('/ipfs/') ? hash : `/ipfs/${hash}`\r\n        const stats = await stat(opts)(ipfsPath)\r\n\r\n        hash = stats.cid\r\n      }\r\n\r\n      const entry = {\r\n        name: link.Name,\r\n        path: pathStr + (link.Name ? `/${link.Name}` : ''),\r\n        size: link.Size,\r\n        cid: new CID(hash),\r\n        type: typeOf(link),\r\n        depth: link.Depth || 1\r\n      }\r\n\r\n      if (link.Mode) {\r\n        entry.mode = parseInt(link.Mode, 8)\r\n      }\r\n\r\n      if (link.Mtime !== undefined && link.Mtime !== null) {\r\n        entry.mtime = {\r\n          secs: link.Mtime\r\n        }\r\n\r\n        if (link.MtimeNsecs !== undefined && link.MtimeNsecs !== null) {\r\n          entry.mtime.nsecs = link.MtimeNsecs\r\n        }\r\n      }\r\n\r\n      return entry\r\n    }\r\n\r\n    const res = await api.post('ls', {\r\n      timeout: options.timeout,\r\n      signal: options.signal,\r\n      searchParams: toUrlSearchParams({\r\n        arg: pathStr,\r\n        ...options\r\n      }),\r\n      headers: options.headers\r\n    })\r\n\r\n    for await (let result of res.ndjson()) {\r\n      result = result.Objects\r\n\r\n      if (!result) {\r\n        throw new Error('expected .Objects in results')\r\n      }\r\n\r\n      result = result[0]\r\n      if (!result) {\r\n        throw new Error('expected one array in results.Objects')\r\n      }\r\n\r\n      const links = result.Links\r\n      if (!Array.isArray(links)) {\r\n        throw new Error('expected one array in results.Objects[0].Links')\r\n      }\r\n\r\n      if (!links.length) {\r\n        // no links, this is a file, yield a single result\r\n        yield mapLink(result)\r\n\r\n        return\r\n      }\r\n\r\n      yield * links.map(mapLink)\r\n    }\r\n  }\r\n})\r\n\r\nfunction typeOf (link) {\r\n  switch (link.Type) {\r\n    case 1:\r\n    case 5:\r\n      return 'dir'\r\n    case 2:\r\n      return 'file'\r\n    default:\r\n      return 'unknown'\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}