{"ast":null,"code":"'use strict';\n\nvar _createForOfIteratorHelper = require(\"C:\\\\Users\\\\User\\\\Documents\\\\clone-starter-kit-08\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createForOfIteratorHelper\");\n\nvar textDecoder = new TextDecoder();\n/**\r\n * @param {ArrayBufferView|ArrayBuffer} bytes\r\n * @returns {string}\r\n */\n\nvar decodeText = function decodeText(bytes) {\n  return textDecoder.decode(bytes);\n};\n\nvar textEncoder = new TextEncoder();\n/**\r\n * @param {string} text\r\n * @returns {Uint8Array}\r\n */\n\nvar encodeText = function encodeText(text) {\n  return textEncoder.encode(text);\n};\n/**\r\n * Returns a new Uint8Array created by concatenating the passed Arrays\r\n *\r\n * @param {Array<ArrayLike<number>>} arrs\r\n * @param {number} length\r\n * @returns {Uint8Array}\r\n */\n\n\nfunction concat(arrs, length) {\n  var output = new Uint8Array(length);\n  var offset = 0;\n\n  var _iterator = _createForOfIteratorHelper(arrs),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var arr = _step.value;\n      output.set(arr, offset);\n      offset += arr.length;\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return output;\n}\n\nmodule.exports = {\n  decodeText: decodeText,\n  encodeText: encodeText,\n  concat: concat\n};","map":{"version":3,"names":["textDecoder","TextDecoder","decodeText","bytes","decode","textEncoder","TextEncoder","encodeText","text","encode","concat","arrs","length","output","Uint8Array","offset","arr","set","module","exports"],"sources":["C:/Users/User/Documents/clone-starter-kit-08/node_modules/multibase/src/util.js"],"sourcesContent":["'use strict'\r\n\r\nconst textDecoder = new TextDecoder()\r\n/**\r\n * @param {ArrayBufferView|ArrayBuffer} bytes\r\n * @returns {string}\r\n */\r\nconst decodeText = (bytes) => textDecoder.decode(bytes)\r\n\r\nconst textEncoder = new TextEncoder()\r\n/**\r\n * @param {string} text\r\n * @returns {Uint8Array}\r\n */\r\nconst encodeText = (text) => textEncoder.encode(text)\r\n\r\n/**\r\n * Returns a new Uint8Array created by concatenating the passed Arrays\r\n *\r\n * @param {Array<ArrayLike<number>>} arrs\r\n * @param {number} length\r\n * @returns {Uint8Array}\r\n */\r\nfunction concat (arrs, length) {\r\n  const output = new Uint8Array(length)\r\n  let offset = 0\r\n\r\n  for (const arr of arrs) {\r\n    output.set(arr, offset)\r\n    offset += arr.length\r\n  }\r\n\r\n  return output\r\n}\r\n\r\nmodule.exports = { decodeText, encodeText, concat }\r\n"],"mappings":"AAAA;;;;AAEA,IAAMA,WAAW,GAAG,IAAIC,WAAJ,EAApB;AACA;AACA;AACA;AACA;;AACA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD;EAAA,OAAWH,WAAW,CAACI,MAAZ,CAAmBD,KAAnB,CAAX;AAAA,CAAnB;;AAEA,IAAME,WAAW,GAAG,IAAIC,WAAJ,EAApB;AACA;AACA;AACA;AACA;;AACA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,IAAD;EAAA,OAAUH,WAAW,CAACI,MAAZ,CAAmBD,IAAnB,CAAV;AAAA,CAAnB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASE,MAAT,CAAiBC,IAAjB,EAAuBC,MAAvB,EAA+B;EAC7B,IAAMC,MAAM,GAAG,IAAIC,UAAJ,CAAeF,MAAf,CAAf;EACA,IAAIG,MAAM,GAAG,CAAb;;EAF6B,2CAIXJ,IAJW;EAAA;;EAAA;IAI7B,oDAAwB;MAAA,IAAbK,GAAa;MACtBH,MAAM,CAACI,GAAP,CAAWD,GAAX,EAAgBD,MAAhB;MACAA,MAAM,IAAIC,GAAG,CAACJ,MAAd;IACD;EAP4B;IAAA;EAAA;IAAA;EAAA;;EAS7B,OAAOC,MAAP;AACD;;AAEDK,MAAM,CAACC,OAAP,GAAiB;EAAEjB,UAAU,EAAVA,UAAF;EAAcK,UAAU,EAAVA,UAAd;EAA0BG,MAAM,EAANA;AAA1B,CAAjB"},"metadata":{},"sourceType":"script"}