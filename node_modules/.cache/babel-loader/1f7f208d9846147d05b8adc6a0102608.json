{"ast":null,"code":"/*\r\n    Copyright 2018 The caver-js Authors\r\n    This file is part of the caver-js library.\r\n\r\n    The caver-js library is free software: you can redistribute it and/or modify\r\n    it under the terms of the GNU Lesser General Public License as published by\r\n    the Free Software Foundation, either version 3 of the License, or\r\n    (at your option) any later version.\r\n\r\n    The caver-js library is distributed in the hope that it will be useful,\r\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\r\n    GNU Lesser General Public License for more details.\r\n\r\n    You should have received a copy of the GNU Lesser General Public License\r\n    along with the caver-js. If not, see <http://www.gnu.org/licenses/>.\r\n*/\n// const fs = typeof window !== 'object' && require('fs') || {}\nvar fs = {};\nvar DEFAULT_FILE_PATH = './';\nvar DEFAULT_FILE_NAME = 'rpcLogs';\nvar DEFAULT_FILE_EXTENSION = 'log';\n\nvar guaranteeFilePath = function guaranteeFilePath(filePath) {\n  return filePath.slice(-1) !== '/' ? \"\".concat(filePath, \"/\") : filePath;\n};\n\nvar appendToFile = function appendToFile(filePath, contents) {\n  fs.appendFileSync(filePath, \"\".concat(contents, \"\\n\"), function (err) {\n    if (err) throw err;\n  });\n};\n\nvar fileLogger = function fileLogger() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return function (data, next) {\n    if (typeof options !== 'object') {\n      throw Error('file logger must take an object type argument.');\n    }\n\n    options.path = guaranteeFilePath(options.path) || DEFAULT_FILE_PATH;\n    options.name = options.name || DEFAULT_FILE_NAME;\n    options.extension = options.extension || DEFAULT_FILE_EXTENSION;\n    var fileName = \"\".concat(options.path).concat(options.name, \".\").concat(options.extension); // Add timestamp for RPC request || response.\n\n    data.timestamp = new Date().getTime();\n    appendToFile(fileName, JSON.stringify(data));\n    next();\n  };\n};\n\nmodule.exports = fileLogger;","map":{"version":3,"names":["fs","DEFAULT_FILE_PATH","DEFAULT_FILE_NAME","DEFAULT_FILE_EXTENSION","guaranteeFilePath","filePath","slice","appendToFile","contents","appendFileSync","err","fileLogger","options","data","next","Error","path","name","extension","fileName","timestamp","Date","getTime","JSON","stringify","module","exports"],"sources":["C:/Users/User/Documents/clone-starter-kit-08/node_modules/caver-js/packages/caver-middleware/src/builtins/fileLogger.js"],"sourcesContent":["/*\r\n    Copyright 2018 The caver-js Authors\r\n    This file is part of the caver-js library.\r\n\r\n    The caver-js library is free software: you can redistribute it and/or modify\r\n    it under the terms of the GNU Lesser General Public License as published by\r\n    the Free Software Foundation, either version 3 of the License, or\r\n    (at your option) any later version.\r\n\r\n    The caver-js library is distributed in the hope that it will be useful,\r\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\r\n    GNU Lesser General Public License for more details.\r\n\r\n    You should have received a copy of the GNU Lesser General Public License\r\n    along with the caver-js. If not, see <http://www.gnu.org/licenses/>.\r\n*/\r\n\r\n// const fs = typeof window !== 'object' && require('fs') || {}\r\nconst fs = {}\r\n\r\nconst DEFAULT_FILE_PATH = './'\r\nconst DEFAULT_FILE_NAME = 'rpcLogs'\r\nconst DEFAULT_FILE_EXTENSION = 'log'\r\n\r\nconst guaranteeFilePath = filePath => {\r\n    return filePath.slice(-1) !== '/' ? `${filePath}/` : filePath\r\n}\r\n\r\nconst appendToFile = (filePath, contents) => {\r\n    fs.appendFileSync(filePath, `${contents}\\n`, err => {\r\n        if (err) throw err\r\n    })\r\n}\r\n\r\nconst fileLogger = (options = {}) => (data, next) => {\r\n    if (typeof options !== 'object') {\r\n        throw Error('file logger must take an object type argument.')\r\n    }\r\n\r\n    options.path = guaranteeFilePath(options.path) || DEFAULT_FILE_PATH\r\n    options.name = options.name || DEFAULT_FILE_NAME\r\n    options.extension = options.extension || DEFAULT_FILE_EXTENSION\r\n\r\n    const fileName = `${options.path}${options.name}.${options.extension}`\r\n\r\n    // Add timestamp for RPC request || response.\r\n    data.timestamp = new Date().getTime()\r\n\r\n    appendToFile(fileName, JSON.stringify(data))\r\n\r\n    next()\r\n}\r\n\r\nmodule.exports = fileLogger\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,IAAMA,EAAE,GAAG,EAAX;AAEA,IAAMC,iBAAiB,GAAG,IAA1B;AACA,IAAMC,iBAAiB,GAAG,SAA1B;AACA,IAAMC,sBAAsB,GAAG,KAA/B;;AAEA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAC,QAAQ,EAAI;EAClC,OAAOA,QAAQ,CAACC,KAAT,CAAe,CAAC,CAAhB,MAAuB,GAAvB,aAAgCD,QAAhC,SAA8CA,QAArD;AACH,CAFD;;AAIA,IAAME,YAAY,GAAG,SAAfA,YAAe,CAACF,QAAD,EAAWG,QAAX,EAAwB;EACzCR,EAAE,CAACS,cAAH,CAAkBJ,QAAlB,YAA+BG,QAA/B,SAA6C,UAAAE,GAAG,EAAI;IAChD,IAAIA,GAAJ,EAAS,MAAMA,GAAN;EACZ,CAFD;AAGH,CAJD;;AAMA,IAAMC,UAAU,GAAG,SAAbA,UAAa;EAAA,IAACC,OAAD,uEAAW,EAAX;EAAA,OAAkB,UAACC,IAAD,EAAOC,IAAP,EAAgB;IACjD,IAAI,OAAOF,OAAP,KAAmB,QAAvB,EAAiC;MAC7B,MAAMG,KAAK,CAAC,gDAAD,CAAX;IACH;;IAEDH,OAAO,CAACI,IAAR,GAAeZ,iBAAiB,CAACQ,OAAO,CAACI,IAAT,CAAjB,IAAmCf,iBAAlD;IACAW,OAAO,CAACK,IAAR,GAAeL,OAAO,CAACK,IAAR,IAAgBf,iBAA/B;IACAU,OAAO,CAACM,SAAR,GAAoBN,OAAO,CAACM,SAAR,IAAqBf,sBAAzC;IAEA,IAAMgB,QAAQ,aAAMP,OAAO,CAACI,IAAd,SAAqBJ,OAAO,CAACK,IAA7B,cAAqCL,OAAO,CAACM,SAA7C,CAAd,CATiD,CAWjD;;IACAL,IAAI,CAACO,SAAL,GAAiB,IAAIC,IAAJ,GAAWC,OAAX,EAAjB;IAEAf,YAAY,CAACY,QAAD,EAAWI,IAAI,CAACC,SAAL,CAAeX,IAAf,CAAX,CAAZ;IAEAC,IAAI;EACP,CAjBkB;AAAA,CAAnB;;AAmBAW,MAAM,CAACC,OAAP,GAAiBf,UAAjB"},"metadata":{},"sourceType":"script"}