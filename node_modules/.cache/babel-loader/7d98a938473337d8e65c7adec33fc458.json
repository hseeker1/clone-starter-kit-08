{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\clone-starter-kit-08\\\\src\\\\routes\\\\Login.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport './Login.css';\nimport caver from 'caver-js';\nimport Caver from 'caver-js';\nconst logindb = [{\n  uname: \"sohan1\",\n  password: \"pass1\"\n}, {\n  uname: \"sohan2\",\n  password: \"pass2\"\n}, {\n  uname: \"sohan3\",\n  password: \"pass3\"\n}, {\n  uname: \"sohan4\",\n  password: \"pass4\"\n}];\nconst errors = {\n  uname: \"invalide username\",\n  upass: \"invalid password\"\n};\nconst mywallet = {\n  myaccnt: \"\",\n  mybalklay: 0.0,\n  mynetwork: \"\"\n};\nconst DataTransction = {\n  //팝콘 전송 데이터 코딩 - not deligate \n  from: \"\",\n  to: '',\n  amount: '1',\n  // 시나리오에 정의한 팝콘 소모량 * 글쓰기 시 1팝콘 소모\n  contractAddress: '0x59810df6700aa304a8890bf57841637ba36b529f',\n  //팝콘 스마트콘트랙 어드레스\n  gas: 3000000,\n  txHash: null,\n  receipt: null,\n  error: null,\n  decimal: 18\n};\n\nfunction Login() {\n  /* \r\n  state = {\r\n   errorMessagees: '',\r\n   isSubmitted:false,\r\n   account:'',\r\n   balance : 0,\r\n   network :''\r\n  } */\n  const [errorMessages, setErrorMessages] = useState({});\n  const [isSubmiited, setIsSubmitted] = useState(false);\n  /*\r\n  const [accnt, setAccnt] = useState(\"\");\r\n  const [bal, setBal] = useState(0.0);\r\n  const [ntk, setNetwork] = useState(\"\"); */\n\n  const loadAccountInfo = async () => {\n    const {\n      klaytn\n    } = window;\n\n    if (klaytn) {\n      try {\n        await klaytn.enable();\n        setAccountInfo(klaytn);\n        klaytn.on('accountsChanged', () => setAccountInfo(klaytn));\n      } catch (err) {\n        // console.log('User denied account access : '+error) \n        console.log(err);\n      }\n    } else {\n      console.log('Non-Kaikas browser detected. You should consider trying Kaikas!');\n    }\n  };\n\n  const setAccountInfo = async () => {\n    const {\n      klaytn\n    } = window;\n    if (klaytn === undefined) return;\n    const caver = new Caver(klaytn);\n    mywallet.myaccnt = klaytn.selectedAddress;\n    sessionStorage.setItem(\"accnt\", mywallet.myaccnt);\n    const bal = await caver.klay.getBalance(mywallet.myaccnt);\n    mywallet.mybalklay = caver.utils.fromPeb(bal, 'KLAY');\n    /* setAccnt(myaccnt);\r\n    setBal(caver.utils.fromPeb(mycheck,'KLAY')); */\n    //  console.log('accnt:' + sessionStorage.getItem(\"accnt\"));\n\n    console.log('accnt:' + mywallet.myaccnt); // const mycheck = await caver.klay.getBalance(\"0x5bdcdefed912981db7f5c6f7b67717b8144fd69f\");\n\n    console.log('balance:' + mywallet.mybalklay);\n  };\n\n  const setNetworkInfo = () => {\n    const {\n      klaytn\n    } = window;\n    if (klaytn === undefined) return;\n\n    if (klaytn.networkVersion != '1001') {\n      alert('테스트넷이 아닙니다.');\n      return;\n    }\n\n    mywallet.mynetwork = klaytn.networkVersion; // setNetwork(klaytn.networkVersion);\n\n    sessionStorage.setItem(\"knetwork\", mywallet.mynetwork);\n    console.log(\"network:\" + mywallet.mynetwork); // klaytn.on('networkChanged', () => this.setNetworkInfo(klaytn.networkVersion))\n\n    klaytn.on('networkChanged', () => setNetworkInfo(klaytn.networkVersion));\n  };\n\n  const testTrans = async () => {\n    const {\n      klaytn\n    } = window;\n    if (klaytn === undefined) return;\n    const caver = new Caver(klaytn);\n    console.log(\"call testTrnas\");\n    const data = caver.klay.abi.encodeFunctionCall({\n      name: 'transfer',\n      type: 'function',\n      inputs: [{\n        type: 'address',\n        name: 'recipient'\n      }, {\n        type: 'uint256',\n        name: 'amount'\n      }]\n    }, [DataTransaction.to, caver.utils.toBN(DataTransaction.amount).mul(caver.utils.toBN(Number(`1e${DataTransaction.decimal}`))).toString()]);\n    caver.klay.sendTransaction({\n      type: 'SMART_CONTRACT_EXECUTION',\n      from,\n      to: contractAddress,\n      data,\n      gas\n    }).on('transactionHash', transactionHash => {\n      console.log('txHash', transactionHash);\n      this.setState({\n        txHash: transactionHash\n      });\n    }).on('receipt', receipt => {\n      console.log('receipt', receipt);\n      this.setState({\n        receipt: JSON.stringify(receipt)\n      });\n    }).on('error', error => {\n      console.log('error', error);\n      this.setState({\n        error: error.message\n      });\n    });\n  };\n\n  const handlekaikas = event => {\n    event.preventDefault();\n    const {\n      klaytn\n    } = window;\n    loadAccountInfo();\n    setNetworkInfo();\n    testTrans();\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    var {\n      uname,\n      upass\n    } = document.forms[0];\n    const userData = logindb.find(user => user.uname === uname.value);\n\n    if (userData) {\n      if (userData.password !== upass.value) {\n        setErrorMessages({\n          name: \"upass\",\n          message: errors.upass\n        });\n      } else {\n        setIsSubmitted(true);\n        sessionStorage.setItem(\"uname\", userData.uname);\n      }\n    } else {\n      setErrorMessages({\n        name: \"uname\",\n        message: errors.uname\n      });\n    }\n  };\n\n  const renderErrorMessage = name2 => name2 === errorMessages.name && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 3\n    }\n  }, errorMessages.message);\n\n  const renderForm = /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }\n  }, \"Nickname\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"myid\",\n    id: \"uname\",\n    name: \"uname\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }\n  }), renderErrorMessage(\"uname\"), \"s\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    id: \"upass\",\n    name: \"upass\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }\n  }), renderErrorMessage(\"upass\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkklaytn\",\n    onClick: handlekaikas,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 11\n    }\n  }))));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login__container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mytitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 9\n    }\n  }, \"Log In\"), isSubmiited ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 23\n    }\n  }, \"User is successfullly logged in\") : renderForm);\n}\n\nexport default Login;","map":{"version":3,"names":["React","useState","ReactDOM","caver","Caver","logindb","uname","password","errors","upass","mywallet","myaccnt","mybalklay","mynetwork","DataTransction","from","to","amount","contractAddress","gas","txHash","receipt","error","decimal","Login","errorMessages","setErrorMessages","isSubmiited","setIsSubmitted","loadAccountInfo","klaytn","window","enable","setAccountInfo","on","err","console","log","undefined","selectedAddress","sessionStorage","setItem","bal","klay","getBalance","utils","fromPeb","setNetworkInfo","networkVersion","alert","testTrans","data","abi","encodeFunctionCall","name","type","inputs","DataTransaction","toBN","mul","Number","toString","sendTransaction","transactionHash","setState","JSON","stringify","message","handlekaikas","event","preventDefault","handleSubmit","document","forms","userData","find","user","value","renderErrorMessage","name2","renderForm"],"sources":["C:/Users/User/Documents/clone-starter-kit-08/src/routes/Login.js"],"sourcesContent":["import React, {useState} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './Login.css';\r\nimport caver from 'caver-js'\r\nimport Caver from 'caver-js';\r\n\r\n\r\n\r\nconst logindb = [\r\n  {\r\n    uname : \"sohan1\",\r\n    password : \"pass1\"\r\n  },\r\n  {\r\n    uname : \"sohan2\",\r\n    password : \"pass2\"\r\n  },\r\n  {\r\n    uname : \"sohan3\",\r\n    password : \"pass3\"\r\n  },\r\n  {\r\n    uname : \"sohan4\",\r\n    password : \"pass4\"\r\n  }\r\n];\r\n\r\nconst errors = {\r\n  uname: \"invalide username\",\r\n  upass: \"invalid password\"\r\n};\r\n\r\nconst mywallet = {\r\n  myaccnt: \"\",\r\n  mybalklay: 0.0,\r\n  mynetwork: \"\"\r\n}\r\n\r\nconst DataTransction = {   //팝콘 전송 데이터 코딩 - not deligate \r\n  from: \"\",\r\n  to: '',\r\n  amount: '1', // 시나리오에 정의한 팝콘 소모량 * 글쓰기 시 1팝콘 소모\r\n  contractAddress: '0x59810df6700aa304a8890bf57841637ba36b529f', //팝콘 스마트콘트랙 어드레스\r\n  gas: 3000000,\r\n  txHash: null,\r\n  receipt: null,\r\n  error: null,\r\n  decimal: 18 \r\n}\r\n\r\n\r\nfunction Login(){\r\n /* \r\nstate = {\r\n  errorMessagees: '',\r\n  isSubmitted:false,\r\n  account:'',\r\n  balance : 0,\r\n  network :''\r\n} */\r\n  \r\nconst [errorMessages, setErrorMessages] = useState({});\r\nconst [isSubmiited, setIsSubmitted] = useState(false);\r\n/*\r\nconst [accnt, setAccnt] = useState(\"\");\r\nconst [bal, setBal] = useState(0.0);\r\nconst [ntk, setNetwork] = useState(\"\"); */\r\n\r\n\r\nconst loadAccountInfo = async () => {\r\n  const { klaytn } = window\r\n\r\n  if (klaytn) {\r\n    try {\r\n      await klaytn.enable()\r\n      setAccountInfo(klaytn)\r\n      klaytn.on('accountsChanged', () => setAccountInfo(klaytn))\r\n    } catch (err) {\r\n     // console.log('User denied account access : '+error) \r\n     console.log(err) \r\n    }\r\n  } else {\r\n    console.log('Non-Kaikas browser detected. You should consider trying Kaikas!')\r\n  }\r\n}\r\n\r\nconst setAccountInfo = async () => {\r\n  const { klaytn } = window\r\n  if (klaytn === undefined) return\r\n  const caver = new Caver(klaytn);\r\n  mywallet.myaccnt = klaytn.selectedAddress ;\r\n  sessionStorage.setItem(\"accnt\", mywallet.myaccnt);\r\n  const bal = await caver.klay.getBalance(mywallet.myaccnt);\r\n  mywallet.mybalklay = caver.utils.fromPeb(bal,'KLAY');\r\n  /* setAccnt(myaccnt);\r\n  setBal(caver.utils.fromPeb(mycheck,'KLAY')); */\r\n  \r\n  //  console.log('accnt:' + sessionStorage.getItem(\"accnt\"));\r\n  console.log('accnt:' + mywallet.myaccnt);\r\n  \r\n  // const mycheck = await caver.klay.getBalance(\"0x5bdcdefed912981db7f5c6f7b67717b8144fd69f\");\r\n  \r\n  console.log('balance:' + mywallet.mybalklay);\r\n\r\n}\r\n\r\nconst setNetworkInfo = () => {\r\n  const { klaytn } = window\r\n  if (klaytn === undefined) return\r\n  if (klaytn.networkVersion != '1001') {\r\n    alert('테스트넷이 아닙니다.');\r\n    return;\r\n  }\r\n  mywallet.mynetwork = klaytn.networkVersion ;\r\n  // setNetwork(klaytn.networkVersion);\r\n  sessionStorage.setItem(\"knetwork\", mywallet.mynetwork);\r\n  console.log(\"network:\" + mywallet.mynetwork);\r\n // klaytn.on('networkChanged', () => this.setNetworkInfo(klaytn.networkVersion))\r\n  klaytn.on('networkChanged', () => setNetworkInfo(klaytn.networkVersion))\r\n \r\n}\r\n\r\nconst testTrans = async () => {\r\n  const { klaytn } = window\r\n  if (klaytn === undefined) return\r\n  const caver = new Caver(klaytn);\r\n  \r\n  console.log(\"call testTrnas\");\r\n\r\n  const data = caver.klay.abi.encodeFunctionCall(\r\n      {\r\n        name: 'transfer',\r\n        type: 'function',\r\n        inputs: [\r\n          {\r\n            type: 'address',\r\n            name: 'recipient'\r\n          },\r\n          {\r\n            type: 'uint256',\r\n            name: 'amount'\r\n          }\r\n        ]\r\n      },\r\n      [\r\n        DataTransaction.to,\r\n        caver.utils\r\n          .toBN(DataTransaction.amount)\r\n          .mul(caver.utils.toBN(Number(`1e${DataTransaction.decimal}`)))\r\n          .toString()\r\n      ]\r\n    )\r\n\r\n    caver.klay\r\n      .sendTransaction({\r\n        type: 'SMART_CONTRACT_EXECUTION',\r\n        from,\r\n        to: contractAddress,\r\n        data,\r\n        gas\r\n      })\r\n      .on('transactionHash', transactionHash => {\r\n        console.log('txHash', transactionHash)\r\n        this.setState({ txHash: transactionHash })\r\n      })\r\n      .on('receipt', receipt => {\r\n        console.log('receipt', receipt)\r\n        this.setState({ receipt: JSON.stringify(receipt) })\r\n      })\r\n      .on('error', error => {\r\n        console.log('error', error)\r\n        this.setState({ error: error.message })\r\n      })\r\n\r\n}\r\n\r\nconst handlekaikas = (event) => {\r\n  event.preventDefault();\r\n  \r\n  const { klaytn } = window;\r\n\r\n  loadAccountInfo();\r\n  setNetworkInfo();\r\n\r\n  testTrans();\r\n  \r\n};\r\n\r\n\r\nconst handleSubmit = (event) => {\r\n  event.preventDefault();\r\n\r\n  var {uname, upass} = document.forms[0];\r\n\r\n  const userData = logindb.find((user) => user.uname === uname.value );\r\n\r\n  if ( userData) {\r\n    if(userData.password !== upass.value ) {\r\n     setErrorMessages({name : \"upass\", message: errors.upass});\r\n     \r\n    } else {\r\n      setIsSubmitted(true);\r\n      sessionStorage.setItem(\"uname\", userData.uname);\r\n    }\r\n  } else {\r\n    setErrorMessages({name : \"uname\", message: errors.uname });\r\n  }\r\n};\r\n\r\nconst renderErrorMessage = (name2) => name2 === errorMessages.name && (\r\n  <div className=\"error\">{errorMessages.message}</div>\r\n);\r\n\r\nconst renderForm = (\r\n    <div className=\"form\">\r\n    <form onSubmit = {handleSubmit}>\r\n     <div className=\"input-container\">\r\n      <label>Nickname</label>\r\n      <input type = \"myid\" id=\"uname\" name=\"uname\" required />\r\n      {renderErrorMessage(\"uname\")}s\r\n     </div>\r\n     <div className=\"input-container\">\r\n      <label>Password</label>\r\n      <input type = \"password\" id = \"upass\" name=\"upass\" required />\r\n      {renderErrorMessage(\"upass\")}\r\n     </div>\r\n     <div className=\"button-container\">\r\n      <input type = \"submit\" />\r\n     </div>\r\n      <div className=\"button-container\">\r\n          <input type=\"checkklaytn\" onClick={handlekaikas}/>\r\n       </div>\r\n    </form>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n      <div className=\"login__container\">\r\n        <div className=\"mytitle\">Log In</div>\r\n       {isSubmiited ? <div>User is successfullly logged in</div> : renderForm}\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}