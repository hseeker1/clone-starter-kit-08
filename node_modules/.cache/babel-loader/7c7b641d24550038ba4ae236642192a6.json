{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\User\\\\Documents\\\\clone-starter-kit-08\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\User\\\\Documents\\\\clone-starter-kit-08\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar withIs = require('class-is');\n\nvar sortLinks = require('./sortLinks');\n\nvar DAGLink = require('../dag-link/dagLink');\n\nvar _require = require('../serialize.js'),\n    serializeDAGNode = _require.serializeDAGNode;\n\nvar _toDAGLink = require('./toDagLink');\n\nvar _addLink = require('./addLink');\n\nvar _rmLink = require('./rmLink');\n\nvar uint8ArrayFromString = require('uint8arrays/from-string');\n\nvar uint8ArrayToString = require('uint8arrays/to-string');\n\nvar DAGNode = /*#__PURE__*/function () {\n  function DAGNode(data) {\n    var links = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    var serializedSize = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n    _classCallCheck(this, DAGNode);\n\n    if (!data) {\n      data = new Uint8Array(0);\n    }\n\n    if (typeof data === 'string') {\n      data = uint8ArrayFromString(data);\n    }\n\n    if (!(data instanceof Uint8Array)) {\n      throw new Error('Passed \\'data\\' is not a Uint8Array or a String!');\n    }\n\n    if (serializedSize !== null && typeof serializedSize !== 'number') {\n      throw new Error('Passed \\'serializedSize\\' must be a number!');\n    }\n\n    links = links.map(function (link) {\n      return DAGLink.isDAGLink(link) ? link : DAGLink.util.createDagLinkFromB58EncodedHash(link);\n    });\n    sortLinks(links);\n    Object.defineProperties(this, {\n      Data: {\n        value: data,\n        writable: false,\n        enumerable: true\n      },\n      Links: {\n        value: links,\n        writable: false,\n        enumerable: true\n      },\n      _serializedSize: {\n        value: serializedSize,\n        writable: true,\n        enumerable: false\n      },\n      _size: {\n        value: null,\n        writable: true,\n        enumerable: false\n      }\n    });\n  }\n\n  _createClass(DAGNode, [{\n    key: \"toJSON\",\n    value: function toJSON() {\n      if (!this._json) {\n        this._json = Object.freeze({\n          data: this.Data,\n          links: this.Links.map(function (l) {\n            return l.toJSON();\n          }),\n          size: this.size\n        });\n      }\n\n      return Object.assign({}, this._json);\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"DAGNode <data: \\\"\".concat(uint8ArrayToString(this.Data, 'base64urlpad'), \"\\\", links: \").concat(this.Links.length, \", size: \").concat(this.size, \">\");\n    }\n  }, {\n    key: \"_invalidateCached\",\n    value: function _invalidateCached() {\n      this._serializedSize = null;\n      this._size = null;\n    }\n  }, {\n    key: \"addLink\",\n    value: function addLink(link) {\n      this._invalidateCached();\n\n      return _addLink(this, link);\n    }\n  }, {\n    key: \"rmLink\",\n    value: function rmLink(link) {\n      this._invalidateCached();\n\n      return _rmLink(this, link);\n    } // @returns {Promise.<DAGLink>}\n\n  }, {\n    key: \"toDAGLink\",\n    value: function toDAGLink(options) {\n      return _toDAGLink(this, options);\n    }\n  }, {\n    key: \"serialize\",\n    value: function serialize() {\n      return serializeDAGNode(this);\n    }\n  }, {\n    key: \"size\",\n    get: function get() {\n      if (this._size === null) {\n        if (this._serializedSize === null) {\n          this._serializedSize = this.serialize().length;\n        }\n\n        this._size = this.Links.reduce(function (sum, l) {\n          return sum + l.Tsize;\n        }, this._serializedSize);\n      }\n\n      return this._size;\n    },\n    set: function set(size) {\n      throw new Error(\"Can't set property: 'size' is immutable\");\n    }\n  }]);\n\n  return DAGNode;\n}();\n\nexports = module.exports = withIs(DAGNode, {\n  className: 'DAGNode',\n  symbolName: '@ipld/js-ipld-dag-pb/dagnode'\n});","map":{"version":3,"names":["withIs","require","sortLinks","DAGLink","serializeDAGNode","toDAGLink","addLink","rmLink","uint8ArrayFromString","uint8ArrayToString","DAGNode","data","links","serializedSize","Uint8Array","Error","map","link","isDAGLink","util","createDagLinkFromB58EncodedHash","Object","defineProperties","Data","value","writable","enumerable","Links","_serializedSize","_size","_json","freeze","l","toJSON","size","assign","length","_invalidateCached","options","serialize","reduce","sum","Tsize","exports","module","className","symbolName"],"sources":["C:/Users/User/Documents/clone-starter-kit-08/node_modules/ipld-dag-pb/src/dag-node/dagNode.js"],"sourcesContent":["'use strict'\r\n\r\nconst withIs = require('class-is')\r\nconst sortLinks = require('./sortLinks')\r\nconst DAGLink = require('../dag-link/dagLink')\r\nconst { serializeDAGNode } = require('../serialize.js')\r\nconst toDAGLink = require('./toDagLink')\r\nconst addLink = require('./addLink')\r\nconst rmLink = require('./rmLink')\r\nconst uint8ArrayFromString = require('uint8arrays/from-string')\r\nconst uint8ArrayToString = require('uint8arrays/to-string')\r\n\r\nclass DAGNode {\r\n  constructor (data, links = [], serializedSize = null) {\r\n    if (!data) {\r\n      data = new Uint8Array(0)\r\n    }\r\n    if (typeof data === 'string') {\r\n      data = uint8ArrayFromString(data)\r\n    }\r\n\r\n    if (!(data instanceof Uint8Array)) {\r\n      throw new Error('Passed \\'data\\' is not a Uint8Array or a String!')\r\n    }\r\n\r\n    if (serializedSize !== null && typeof serializedSize !== 'number') {\r\n      throw new Error('Passed \\'serializedSize\\' must be a number!')\r\n    }\r\n\r\n    links = links.map((link) => {\r\n      return DAGLink.isDAGLink(link)\r\n        ? link\r\n        : DAGLink.util.createDagLinkFromB58EncodedHash(link)\r\n    })\r\n    sortLinks(links)\r\n\r\n    Object.defineProperties(this, {\r\n      Data: { value: data, writable: false, enumerable: true },\r\n      Links: { value: links, writable: false, enumerable: true },\r\n      _serializedSize: { value: serializedSize, writable: true, enumerable: false },\r\n      _size: { value: null, writable: true, enumerable: false }\r\n    })\r\n  }\r\n\r\n  toJSON () {\r\n    if (!this._json) {\r\n      this._json = Object.freeze({\r\n        data: this.Data,\r\n        links: this.Links.map((l) => l.toJSON()),\r\n        size: this.size\r\n      })\r\n    }\r\n\r\n    return Object.assign({}, this._json)\r\n  }\r\n\r\n  toString () {\r\n    return `DAGNode <data: \"${uint8ArrayToString(this.Data, 'base64urlpad')}\", links: ${this.Links.length}, size: ${this.size}>`\r\n  }\r\n\r\n  _invalidateCached () {\r\n    this._serializedSize = null\r\n    this._size = null\r\n  }\r\n\r\n  addLink (link) {\r\n    this._invalidateCached()\r\n    return addLink(this, link)\r\n  }\r\n\r\n  rmLink (link) {\r\n    this._invalidateCached()\r\n    return rmLink(this, link)\r\n  }\r\n\r\n  // @returns {Promise.<DAGLink>}\r\n  toDAGLink (options) {\r\n    return toDAGLink(this, options)\r\n  }\r\n\r\n  serialize () {\r\n    return serializeDAGNode(this)\r\n  }\r\n\r\n  get size () {\r\n    if (this._size === null) {\r\n      if (this._serializedSize === null) {\r\n        this._serializedSize = this.serialize().length\r\n      }\r\n      this._size = this.Links.reduce((sum, l) => sum + l.Tsize, this._serializedSize)\r\n    }\r\n\r\n    return this._size\r\n  }\r\n\r\n  set size (size) {\r\n    throw new Error(\"Can't set property: 'size' is immutable\")\r\n  }\r\n}\r\n\r\nexports = module.exports = withIs(DAGNode, { className: 'DAGNode', symbolName: '@ipld/js-ipld-dag-pb/dagnode' })\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}