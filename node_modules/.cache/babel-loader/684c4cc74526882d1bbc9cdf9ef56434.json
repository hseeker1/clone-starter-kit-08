{"ast":null,"code":"/*\r\n    Modifications copyright 2018 The caver-js Authors\r\n    This file is part of web3.js.\r\n\r\n    web3.js is free software: you can redistribute it and/or modify\r\n    it under the terms of the GNU Lesser General Public License as published by\r\n    the Free Software Foundation, either version 3 of the License, or\r\n    (at your option) any later version.\r\n\r\n    web3.js is distributed in the hope that it will be useful,\r\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n    GNU Lesser General Public License for more details.\r\n\r\n    You should have received a copy of the GNU Lesser General Public License\r\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n    This file is derived from web3.js/packages/web3-core-requestmanager/src/batch.js (2019/06/12).\r\n    Modified and improved for the caver-js development.\r\n*/\n\n/**\r\n * @file batch.js\r\n * @author Marek Kotewicz <marek@ethdev.com>\r\n * @date 2015\r\n */\nconst Jsonrpc = require('./jsonrpc');\n\nconst errors = require('../../caver-core-helpers').errors;\n\nconst Batch = function (requestManager) {\n  this.requestManager = requestManager;\n  this.requests = [];\n};\n\nBatch.prototype.add = function (request) {\n  this.requests.push(request);\n};\n\nBatch.prototype.execute = function () {\n  const requests = this.requests;\n  this.requestManager.sendBatch(requests, function (err, results) {\n    results = results || [];\n    requests.map(function (request, index) {\n      return results[index] || {};\n    }).forEach(function (result, index) {\n      /**\r\n       * if callback is defined in requests[index]\r\n       * 1) Check result.error - if existed throw ErrorResponse.\r\n       * 2) Check result is valid json response object - if invalid throw InvalidResponse.\r\n       * 3) After passing 1) 2), if there is format method in requests[index] do formatting, and then callback.\r\n       */\n      if (requests[index].callback) {\n        if (result && result.error) {\n          return requests[index].callback(errors.ErrorResponse(result));\n        }\n\n        if (!Jsonrpc.isValidResponse(result)) {\n          return requests[index].callback(errors.InvalidResponse(result));\n        }\n\n        requests[index].callback(null, requests[index].format ? requests[index].format(result.result) : result.result);\n      }\n    });\n  });\n};\n\nmodule.exports = Batch;","map":{"version":3,"names":["Jsonrpc","require","errors","Batch","requestManager","requests","prototype","add","request","push","execute","sendBatch","err","results","map","index","forEach","result","callback","error","ErrorResponse","isValidResponse","InvalidResponse","format","module","exports"],"sources":["C:/Users/User/Documents/clone-starter-kit-08/node_modules/caver-js/packages/caver-core-requestmanager/src/batch.js"],"sourcesContent":["/*\r\n    Modifications copyright 2018 The caver-js Authors\r\n    This file is part of web3.js.\r\n\r\n    web3.js is free software: you can redistribute it and/or modify\r\n    it under the terms of the GNU Lesser General Public License as published by\r\n    the Free Software Foundation, either version 3 of the License, or\r\n    (at your option) any later version.\r\n\r\n    web3.js is distributed in the hope that it will be useful,\r\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n    GNU Lesser General Public License for more details.\r\n\r\n    You should have received a copy of the GNU Lesser General Public License\r\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n    This file is derived from web3.js/packages/web3-core-requestmanager/src/batch.js (2019/06/12).\r\n    Modified and improved for the caver-js development.\r\n*/\r\n/**\r\n * @file batch.js\r\n * @author Marek Kotewicz <marek@ethdev.com>\r\n * @date 2015\r\n */\r\n\r\nconst Jsonrpc = require('./jsonrpc')\r\nconst errors = require('../../caver-core-helpers').errors\r\n\r\nconst Batch = function(requestManager) {\r\n    this.requestManager = requestManager\r\n    this.requests = []\r\n}\r\n\r\nBatch.prototype.add = function(request) {\r\n    this.requests.push(request)\r\n}\r\n\r\nBatch.prototype.execute = function() {\r\n    const requests = this.requests\r\n    this.requestManager.sendBatch(requests, function(err, results) {\r\n        results = results || []\r\n\r\n        requests\r\n            .map(function(request, index) {\r\n                return results[index] || {}\r\n            })\r\n            .forEach(function(result, index) {\r\n                /**\r\n                 * if callback is defined in requests[index]\r\n                 * 1) Check result.error - if existed throw ErrorResponse.\r\n                 * 2) Check result is valid json response object - if invalid throw InvalidResponse.\r\n                 * 3) After passing 1) 2), if there is format method in requests[index] do formatting, and then callback.\r\n                 */\r\n                if (requests[index].callback) {\r\n                    if (result && result.error) {\r\n                        return requests[index].callback(errors.ErrorResponse(result))\r\n                    }\r\n\r\n                    if (!Jsonrpc.isValidResponse(result)) {\r\n                        return requests[index].callback(errors.InvalidResponse(result))\r\n                    }\r\n\r\n                    requests[index].callback(null, requests[index].format ? requests[index].format(result.result) : result.result)\r\n                }\r\n            })\r\n    })\r\n}\r\n\r\nmodule.exports = Batch\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AAEA,MAAMA,OAAO,GAAGC,OAAO,CAAC,WAAD,CAAvB;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,0BAAD,CAAP,CAAoCC,MAAnD;;AAEA,MAAMC,KAAK,GAAG,UAASC,cAAT,EAAyB;EACnC,KAAKA,cAAL,GAAsBA,cAAtB;EACA,KAAKC,QAAL,GAAgB,EAAhB;AACH,CAHD;;AAKAF,KAAK,CAACG,SAAN,CAAgBC,GAAhB,GAAsB,UAASC,OAAT,EAAkB;EACpC,KAAKH,QAAL,CAAcI,IAAd,CAAmBD,OAAnB;AACH,CAFD;;AAIAL,KAAK,CAACG,SAAN,CAAgBI,OAAhB,GAA0B,YAAW;EACjC,MAAML,QAAQ,GAAG,KAAKA,QAAtB;EACA,KAAKD,cAAL,CAAoBO,SAApB,CAA8BN,QAA9B,EAAwC,UAASO,GAAT,EAAcC,OAAd,EAAuB;IAC3DA,OAAO,GAAGA,OAAO,IAAI,EAArB;IAEAR,QAAQ,CACHS,GADL,CACS,UAASN,OAAT,EAAkBO,KAAlB,EAAyB;MAC1B,OAAOF,OAAO,CAACE,KAAD,CAAP,IAAkB,EAAzB;IACH,CAHL,EAIKC,OAJL,CAIa,UAASC,MAAT,EAAiBF,KAAjB,EAAwB;MAC7B;AAChB;AACA;AACA;AACA;AACA;MACgB,IAAIV,QAAQ,CAACU,KAAD,CAAR,CAAgBG,QAApB,EAA8B;QAC1B,IAAID,MAAM,IAAIA,MAAM,CAACE,KAArB,EAA4B;UACxB,OAAOd,QAAQ,CAACU,KAAD,CAAR,CAAgBG,QAAhB,CAAyBhB,MAAM,CAACkB,aAAP,CAAqBH,MAArB,CAAzB,CAAP;QACH;;QAED,IAAI,CAACjB,OAAO,CAACqB,eAAR,CAAwBJ,MAAxB,CAAL,EAAsC;UAClC,OAAOZ,QAAQ,CAACU,KAAD,CAAR,CAAgBG,QAAhB,CAAyBhB,MAAM,CAACoB,eAAP,CAAuBL,MAAvB,CAAzB,CAAP;QACH;;QAEDZ,QAAQ,CAACU,KAAD,CAAR,CAAgBG,QAAhB,CAAyB,IAAzB,EAA+Bb,QAAQ,CAACU,KAAD,CAAR,CAAgBQ,MAAhB,GAAyBlB,QAAQ,CAACU,KAAD,CAAR,CAAgBQ,MAAhB,CAAuBN,MAAM,CAACA,MAA9B,CAAzB,GAAiEA,MAAM,CAACA,MAAvG;MACH;IACJ,CAtBL;EAuBH,CA1BD;AA2BH,CA7BD;;AA+BAO,MAAM,CAACC,OAAP,GAAiBtB,KAAjB"},"metadata":{},"sourceType":"script"}